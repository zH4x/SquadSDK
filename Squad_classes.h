#pragma once

// Name: Squad, Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Squad.CoreGetAllItemsCallbackProxy
// 0x0058 (0x0080 - 0x0028)
class UCoreGetAllItemsCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0048(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.CoreGetAllItemsCallbackProxy");
		return ptr;
	}


	class UCoreGetAllItemsCallbackProxy* STATIC_GetAllItems(class UObject* WorldContextObject);
};


// Class Squad.CoreInventoryBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UCoreInventoryBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.CoreInventoryBlueprintLibrary");
		return ptr;
	}


	struct FString STATIC_GetItemName(const struct FBlueprintOnlineItem& Result);
	int STATIC_GetItemId(const struct FBlueprintOnlineItem& Result);
	int STATIC_GetItemCount(const struct FBlueprintOnlineItem& Result);
};


// Class Squad.CoreSerializeItemSetCallbackProxy
// 0x0068 (0x0090 - 0x0028)
class UCoreSerializeItemSetCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0048(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.CoreSerializeItemSetCallbackProxy");
		return ptr;
	}


	class UCoreSerializeItemSetCallbackProxy* STATIC_SerializeItemSet(class UObject* WorldContextObject, TArray<struct FBlueprintOnlineItem> Items);
};


// Class Squad.HeatMapRecorder
// 0x00B0 (0x00D8 - 0x0028)
class UHeatMapRecorder : public UObject
{
public:
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0028(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.HeatMapRecorder");
		return ptr;
	}

};


// Class Squad.RelativeCanvasPanel
// 0x0000 (0x0128 - 0x0128)
class URelativeCanvasPanel : public UCanvasPanel
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.RelativeCanvasPanel");
		return ptr;
	}

};


// Class Squad.SQ_HexMenu_BaseAction
// 0x0000 (0x0028 - 0x0028)
class USQ_HexMenu_BaseAction : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQ_HexMenu_BaseAction");
		return ptr;
	}

};


// Class Squad.SQUndirectedGraph
// 0x0038 (0x0368 - 0x0330)
class ASQUndirectedGraph : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnLatticeUpdated;                                         // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class USQGraphNodeComponent*>               Nodes;                                                    // 0x0348(0x0010) (ExportObject, Net, ZeroConstructor)
	TArray<struct FSQGraphLink>                        Links;                                                    // 0x0358(0x0010) (Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQUndirectedGraph");
		return ptr;
	}


	void RemoveNode(class USQGraphNodeComponent* Node);
	void RemoveLink(const struct FSQGraphLink& Link);
	void GetNodes(TArray<class USQGraphNodeComponent*>* InOutNodes);
	void GetLinks(TArray<struct FSQGraphLink>* InOutLinks);
	void ClearNodesAndLinks();
	void AddNode(class USQGraphNodeComponent* Node);
	void AddLink(const struct FSQGraphLink& Link);
};


// Class Squad.SQAASGraph
// 0x0018 (0x0380 - 0x0368)
class ASQAASGraph : public ASQUndirectedGraph
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0368(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAASGraph");
		return ptr;
	}


	void RemoveSourceNode(class USQGraphNodeComponent* Node);
	void PostNodeOwnerChanged(class USQCaptureZoneComponent* CaptureZone, unsigned char Team);
	void GetTeamSourceNodes(unsigned char Team, TArray<class USQGraphNodeComponent*>* InOutNodes);
	void GetSourceNodes(TArray<class USQGraphNodeComponent*>* InOutNodes);
	void AddSourceNode(class USQGraphNodeComponent* Node);
};


// Class Squad.SQUserWidget
// 0x0000 (0x0208 - 0x0208)
class USQUserWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQUserWidget");
		return ptr;
	}


	void SelfRemove();
	void BPInit();
};


// Class Squad.SQMapLattice
// 0x0018 (0x0220 - 0x0208)
class USQMapLattice : public USQUserWidget
{
public:
	TArray<struct FSQLatticeLine>                      LatticeLines;                                             // 0x0208(0x0010) (BlueprintVisible, ZeroConstructor)
	class USQCoreStateMapComponent*                    MapComponent;                                             // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapLattice");
		return ptr;
	}


	struct FVector2D WorldLocationToDrawLocation(const struct FVector& Location);
	void DrawWidget(const struct FPaintContext& Context);
};


// Class Squad.SQAASGraphLattice
// 0x0040 (0x0260 - 0x0220)
class USQAASGraphLattice : public USQMapLattice
{
public:
	bool                                               bHidesUncapLinks;                                         // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0221(0x0003) MISSED OFFSET
	struct FLinearColor                                LatticeNeutralColor;                                      // 0x0224(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LatticeEnemyColor;                                        // 0x0234(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LatticeFriendlyColor;                                     // 0x0244(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LineThickness;                                            // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQAASGraph*                                 lattice;                                                  // 0x0258(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAASGraphLattice");
		return ptr;
	}

};


// Class Squad.SQGameRuleSet
// 0x0028 (0x0358 - 0x0330)
class ASQGameRuleSet : public AActor
{
public:
	class UClass*                                      RulesetStateClass;                                        // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class ASQRulesetState*                             RulesetState;                                             // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	bool                                               bUseTickets;                                              // 0x0340(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0341(0x0003) MISSED OFFSET
	int                                                RoundTimeOverride;                                        // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     DisplayName;                                              // 0x0348(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameRuleSet");
		return ptr;
	}


	void VehicleDestroyed(class ASQPlayerController* Killer, class ASQPlayerController* Victim, class ASQVehicle* DestroyedVehicle);
	void UnregisterActor(class AActor* Actor);
	void SetRoundTimeOverride(int InRoundTimeOverride);
	void SendChatMessage(ESQChat ChatType, const struct FString& Message, ESQTeam Team, int Squad, bool bBroadcastToAdmin);
	void SecondPassed();
	void RegisterActor(class AActor* Actor);
	ESQReadyToEndMatch ReadyToEndMatch();
	void PostPlayerSpawn(class ASQSoldier* SpawningSoldier);
	void PostPlayerLogout(class AController* Controller);
	void PostPlayerLogin(class APlayerController* Controller);
	void PlayerWounded(class ASQPlayerController* Killer, class ASQPlayerController* Victim);
	void PlayerWound(class ASQPlayerController* Victim);
	void PlayerTeamWounded(class ASQPlayerController* Killer, class ASQPlayerController* Victim);
	void PlayerTeamKilled(class ASQPlayerController* Killer, class ASQPlayerController* Victim);
	void PlayerSuicide(class ASQPlayerController* Victim);
	void PlayerSpawned(class ASQPlayerController* NewPlayer);
	void PlayerSelfWound(class ASQPlayerController* Victim);
	void PlayerSelfHealed(class ASQPlayerController* Healer);
	void PlayerSelfBandaged(class ASQPlayerController* Bandager);
	void PlayerRevived(class ASQPlayerController* Reviver, class ASQPlayerController* RevivedPlayer);
	void PlayerKilled(class ASQPlayerController* Killer, class ASQPlayerController* Victim);
	void PlayerJoinedTeam(class ASQPlayerController* Player, int TeamIndex);
	void PlayerJoined(class ASQPlayerController* NewPlayer);
	void PlayerHealed(class ASQPlayerController* Healer, class ASQPlayerController* HealedPlayer);
	void PlayerDied(class ASQPlayerController* Victim);
	void PlayerBandaged(class ASQPlayerController* Bandager, class ASQPlayerController* BandagedPlayer);
	void NotifyPlayerOnScoreEvent(class ASQPlayerController* Player, const struct FSQScoreEvent& ScoreEvent);
	void NotifyPlayer(class ASQPlayerController* Player, const struct FString& Message, ESQNotificationTypes NotificationType);
	void ModifySoldierInventory(class ASQSoldier* Soldier);
	void MatchStarted();
	void MatchIsWaitingToStart();
	void LogisticsDropOff(class AActor* VehicleActor, float AmmoDroppedOff, float ConstructionDroppedOff);
	int GetRoundTimeRemaining();
	int GetRoundTimeOverride();
	class ASQGameMode* GetGameMode();
	struct FString GetDisplayName();
};


// Class Squad.SQGameModeRuleset
// 0x0038 (0x0390 - 0x0358)
class ASQGameModeRuleset : public ASQGameRuleSet
{
public:
	TArray<struct FSQInventoryMod>                     InventoryModifications;                                   // 0x0358(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FText                                       PlayerJoinedMessageToPlayer;                              // 0x0368(0x0018) (Edit, BlueprintVisible)
	TArray<struct FSQGameModeRules>                    RulesToBeShownWhenPlayersJoinATeam;                       // 0x0380(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameModeRuleset");
		return ptr;
	}


	void SetWinningTeamFromEnum(ESQTeam Team);
	void SetWinningTeam(class ASQTeam* Team);
	void SendMessageToPlayer(class ASQPlayerController* Player, const struct FString& Message, const struct FLinearColor& Color, float MessageLifetime);
};


// Class Squad.SQAASRuleset
// 0x0008 (0x0398 - 0x0390)
class ASQAASRuleset : public ASQGameModeRuleset
{
public:
	class ASQAASGraph*                                 GraphActor;                                               // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAASRuleset");
		return ptr;
	}


	void LatticeUpdated();
};


// Class Squad.SQPlayerController
// 0x03E0 (0x0A60 - 0x0680)
class ASQPlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	class ASQTeam*                                     AuthorityTeam;                                            // 0x0688(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQTeamState*                                TeamState;                                                // 0x0690(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class ASQTeamStatePrivate*                         PrivateTeamState;                                         // 0x0698(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class ASQSquad*                                    AuthoritySquad;                                           // 0x06A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQSquadState*                               SquadState;                                               // 0x06A8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class ASQSquadStatePrivateToTeam*                  TeamPrivateSquadState;                                    // 0x06B0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class USQCoreStateConnection*                      StateConnection;                                          // 0x06B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              SpawnMenuPopupDelay;                                      // 0x06C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	class USQAdminComponent*                           AdminComponent;                                           // 0x06C8(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      AdminComponentClass;                                      // 0x06D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class ASQSoldier*                                  LastSpawnedSoldier;                                       // 0x06D8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x06E0(0x0001) MISSED OFFSET
	bool                                               AreCommunicationButtonsAllowed;                           // 0x06E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsCrouchedDuringMenu : 1;                                // 0x06E2(0x0001) (BlueprintVisible)
	unsigned char                                      bIsPronedDuringMenu : 1;                                  // 0x06E2(0x0001) (BlueprintVisible)
	bool                                               IsWinner;                                                 // 0x06E3(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeBecameIncapacitated;                                  // 0x06E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              SpawnDelayPenalties;                                      // 0x06E8(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpawnDelay;                                            // 0x06EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bWasInVehicle;                                            // 0x06F0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x06F1(0x0007) MISSED OFFSET
	TArray<ESQAdminAccessLevels>                       AccessLevel;                                              // 0x06F8(0x0010) (Net, ZeroConstructor)
	class ASQDeployable*                               ActiveGhost;                                              // 0x0708(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                CheckValidGhostTimerHandle;                               // 0x0710(0x0008) (BlueprintVisible)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0718(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerEnterVehicleEvent;                                // 0x0730(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerExitVehicleEvent;                                 // 0x0740(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChatStarted;                                            // 0x0750(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      ToastWidgetClass;                                         // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       ChangeRoleNoAmmoText;                                     // 0x0768(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       AmmoBagNoAmmoText;                                        // 0x0780(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       MaxAmmoBagText;                                           // 0x0798(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       RearmFromAmmoBagText;                                     // 0x07B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       RoleCannotPickupAmmoBagText;                              // 0x07C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       RearmFromVehicleNoAmmoText;                               // 0x07E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       RearmFromVehicleConfirmationText;                         // 0x07F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       RearmFromVehiclePromptText;                               // 0x0810(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              WalkingOriginRebaseThreshold;                             // 0x0828(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RidingOriginRebaseThreshold;                              // 0x082C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LeaveVehicleOriginRebaseThreshold;                        // 0x0830(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OriginRebaseFrequency;                                    // 0x0834(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              MapMarkerArray;                                           // 0x0838(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnNewMarkerCreatedEvent;                                  // 0x0848(0x0010) (ZeroConstructor, InstancedReference)
	class USQAdminStats*                               AdminStats;                                               // 0x0858(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UClass*>                              SpawnableActors;                                          // 0x0860(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class USQVehicleSeatComponent*                     CurrentSeat;                                              // 0x0870(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              AlwaysRenderPawnsDistance;                                // 0x0878(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x34];                                      // 0x087C(0x0034) MISSED OFFSET
	class UAudioComponent*                             MusicAC;                                                  // 0x08B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  MusicSound;                                               // 0x08B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FSQSystemHUDMessage>                 QueuedSystemMessages;                                     // 0x08C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UClass*>                              RefreshTypes;                                             // 0x08D0(0x0010) (Edit, ZeroConstructor)
	class USQDataGatheringComponent*                   DataGatheringComponent;                                   // 0x08E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQCommanderInputComponent*                  CommanderInputComponent;                                  // 0x08E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQBoundaryListener*                         BoundaryListener;                                         // 0x08F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              OutOfMapBoundsKillTimestamp;                              // 0x08F8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x08FC(0x0004) MISSED OFFSET
	class APawn*                                       LastRefreshedPawn;                                        // 0x0900(0x0008) (ZeroConstructor, IsPlainOldData)
	class ASQGameSpawn*                                SelectedSpawn;                                            // 0x0908(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0910(0x0008) MISSED OFFSET
	TMap<uint32_t, struct FSQApprovalEntryRequest>     ApprovalEntries;                                          // 0x0918(0x0050) (ZeroConstructor)
	TMap<uint32_t, struct FSQApprovalEntryClientDesc>  ApprovalEntriesOnClient;                                  // 0x0968(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData08[0x20];                                      // 0x09B8(0x0020) MISSED OFFSET
	float                                              PawnRenderDistance;                                       // 0x09D8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x34];                                      // 0x09DC(0x0034) MISSED OFFSET
	TMap<struct FUniqueNetIdRepl, class ASQPlayerState*> CachedPlayersToMute;                                      // 0x0A10(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPlayerController");
		return ptr;
	}


	void UnmuteSquad(class ASQSquadState* MuteSquadState);
	void UnmuteAllPlayersExceptSquad();
	bool TryClaimVehicle(class ASQVehicle* Vehicle);
	void ToggleMutePlayer(class ASQPlayerState* MutePlayerState);
	float TimeUntilCanSpawn();
	void StopMusic();
	void SQSM_SetServerUpdateRate(float Value);
	void SQSM_SetNonRenderedUpdateRate(float Value);
	void SQSM_SetDistanceFactorThesholds(int Index, float Value);
	void SQSM_RemoveDistanceFactorThesholds(int srcIndex, int Count);
	void SQSM_PrintDistanceFactorThesholds();
	void SQSM_InsertDistanceFactorThesholds(int Index, float Value);
	void SimulateInputKey(const struct FKey& Key, bool bPressed);
	void ShowToast(const struct FText& ToastText, float LifeTime, bool bForceSlate);
	void ShowNextMap();
	bool ShouldDirectSpawn();
	void ShareRallyPoint(int SquadId);
	void SetWorldOrigin(const struct FIntVector& NewOrigin);
	void SetSelectionMode(bool bEnabled);
	void SetRoamingMapOpen(bool bOpen);
	void SetOutOfMapBoundsKillTimestamp(float Timestamp);
	void SetIgnoreWeaponInput(bool bNewClickInput);
	void ServerUnmuteSquad(class ASQSquadState* MuteSquadState);
	void ServerTryClaimVehicle(class ASQVehicle* VehicleToClaim);
	void ServerTryApproveVehicleClaim();
	void ServerSwitchSeat(int Index);
	void ServerSuicide();
	void ServerStartHealing(class ASQSoldier* HealedSoldier);
	void ServerSLInviteMember(class ASQPlayerState* PlayerToInvite);
	void ServerShowNextMap();
	void ServerShareRallyPoint(int SquadId);
	void ServerSetVoipHandAnim(ESQVoiceChannel VoiceChannel);
	void ServerSetMuteAllPlayersExceptSquad(bool bMute);
	void ServerSay(const struct FString& Msg);
	void ServerRequestRestartPlayer(class ASQGameSpawn* Spawn);
	void ServerRequestPlaceDeployable(class UClass* DeployableClass, const struct FVector& DeployableLocation, const struct FRotator& DeployableRotation, const struct FVector& DeployableScale);
	void ServerRequestDeployRole(class USQRoleSettings* NewRole);
	void ServerRemoveVehicleOverlayWidget();
	void ServerRearmWeapons(class UObject* RearmObject, TArray<struct FSQRearmWeaponRequest> RearmRequest);
	void ServerProcessApprovalEntry(unsigned char Mode, uint32_t VerifyKey);
	void ServerPlayEmoteAnim(ESQEmotes Emote);
	void ServerPlayCustomEmote(const struct FName& CustomName);
	void ServerOnPlayerToggleVoice_Editor(const struct FUniqueNetIdRepl& TalkingPlayerId, ESQVoiceChannel VoiceChannel);
	void ServerNotifyExplosiveHit(const struct FSQShotInfo& ShotInfoZeroBased, TArray<struct FSQPenetrationTrace> TargetsZeroBased, const struct FHitResult& HitResult, const struct FArmorPenetration& CachedPenetration, const struct FSQWeaponData& WeaponConfig);
	void ServerMuteSquad(class ASQSquadState* MuteSquadState);
	void ServerMovePlayerToFireTeam(class ASQPlayerState* TargetPlayerState, int FireTeamIndex, int Position);
	void ServerLeaveSquad();
	void ServerKickPlayerFromSquad(class ASQPlayerState* ToKick);
	void ServerJoinSquad(class ASQSquadStatePrivateToTeam* ToJoin);
	void ServerGiveUp();
	void ServerGiveSquadLeader(class ASQPlayerState* NewLeader);
	void ServerGiveFireTeamLeader(class ASQPlayerState* NewLeader, int FireTeamIndex);
	void ServerGameplayUnmutePlayer(const struct FUniqueNetIdRepl& MutePlayerId);
	void ServerGameplayMutePlayer(const struct FUniqueNetIdRepl& MutePlayerId);
	void ServerGameCommandFromRemotePlayer(const struct FString& Cmd);
	void ServerFinishSeatProgress(class ASQVehicle* Vehicle);
	void ServerEndHealing();
	void ServerDisbandSquad();
	void ServerDisbandFireTeam(int FireTeamIndex);
	void ServerDebugSetServerTickRate(float NewTickRate);
	void ServerCreateVehicleOverlayWidget(class UClass* WidgetClass);
	void ServerCreateSquad(const struct FString& Name, bool Locked);
	void ServerCreateRallyPoint();
	void ServerChat(const struct FString& Msg, ESQChat ChatType);
	void ServerChangeSquadLock(class ASQSquadState* Squad);
	void ServerChangeRoleFromDeployable(class USQRoleSettings* NewRole, class ASQDeployable* Deployable);
	void ServerChangeRole(class USQRoleSettings* NewRole, bool bGivePartialAmmo, bool bLeavingSquad);
	void ServerCancelRestartPlayer();
	void ServerAddApprovalEntry(const struct FSQApprovalEntryRequest& Entry, EApprovalRequestChannels Filter);
	void SelectSpawn(class ASQGameSpawn* Spawn);
	void Say(const struct FString& Msg);
	void Respawn();
	void RequestPlaceDeployable();
	void ProcessApprovalEntry(unsigned char Mode);
	void PrintWeaponHashes();
	void PlayMusic();
	void PlayEmoteAnim(ESQEmotes Emote, const struct FName& CustomName);
	void OnSpawningEnabledStateChanged(bool bEnabled);
	void OnSelectedSpawnSiegedStateChanged(bool bSieged);
	void OnSelectedSpawnerDestroyed(class AActor* Actor);
	void OnRep_TeamState();
	void OnRep_SquadState(class ASQSquadState* OldSquadState);
	void OnRep_OutOfMapBoundsKillTimestamp();
	void OnRep_CurrentSeat();
	void OnReceiveChat(class ASQPlayerState* Speaker, const struct FString& Message, ESQChat Channel, ESQNotificationTypes NotificationType);
	void OnOutOfMapBoundsChanged(float KillTimestamp, bool bIsOutOfBounds);
	bool OnFireWeaponOverride();
	void OnExitBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary);
	void OnEnterBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary);
	void OnDelayedSpawnCallback();
	bool OnAltFireWeaponOverride();
	void MuteSquad(class ASQSquadState* MuteSquadState);
	void MuteAllPlayersExceptSquad();
	void MovePlayerToFireTeam(class ASQPlayerState* TargetPlayerState, int FireTeamIndex, int Position);
	void LeaveSquad();
	void KickPlayerFromSquad(class ASQPlayerState* ToKick);
	void JoinSquadWithName(const struct FString& Name);
	void JoinSquadWithId(int ID);
	bool IsWeaponInputIgnored();
	bool IsUsingFreeLook();
	bool IsSquadLeader();
	bool IsShowingSpawnMenu();
	bool IsRoamingMapOpen();
	bool IsQA();
	bool IsPlayer();
	bool IsOutOfMapBounds();
	bool IsMember();
	bool IsInVehicle();
	bool IsInactive();
	bool IsEntryMap();
	bool IsDev();
	bool IsCommander();
	bool IsCameraMan();
	bool IsAdminCamera();
	bool IsAdmin();
	void GiveUp();
	void GiveSquadLeader(class ASQPlayerState* NewLeader);
	void GiveFireTeamLeader(class ASQPlayerState* NewLeader, int FireTeamIndex);
	float GetYawInputScale();
	int GetTeam();
	class ASQGameSpawn* GetSelectedSpawn();
	float GetPitchInputScale();
	float GetOutOfMapBoundsKillTimestamp();
	float GetLastDeathTime();
	class USQRoleSettings* GetDeployRole();
	class ASQVehicle* GetCurrentVehicle();
	class ASQVehicleSeat* GetCurrentSeatPawn();
	class USQVehicleSeatComponent* GetCurrentSeat();
	class USQRoleSettings* GetCurrentRole();
	void DisplayFailedDeployReason(class ASQDeployable* Deployable, ESQInvalidPlacementReason Reason);
	void DisbandSquad();
	void DisbandFireTeam(int FireTeamIndex);
	void DisapproveQueue();
	void DebugToggleCenterDot();
	void DebugSetServerTickRate(float NewTickRate);
	void CreateSquad(const struct FString& Name, bool Locked);
	void CreateRallyPoint();
	void CreateMarker(int TeamID, int ClientId, class UTexture2D* IconTexture, const struct FVector2D& MapPosition, float LifeT, class AActor* MyOwner);
	void CoreStateRefreshVisibility();
	void CommitSpawn();
	void CloseConsole();
	void ClientWasKickedFromSquad(const struct FText& KickReason, int SquadId, float DurationOfBan);
	void ClientSystemMessage(const struct FString& Message, const struct FLinearColor& Color, float MessageLifetime, ESQNotificationTypes NotificationType);
	void ClientStartSeatProgressBar(float Timer, class ASQVehicle* Vehicle, ESeatProgressMenuMode MenuMode);
	void ClientStartOnlineGame();
	void ClientStartingNewPlayer();
	void ClientShowVehicleInventory(class ASQVehicle* Vehicle, ESeatProgressMenuMode MenuMode);
	void ClientShowToast(const struct FText& ToastText, float LifeTime);
	void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	void ClientSendRoundEndEvent(int WinningTeam, int LosingTeam, int WinnerTickets, int LoserTickets);
	void ClientSendLineToConsole(const struct FString& Line);
	void ClientResetInventoryWeaponIndex();
	void ClientRemoveVehicleOverlayWidget();
	void ClientPushApprovalMessage(uint32_t Key, const struct FString& ApprovalMessage, int IconIndex, const struct FString& Description, float Duration);
	void ClientOpenAmmoBag(class ASQDeployableAmmoBag* ammobag);
	void ClientOnPlayerToggleVoice_Editor(const struct FUniqueNetIdRepl& TalkingPlayerId, ESQRemoteTalkerDisplayChannel VoiceChannel);
	void ClientIgnoreWeaponInput(bool bIgnore);
	void ClientHideVehicleRadial();
	void ClientGameStarted();
	void ClientEndOnlineGame();
	void ClientEndHealing();
	void ClientCreateVehicleOverlayWidget(class UClass* WidgetClass);
	void ClientCloseAmmoBag(class ASQDeployableAmmoBag* ammobag);
	void ClientChat(class ASQPlayerState* Speaker, const struct FString& Message, ESQChat Channel, ESQNotificationTypes NotificationType);
	void CheckValidGhost();
	void CheckForAdmin();
	void ChatToTeam(const struct FString& Msg);
	void ChatToSquad(const struct FString& Msg);
	void ChatToAll(const struct FString& Msg);
	void Chat(const struct FString& Msg, ESQChat ChatType);
	void ChangeTeamsWithId(int NewTeam);
	void ChangeTeams();
	void ChangeRoleFromDeployable(class USQRoleSettings* NewRole, class ASQDeployable* Deployable);
	void ChangeRole(class USQRoleSettings* NewRole, bool bGivePartialAmmo, bool bLeavingSquad);
	void CancelGhost();
	void BPTraceMarkerLocation(class UClass* MarkerClass, const struct FVector& Start, const struct FVector& End);
	void BPServerRearmWeapons(const TScriptInterface<class USQRearmSource>& RearmSource, TArray<struct FSQRearmWeaponRequest> RearmRequest);
	bool BPHasAccessLevel(ESQAdminAccessLevels RequestedLevel);
	void BlueprintPlayerSpawned();
	void BlueprintPlayerDied();
	void BlueprintOnMatchEnded(int WinningTeam, int LosingTeam, int WinnerTickets, int LoserTickets);
	void BeginGhost(class UClass* DeployableType);
	void BeginDragBody();
	void AttempPlaceDeployable();
	void ApproveVehicleClaim();
	void ApproveQueue();
	void ApprovalEntryExpireOnServer(uint32_t Index);
	void ApprovalEntryExpireOnClient(uint32_t Index);
};


// Class Squad.SQAdminComponent
// 0x0000 (0x00F0 - 0x00F0)
class USQAdminComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAdminComponent");
		return ptr;
	}


	void SLInviteMember(const struct FString& PlayerNameId);
	void ServerWarnById(int PlayerId, const struct FString& WarnReason);
	void ServerWarn(const struct FString& NameOrId, const struct FString& WarnReason);
	void ServerUnpauseMatch();
	void ServerSpawnBots(int NumberOfBotsToSpawn);
	void ServerSpawnBlueprint(const struct FString& BlueprintPath);
	void ServerSpawnActor(int Index);
	void ServerSlomo(float TimeDilation);
	void ServerSetServerPassword(const struct FString& ServerPassword);
	void ServerSetNumReservedSlots(int NumReserved);
	void ServerSetNextMap(const struct FString& MapName);
	void ServerSetMaxNumPlayers(int NumPlayers);
	void ServerRestartMatch();
	void ServerRemovePlayerFromSquad(const struct FString& PlayerName);
	void ServerProfileServer(int SecondsToProfileFor, bool bUseRaw);
	void ServerPauseMatch();
	void ServerKillServer(bool bForce);
	void ServerKickById(int PlayerId, const struct FString& KickReason);
	void ServerKick(const struct FString& NameOrId, const struct FString& KickReason);
	void ServerEndMatch(bool bChangingMap);
	void ServerDisableVehicleClaiming(bool bDisableVehicleClaiming);
	void ServerDemoteCommander(const struct FString& PlayerName);
	void ServerDemoStop();
	void ServerDemoRec(const struct FString& Filename);
	void ServerCreateVehicle(const struct FString& VehicleClass);
	void ServerChat(const struct FString& Message, ESQChat ChatChannel);
	void ServerChangeMap(const struct FString& MapName);
	void ServerBanById(int PlayerId, const struct FString& BanLength, const struct FString& BanReason);
	void ServerBan(const struct FString& NameOrId, const struct FString& BanLength, const struct FString& BanReason);
	void ServerAlwaysValidPlacement(bool bAlwaysValidPlacement);
	void ServerAllKitsAvailable(bool bAllKitsAvailable);
	void ServerAdminDisbandSquad(int TeamIndex, int SquadIndex);
	void ServerAddCameraman(const struct FString& NameOrId);
	void ChatToAdmin(const struct FString& Message);
	void AdminWarnById(int PlayerId, const struct FString& WarnReason);
	void AdminWarn(const struct FString& NameOrId, const struct FString& WarnReason);
	void AdminUnpauseMatch();
	void AdminToggleBot();
	void AdminSpawnBots(int NumberOfBotsToSpawn);
	void AdminSpawnBlueprint(const struct FString& BlueprintPath);
	void AdminSpawnActor(int Index);
	void AdminSlomo(float TimeDilation);
	void AdminSetServerPassword(const struct FString& ServerPassword);
	void AdminSetNumReservedSlots(int NumReserved);
	void AdminSetNextMap(const struct FString& MapName);
	void AdminSetMaxNumPlayers(int NumPlayers);
	void AdminRestartMatch();
	void AdminRemovePlayerFromSquadById(int PlayerId);
	void AdminRemovePlayerFromSquad(const struct FString& PlayerName);
	void AdminProfileServer(int SecondsToProfileFor, bool bUseRaw);
	void AdminPauseMatch();
	void AdminKillServer(bool bForce);
	void AdminKickById(int PlayerId, const struct FString& KickReason);
	void AdminKick(const struct FString& NameOrId, const struct FString& KickReason);
	void AdminEndMatch();
	void AdminDisbandSquad(int TeamIndex, int SquadIndex);
	void AdminDisableVehicleClaiming(bool bDisableVehicleClaiming);
	void AdminDemoteCommanderById(int PlayerId);
	void AdminDemoteCommander(const struct FString& PlayerName);
	void AdminDemoStop();
	void AdminDemoRec(const struct FString& Filename);
	void AdminDemoPlay(const struct FString& Filename);
	void AdminCreateVehicle(const struct FString& VehicleClass);
	void AdminChangeMap(const struct FString& MapName);
	void AdminBroadcast(const struct FString& Message);
	void AdminBanById(int PlayerId, const struct FString& BanLength, const struct FString& BanReason);
	void AdminBan(const struct FString& NameOrId, const struct FString& BanLength, const struct FString& BanReason);
	void AdminAlwaysValidPlacement(bool bAlwaysValidPlacement);
	void AdminAllKitsAvailable(bool bAllKitsAvailable);
	void AdminAddCameraman(const struct FString& NameOrId);
};


// Class Squad.SQAdminPanel
// 0x0000 (0x0208 - 0x0208)
class USQAdminPanel : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAdminPanel");
		return ptr;
	}

};


// Class Squad.SQAdminStats
// 0x0018 (0x0108 - 0x00F0)
class USQAdminStats : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00F0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAdminStats");
		return ptr;
	}

};


// Class Squad.SQAIController
// 0x0020 (0x0460 - 0x0440)
class ASQAIController : public AAIController
{
public:
	class UBlackboardComponent*                        BlackboardComp;                                           // 0x0440(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBehaviorTreeComponent*                      BehaviorComp;                                             // 0x0448(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0450(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAIController");
		return ptr;
	}


	void STATIC_SpawnBots(int NumberOfBotsToSpawn);
	void ShootEnemy();
	bool IsEnemy(class ASQSoldier* Soldier);
	bool FindClosestEnemyWithLOS(class ASQSoldier* ExcludeEnemy);
	void FindClosestEnemy();
};


// Class Squad.SQAmbientAndReverbComponent
// 0x0060 (0x02B0 - 0x0250)
class USQAmbientAndReverbComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0250(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnComponentEndOverlap;                                    // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0268(0x0008) MISSED OFFSET
	struct FSQReverbVolumeEffect                       ReverbEffectSettings;                                     // 0x0270(0x0020) (Edit, BlueprintVisible)
	class UAudioComponent*                             SoundComponent;                                           // 0x0290(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundBase*                                  SoundEffect;                                              // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientFadeInTime;                                        // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientFadeOutTime;                                       // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAmbientAndReverbComponent");
		return ptr;
	}


	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class Squad.SQEquipableItem
// 0x0250 (0x0580 - 0x0330)
class ASQEquipableItem : public AActor
{
public:
	class USQItemStaticInfo*                           ItemStaticInfo;                                           // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemStaticInfoClass;                                      // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0340(0x0028) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPawnOwnerChangedEvent;                                  // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FText                                       DisplayName;                                              // 0x0378(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ItemDescription;                                          // 0x0390(0x0018) (Edit, BlueprintVisible)
	int                                                RearmTypesAllowed;                                        // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseOwnerAsMasterPose;                                    // 0x03AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03AD(0x0003) MISSED OFFSET
	struct FVector2D                                   SwayMultiplierInStanding;                                 // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SwayMultiplierInCrouch;                                   // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SwayMultiplierInProne;                                    // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmmoPerRearmItem;                                         // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	float                                              UnequippedNetUpdateRate;                                  // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESQEquippableActionState                           ActionState;                                              // 0x03D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03D5(0x0003) MISSED OFFSET
	class UBlendSpace1D*                               SprintBlendspace;                                         // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WalkForwardAnim;                                          // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               IdleAnim;                                                 // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               UseAnim;                                                  // 0x03F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandAnim;                                                // 0x03F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               EquipAnim;                                                // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               UnequipAnim;                                              // 0x0408(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AltUseAnim;                                               // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Custom1Anim;                                              // 0x0418(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Custom2Anim;                                              // 0x0420(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Custom3Anim;                                              // 0x0428(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PreUseAnim;                                               // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PostUseAnim;                                              // 0x0438(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PreAltUseAnim;                                            // 0x0440(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PostAltUseAnim;                                           // 0x0448(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HUDSelectedTexture;                                       // 0x0450(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HUDTexture;                                               // 0x0458(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowItemCountInInventory;                                // 0x0460(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowMagCountInInventory;                                 // 0x0461(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowAmmoDataInHud;                                       // 0x0462(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0463(0x0001) MISSED OFFSET
	int                                                ItemCount;                                                // 0x0464(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxItemCount;                                             // 0x0468(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      bCannotRearm : 1;                                         // 0x046C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData05[0x7];                                       // 0x046D(0x0007) MISSED OFFSET
	float                                              EquipDuration;                                            // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UnequipDuration;                                          // 0x0478(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x047C(0x0008) MISSED OFFSET
	float                                              RearmCounterMultiplier;                                   // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             Root;                                                     // 0x0488(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh1P;                                                   // 0x0490(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh3P;                                                   // 0x0498(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class APawn*                                       PawnOwner;                                                // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class APlayerController*                           LocalPlayerController;                                    // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    PlayAnimationEvent;                                       // 0x04B0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    PauseAnimationEvent;                                      // 0x04C0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    ResumeAnimationEvent;                                     // 0x04D0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    SetAnimationPlayRateEvent;                                // 0x04E0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    EndLoopAnimationEvent;                                    // 0x04F0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    StopAnimationEvent;                                       // 0x0500(0x0010) (ZeroConstructor, InstancedReference)
	struct FSQAudioComponentPool                       AudioComponentPool;                                       // 0x0510(0x0020)
	class UAnimInstance*                               CachedWeapon1pAnimInstance;                               // 0x0530(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimInstance*                               CachedWeapon3pAnimInstance;                               // 0x0538(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQAnimInstanceSoldier1P*                    CachedSoldier1pAnimInstance;                              // 0x0540(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQAnimInstanceSoldier3P*                    CachedSoldier3pAnimInstance;                              // 0x0548(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedEquipDuration;                                      // 0x0550(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedUnequipDuration;                                    // 0x0554(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQEquippableState                                 EquipState;                                               // 0x0558(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedMoveBobbing;                                       // 0x0559(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedSprintBobbing;                                     // 0x055A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedHasMovement;                                       // 0x055B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsPullingTrigger;                                  // 0x055C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsLeaningRight;                                    // 0x055D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsLeaningLeft;                                     // 0x055E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x055F(0x0001) MISSED OFFSET
	float                                              CachedDeltaTime;                                          // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1C];                                      // 0x0564(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQEquipableItem");
		return ptr;
	}


	void UpdateSprintBobbing(bool bForceStopLoop);
	void UpdateMoveInputs(bool bForceStopLoop);
	void UpdateMoveBobbing();
	void UpdateLeanRight();
	void UpdateLeanLeft();
	void UpdateFirstPersonVisibility();
	class ASQDeployable* ShovelHitDeployable(const struct FHitResult& HitResult, bool bRemovingHealth);
	void SetLoweringAnimation(bool bLowered);
	void ServerConsumeItem();
	void ReinitializeEquip();
	void ReinitializeAnimInstances();
	float Rearm(int Quantity);
	void PlayUnequipAnimation();
	void PlaySoundAttachedToWeapon(class USoundCue* Sound1p, class USoundCue* Sound3p, const struct FName& SocketName, const struct FVector& FallbackOrigin);
	void PlayEquipAnimation();
	void Pickup();
	void PendingEquip();
	bool IsFirstPersonViewTarget();
	bool IsEquipped();
	bool IsBeingUsed();
	bool IsAmmoFull();
	void InitializeAmmoValues(const struct FSQInventoryData& ItemClass, bool bSpawnMaxAmmo, const struct FSQPersistedAmmoCount& PersistedAmmo);
	bool HasAmmo();
	int GetRearmMaxItemCount();
	int GetRearmItemCount();
	class APawn* GetOwnerPawn();
	class USkeletalMeshComponent* GetMesh(bool bGetMesh1P);
	class USQItemStaticInfo* GetItemStaticInfo();
	struct FVector GetFireDirection();
	void EndUse();
	void EndAltUse();
	void Drop();
	struct FSQPersistedAmmoCount CreatePersistingAmmoCount();
	class ASQDeployable* CanShovel(int ShovelTraceLength, float ShovelTraceSphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bRemovingHealth);
	bool CanRearmFromType(ESQRearmType RearmType);
	bool CanRearm();
	float CalculateRearmAmmoCost(int QuantityToRearm);
	int CalculateMissingRearmItems();
	float CalculateMissingAmmoCost();
	float CalculateMaxAmmoCost(int MaxCount);
	void BPEndUse();
	void BPEndAltUse();
	void BPBeginUse();
	void BPBeginAltUse();
	void BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible);
	void BlueprintOnUnequipped();
	void BlueprintOnUnequip();
	void BlueprintOnEquipped();
	void BlueprintOnEquip();
	void BlueprintDrawHUD(class UCanvas* Canvas);
	void BeginUse();
	void BeginAltUse();
};


// Class Squad.SQWeapon
// 0x02C8 (0x0848 - 0x0580)
class ASQWeapon : public ASQEquipableItem
{
public:
	class USQWeaponStaticInfo*                         WeaponStaticInfo;                                         // 0x0580(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FSQAudioComponentPool                       FiringAudioComponentPool;                                 // 0x0588(0x0020)
	unsigned char                                      UnknownData00[0x28];                                      // 0x05A8(0x0028) MISSED OFFSET
	struct FTimerHandle                                ZoomFinishAdsTransitionTimerHandle;                       // 0x05D0(0x0008)
	unsigned char                                      bFiring : 1;                                              // 0x05D8(0x0001) (Net)
	unsigned char                                      bReloading : 1;                                           // 0x05D8(0x0001) (Net)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05D9(0x0007) MISSED OFFSET
	struct FSQWeaponData                               WeaponConfig;                                             // 0x05E0(0x00C0) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	ESQWeaponState                                     CurrentState;                                             // 0x06A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x06A1(0x0003) MISSED OFFSET
	float                                              ADSMoveSpeedMultiplier;                                   // 0x06A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAimingDownSights;                                        // 0x06A8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFireInput;                                               // 0x06A9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPendingFire;                                             // 0x06AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xD];                                       // 0x06AB(0x000D) MISSED OFFSET
	float                                              MaxTimeToLoopSoundsAfterLastFire;                         // 0x06B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1C];                                      // 0x06BC(0x001C) MISSED OFFSET
	int                                                CurrentFireMode;                                          // 0x06D8(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x06DC(0x000C) MISSED OFFSET
	TArray<struct FSQMagazineData>                     Magazines;                                                // 0x06E8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	TArray<class UClass*>                              AttachmentClasses;                                        // 0x06F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USQWeaponAttachment*>                 Attachments;                                              // 0x0708(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	class UADSPostProcessSettings*                     ADSPostProcessSettings;                                   // 0x0718(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0720(0x0008) MISSED OFFSET
	bool                                               bUseStopADSPPDrawing;                                     // 0x0728(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bStopADSPPDrawing;                                        // 0x0729(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x072A(0x0002) MISSED OFFSET
	struct FVector2D                                   PrimarySwayFactor;                                        // 0x072C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SecondarySwayFactor;                                      // 0x0734(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PrimarySwayFactorInADS;                                   // 0x073C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SecondarySwayFactorInADS;                                 // 0x0744(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PrimarySwayStaminaMultiplier;                             // 0x074C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SecondarySwayStaminaMultiplier;                           // 0x0754(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x075C(0x0008) MISSED OFFSET
	float                                              PrimarySwaySpeed;                                         // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SecondarySwaySpeed;                                       // 0x0768(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PrimarySwaySpeedInADS;                                    // 0x076C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SecondarySwaySpeedInADS;                                  // 0x0770(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SwayDivisorInADS;                                         // 0x0774(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusSwayPctOfStanding;                                   // 0x0778(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusSwayPctOfCrouching;                                  // 0x077C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusSwayPctOfProne;                                      // 0x0780(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQDynamicEasingStruct                      HoldingZoomEasing;                                        // 0x0784(0x0014) (Edit, BlueprintVisible)
	float                                              HoldingZoomEasingAlpha;                                   // 0x0798(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoldingZoomRawAlpha;                                      // 0x079C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HoldingZoomIntermediateAlpha;                             // 0x07A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HoldingZoomTargetAlpha;                                   // 0x07A4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentFOV;                                               // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZoomedFOV;                                                // 0x07AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusZoomTime;                                            // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusAdditionalZoom;                                      // 0x07B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeSinceLastZoomToggle;                                  // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastZoomProgressAtToggle;                                 // 0x07BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AdjustAdsSightItemAnimPos;                                // 0x07C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CachedAdjustAdsSightItemAnimPos;                          // 0x07C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NewAdjustAdsSightItemAnimPos;                             // 0x07C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdjustAdsSightItemAnimPosAlpha;                           // 0x07CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxConcurrentSounds;                                      // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxConcurrentSoundsFadeOut;                               // 0x07D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIs1PUsingSquadSoundNodeLooping;                          // 0x07D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIs3PUsingSquadSoundNodeLooping;                          // 0x07D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x6];                                       // 0x07DA(0x0006) MISSED OFFSET
	class UAudioComponent*                             CurrentFiringAC;                                          // 0x07E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UAudioComponent*>                     FiringACs;                                                // 0x07E8(0x0010) (Edit, ExportObject, ZeroConstructor)
	class USoundCue*                                   SemiAutoSound1P;                                          // 0x07F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SemiAutoSound3P;                                          // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   StartingSound1P;                                          // 0x0808(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   StartingSound3P;                                          // 0x0810(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x10];                                      // 0x0818(0x0010) MISSED OFFSET
	bool                                               bIsModifyingZeroing;                                      // 0x0828(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0829(0x0003) MISSED OFFSET
	int                                                AdjustableSightItemPos;                                   // 0x082C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedLastZeroingTime;                                    // 0x0830(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedLastZeroingPlayTime;                                // 0x0834(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CachedLastZeroingPosition;                                // 0x0838(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsBipodDeployed;                                   // 0x083C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedAimProneBobbing;                                   // 0x083D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFinishedAdsTransition;                                   // 0x083E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLastNewZoom;                                             // 0x083F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               FireSwaySelector;                                         // 0x0840(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               PreFireSwaySelector;                                      // 0x0841(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x6];                                       // 0x0842(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWeapon");
		return ptr;
	}


	struct FVector2D UpdateWeaponSway(float DeltaTime);
	void UpdateBipod();
	void UpdateAimProneBobbing();
	void UpdateAdjustableSightAnimPos();
	void ToggleFiremode();
	void StopModifyZeroing();
	void StartReload();
	void StartModifyZeroing();
	void SetZoom(bool bNewZoom, bool bForce);
	void ServerStopFire();
	void ServerStartReload();
	void ServerStartFire();
	void ServerSetIsAimingDownSights(bool bIsAimingDownSights);
	void ServerSetCurrentFireMode(int NewCurrentFireMode);
	void ServerNotifyHit(const struct FSQShotInfo& ShotInfoZeroBased, TArray<struct FSQPenetrationTrace> TargetsZeroBased, bool bIsRayTracedShot, bool bIsManuallyCalled);
	void ServerNotifyFireAndMiss(const struct FSQShotInfo& ShotInfoZeroBased, const struct FHitResult& HitResultZeroBased, bool bIsRayTracedShot);
	void ServerFireProjectile(const struct FSQShotInfo& ShotInfoZeroBased);
	void PlayImpactEffect(const struct FSQPenetrationTrace& ImpactHit, bool bIsProjectileTracer);
	void PlayFiringSound(class USoundBase* Sound1p, class USoundBase* Sound3p, const struct FName& SocketName);
	void OnRep_Reloading();
	void OnRep_Magazines(TArray<struct FSQMagazineData>* OldMagazines);
	void OnRep_Firing();
	void OnRep_AimingDownSights(bool bPrevAimingDownSights);
	void MulticastFireProjectile(const struct FVector& OriginZeroBased, const struct FVector_NetQuantizeNormal& ShootDir);
	void MulticastFireMultipleProjectileEffects(TArray<struct FSQPenetrationProxy> HitResultsZeroBased, const struct FSQShotInfo& ShotInfoZeroBased, bool bIsRayTracedShot, bool bIsManuallyCalled);
	void ModifyZeroing(bool bIncrease);
	bool MagazineHasAmmo();
	bool IsZoomed();
	bool IsReloading();
	bool IsPullingTrigger();
	bool IsPendingFire();
	bool IsFullyZoomed();
	bool IsAimingDownSights();
	float GetZoomProgress(bool bJustToggledZoom);
	class USQWeaponStaticInfo* GetWeaponStaticInfo();
	struct FVector GetMOAAdjustedAimDirectionFromRotator(const struct FRotator& AimDirection);
	struct FVector GetMOAAdjustedAimDirection(const struct FVector& AimDirection);
	struct FVector GetAimLocation();
	struct FVector GetAimDirection();
	void FinishAdsTransition();
	void BlueprintOnZoom(bool bNewZoom);
	void BlueprintOnToggleFiremode();
	void BlueprintOnReloaded();
	void BlueprintOnReload();
	void BlueprintOnFire(const struct FVector& Origin);
};


// Class Squad.SQWeapon_Effects
// 0x0298 (0x0AE0 - 0x0848)
class ASQWeapon_Effects : public ASQWeapon
{
public:
	struct FSQWeaponSounds                             WeaponSounds;                                             // 0x0848(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSQWeaponAnims                              WeaponAnimations;                                         // 0x08D0(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSQRecoilData                               RecoilData;                                               // 0x0918(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSQWeaponEffects                            WeaponEffects;                                            // 0x0960(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSQWeaponSpring                             WeaponSpringConfig;                                       // 0x0998(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x09BC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 RecoilCurve;                                              // 0x09C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     WeaponOffset;                                             // 0x09C8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SightsViewOffset;                                         // 0x09D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x100];                                     // 0x09E0(0x0100) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWeapon_Effects");
		return ptr;
	}


	void InterpRecoil(float Value);
};


// Class Squad.SQVehicleWeapon
// 0x0040 (0x0B20 - 0x0AE0)
class ASQVehicleWeapon : public ASQWeapon_Effects
{
public:
	bool                                               bIsOverheated;                                            // 0x0AE0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bInputEnabled;                                            // 0x0AE1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0AE2(0x0006) MISSED OFFSET
	TArray<struct FSQVehicleRecoil>                    RecoilFactor;                                             // 0x0AE8(0x0010) (Edit, ZeroConstructor)
	bool                                               bReturnToPitchOriginOnReload;                             // 0x0AF8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bReturnToYawOriginOnReload;                               // 0x0AF9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0AFA(0x0002) MISSED OFFSET
	float                                              SecondsToReturnToOriginOnReload;                          // 0x0AFC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bReloadDirectlyFromFob;                                   // 0x0B00(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0B01(0x0002) MISSED OFFSET
	bool                                               bIgnoreCameraChange;                                      // 0x0B03(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTrueFpCamera;                                      // 0x0B04(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x17];                                      // 0x0B05(0x0017) MISSED OFFSET
	bool                                               bStartWithNoAmmo;                                         // 0x0B1C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0B1D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleWeapon");
		return ptr;
	}


	void SoldierLeavesVehicle(class ASQSoldier* Soldier);
	void SoldierEntersVehicle(class ASQSoldier* Soldier);
	struct FRotator GetWeaponRotation();
	class ASQSoldier* GetSoldier();
	class ASQVehicleSeat* GetOwnerSeat();
};


// Class Squad.SQVehicleResourceWeapon
// 0x0030 (0x0B50 - 0x0B20)
class ASQVehicleResourceWeapon : public ASQVehicleWeapon
{
public:
	float                                              ResourceDropQuantity;                                     // 0x0B20(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ResourceDropRate;                                         // 0x0B24(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ServerResourceRate;                                       // 0x0B28(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0B2C(0x0004) MISSED OFFSET
	class ASQForwardBase*                              CurrentFob;                                               // 0x0B30(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      CurrentCaptureZone;                                       // 0x0B38(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQVehicleResourceWeaponInventoryComponent*  ParentInventory;                                          // 0x0B40(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0B48(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleResourceWeapon");
		return ptr;
	}


	void UseResource(float ModifyAmount);
	void ServerEndResourceDropOff();
	void ServerBeginResourceDropOff(class ASQForwardBase* fob, class AActor* Zone, float DropRate);
	bool FindValidDropOffs(class ASQForwardBase** fob, class AActor** Zone);
	void BeginResourceDropOff();
	bool AtValidResourcePoint();
};


// Class Squad.SQAmmoResourceWeapon
// 0x0000 (0x0B50 - 0x0B50)
class ASQAmmoResourceWeapon : public ASQVehicleResourceWeapon
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAmmoResourceWeapon");
		return ptr;
	}

};


// Class Squad.SQAmmoWidget
// 0x0108 (0x0310 - 0x0208)
class USQAmmoWidget : public USQUserWidget
{
public:
	TArray<class USQMagazineGroupWidget*>              MagazineGroupWidgets;                                     // 0x0208(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	class UCanvasPanel*                                HighestLevelCanvas;                                       // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  FiremodeTextBlock;                                        // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  AmmoCountTextBlock;                                       // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ZeroingTextBlock;                                         // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      RoundInChamberImage;                                      // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bShowFireSelectorInfo;                                    // 0x0240(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowAmmoInMag;                                           // 0x0241(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0242(0x0006) MISSED OFFSET
	class ASQPlayerController*                         PlayerController;                                         // 0x0248(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              PlayerState;                                              // 0x0250(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RefillableMagazineColor;                                  // 0x0258(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FullMagazineColor;                                        // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                NearlyFullMagazineColor;                                  // 0x0278(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HalfMagazineColor;                                        // 0x0288(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                EmptyMagazineColor;                                       // 0x0298(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       FireModeAutoText;                                         // 0x02A8(0x0018) (Edit)
	struct FText                                       SightRangeText;                                           // 0x02C0(0x0018) (Edit)
	struct FText                                       FireModeSingleText;                                       // 0x02D8(0x0018) (Edit)
	struct FText                                       FireModeBurstText;                                        // 0x02F0(0x0018) (Edit)
	class ASQEquipableItem*                            CachedCurrentWeapon;                                      // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAmmoWidget");
		return ptr;
	}


	void UpdateState();
	bool UpdateShowingStatus();
	void UpdateMags(class ASQEquipableItem* CurrentItem);
	void UpdateFiremode(class ASQEquipableItem* CurrentItem);
	void UpdateCurrentWeapon();
	void OnCurrentWeaponChanged();
	void InitWidget();
};


// Class Squad.SQAnimDataEmotes
// 0x01E0 (0x0210 - 0x0030)
class USQAnimDataEmotes : public UDataAsset
{
public:
	struct FSQEmoteAnims                               EmoteAnims[0xA];                                          // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	TMap<struct FName, struct FSQEmoteAnims>           CustomEmotes;                                             // 0x01C0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAnimDataEmotes");
		return ptr;
	}

};


// Class Squad.SQAnimInstance
// 0x0020 (0x0380 - 0x0360)
class USQAnimInstance : public UAnimInstance
{
public:
	bool                                               bIsAds;                                                   // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsUsingItemOrIsAdsOrIsClimbing;                          // 0x0361(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0362(0x0006) MISSED OFFSET
	class USQItemStaticInfo*                           CurrentItemStaticInfo;                                    // 0x0368(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQSoldier*                                  Soldier;                                                  // 0x0370(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQSoldierNew*                               SoldierNew;                                               // 0x0378(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAnimInstance");
		return ptr;
	}


	void UpdateStaticItemInfo(class USQItemStaticInfo* InfoObject);
	void UpdateBoredMontage();
	void StopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float blendOutTime, bool bStopAllWeaponAnims);
	void SetAnimationPlayRateHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float NewPlayRate);
	void ResumeAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage);
	void PlayAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage);
	void PauseAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage);
	void EndLoopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, const struct FSQMontageSectionNames& SectionNames);
};


// Class Squad.SQAnimInstanceSoldier
// 0x0170 (0x04F0 - 0x0380)
class USQAnimInstanceSoldier : public USQAnimInstance
{
public:
	bool                                               bDrawDebugSpheres;                                        // 0x0380(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSoldierAlive;                                          // 0x0381(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSoldierRagdolled;                                      // 0x0382(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0383(0x0001) MISSED OFFSET
	struct FVector                                     LeftHandIKLocation;                                       // 0x0384(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftHandIKAlpha;                                          // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightHandIKLocation;                                      // 0x0394(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightHandIKAlpha;                                         // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              YawDeltaRaw;                                              // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AddRotShot;                                               // 0x03A8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AddRotCameraShot;                                         // 0x03B4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AddAdsRotCameraShot;                                      // 0x03C0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeanConditions;                                          // 0x03CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03CD(0x0003) MISSED OFFSET
	float                                              BipodLength;                                              // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodHeight;                                              // 0x03D4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoLowered;                                             // 0x03E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03E1(0x0003) MISSED OFFSET
	struct FRotator                                    OffsetLineOfFire;                                         // 0x03E4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastVelocityWhenIsInAir;                                  // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftHandWeaponIkAlpha;                                    // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightHand3pWeaponIkAlpha;                                 // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AdjustAdsSightItemAnimPos;                                // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bVelocityProneTransAnim;                                  // 0x0400(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0401(0x0003) MISSED OFFSET
	float                                              Direction;                                                // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanSprintToProne;                                        // 0x0408(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCrouched;                                              // 0x0409(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsProne;                                                 // 0x040A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsJumping;                                               // 0x040B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFalling;                                               // 0x040C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x040D(0x0003) MISSED OFFSET
	float                                              Speed;                                                    // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x0414(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PitchDeltaRaw;                                            // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFirstPersonVisibility;                                   // 0x0424(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0425(0x0003) MISSED OFFSET
	struct FVector                                     ClimbWeaponSocketLoc;                                     // 0x0428(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ClimbWeaponSocketRot;                                     // 0x0434(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    VaultClimbAo;                                             // 0x0440(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FreeLookRot;                                              // 0x044C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSprintToProneTransAnim;                                  // 0x0458(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeanRight;                                               // 0x0459(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeanLeft;                                                // 0x045A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LeaningDirection;                                         // 0x045B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bBipodIsDeployed;                                         // 0x045C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x045D(0x0003) MISSED OFFSET
	float                                              BipodTransitionAlpha;                                     // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShot;                                                    // 0x0464(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	float                                              SprintSpeedMultiplier;                                    // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkSpeedCrouched;                                     // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkSpeedProne;                                        // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkSpeed;                                             // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInVehicle;                                             // 0x0478(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	float                                              VehiclePitch;                                             // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleYaw;                                               // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0484(0x0004) MISSED OFFSET
	class UAnimSequence*                               VehicleBaseAnim;                                          // 0x0488(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 VehicleAimOffsets;                                        // 0x0490(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWheelBlendSpace1D;                                    // 0x0498(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0499(0x0007) MISSED OFFSET
	class UBlendSpace1D*                               VehicleWheelBlendSpace1D;                                 // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VehicleWheel;                                             // 0x04A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CustomVehicleWheel1;                                      // 0x04AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // 0x04B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomSteeringWheelAnimExplTime;                          // 0x04B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHandIKAlphaEnabled;                                      // 0x04B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x04B9(0x0003) MISSED OFFSET
	float                                              SteeringWheelAnimExplTime;                                // 0x04BC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightHandAlpha;                                           // 0x04C0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftHandAlpha;                                            // 0x04C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastVehicleWheelAbs;                                      // 0x04C8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleWheelAbsRate;                                      // 0x04CC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               SteeringWheelSingleFrameAnimSequence;                     // 0x04D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_LeanLeftAndLeanConditions;                          // 0x04DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_NotLeanLeftOrNotLeanConditions;                     // 0x04DD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_LeanRightAndLeanConditions;                         // 0x04DE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_NotLeanRightOrNotLeanConditions;                    // 0x04DF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPullingTriggerAndMagazineHasAmmo;                      // 0x04E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0xF];                                       // 0x04E1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAnimInstanceSoldier");
		return ptr;
	}


	void UpdateVehicleAim(float DeltaSeconds);
	void UpdateVehicle(float DeltaSeconds);
	void UpdateSteeringWheelVariables(float DeltaSeconds);
	void UpdateLean();
	void UpdateFastPathTransitionVariables(float DeltaSeconds);
	void OnVaultClimbStop();
	struct FRotator AlignWithGround(const struct FVector& FloorNormal);
};


// Class Squad.SQAnimInstanceSoldier1P
// 0x0800 (0x0CF0 - 0x04F0)
class USQAnimInstanceSoldier1P : public USQAnimInstanceSoldier
{
public:
	unsigned char                                      UnknownData00[0x100];                                     // 0x04F0(0x0100) MISSED OFFSET
	bool                                               bStateWeight__GTEOne__ProneStates__ProneMove;             // 0x05F0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bRelevantAnimTimeRemaining__LTEPtTwo__ProneStates__OutProneMove;// 0x05F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x86];                                      // 0x05F2(0x0086) MISSED OFFSET
	bool                                               bCurrentTime__GTEPtThree__Jump1P__JumpStart__rifle_1ptop_jumpstart;// 0x0678(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTimeRemaining__LTEPtTwo__Jump1P__JumpEnd__rifle_1ptop_jumpend;// 0x0679(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bTimeRemaining__LTEPtTwo__Jump1P__JumpStart__rifle_1ptop_jumpstart;// 0x067A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x85];                                      // 0x067B(0x0085) MISSED OFFSET
	struct FRotator                                    Zeroing;                                                  // 0x0700(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x070C(0x0004) MISSED OFFSET
	class UBlendSpaceBase*                             ProneMoveType;                                            // 0x0710(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneMoveTypeAdditiveReference;                           // 0x0718(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               OutProneMoveType;                                         // 0x0720(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               OutProneMoveTypeNonadditive;                              // 0x0728(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AdjustableAdsSightItemAnim;                               // 0x0730(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HasAdjustableSightAlpha;                                  // 0x0738(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandLoc;                                                 // 0x073C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchLoc;                                                // 0x0748(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneLoc;                                                 // 0x0754(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodLoc;                                                 // 0x0760(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StandLocBlendTime;                                        // 0x076C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NegFpvTorsoCameraOffset;                                  // 0x0770(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DeviationVisuFb;                                          // 0x077C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Sway;                                                     // 0x0788(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StrafeVector;                                             // 0x0794(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StrafeRotator;                                            // 0x07A0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AdsStrafeRotator;                                         // 0x07AC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BaseAimPitchPct;                                          // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeapRecoilRelLoc;                                         // 0x07BC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    GlobalDeltaRotDeltaSpring;                                // 0x07C8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    GlobalDeltaRotDeltaSpringRoll;                            // 0x07D4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     GlobalDeltaLocDeltaSpringWeaponMesh;                      // 0x07E0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LeftHandIKSpringAlpha;                                    // 0x07EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Aim1pWeaponMeshPosition;                                  // 0x07F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Aim1pWeaponMeshRescale;                                   // 0x07FC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandLeanLeftRootOffset;                                  // 0x0808(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanLeftWeaponRotation;                              // 0x0814(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanLeftCameraRotation;                              // 0x0820(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandLeanRightRootOffset;                                 // 0x082C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanRightWeaponRotation;                             // 0x0838(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanRightCameraRotation;                             // 0x0844(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchLeanLeftRootOffset;                                 // 0x0850(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanLeftWeaponRotation;                             // 0x085C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanLeftCameraRotation;                             // 0x0868(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchLeanRightRootOffset;                                // 0x0874(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanRightWeaponRotation;                            // 0x0880(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanRightCameraRotation;                            // 0x088C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneLeanLeftRootOffset;                                  // 0x0898(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanLeftWeaponRotation;                              // 0x08A4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanLeftCameraRotation;                              // 0x08B0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneLeanRightRootOffset;                                 // 0x08BC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanRightWeaponRotation;                             // 0x08C8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanRightCameraRotation;                             // 0x08D4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FP_HasSway;                                               // 0x08E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FP_JumpStartLoopAlpha;                                    // 0x08E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_JumpEndBobbingBlendAlpha;                              // 0x08E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_JumpEndBobbingAdditiveAlpha;                           // 0x08EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_JumpEndCameraRootMotionAlphaBlend;                     // 0x08F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsFallingAndNotJumping;                               // 0x08F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x08F5(0x0003) MISSED OFFSET
	float                                              FP_St2P_RootMotionBlendAlpha;                             // 0x08F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_P2St_RootMotionBlendAlpha;                             // 0x08FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsProneAndIsSprintingAndCanSprintToProne;             // 0x0900(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_SwitchedProneAndNotIsProne;                           // 0x0901(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_SwitchedProneAndIsProne;                              // 0x0902(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x0903(0x0001) MISSED OFFSET
	struct FRotator                                    FP_ProneMoveIkWeaponHandRootRotFromGroundAngle;           // 0x0904(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FP_ProneMoveIkWeaponHandRootRotFromActorPitch;            // 0x0910(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_ProneMoveWeaponAligningConditions;                    // 0x091C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x091D(0x0003) MISSED OFFSET
	struct FRotator                                    FP_ProneMoveIkWeaponRightClavicleRot;                     // 0x0920(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_ProneMoveBobPlayRate;                                  // 0x092C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_SpeedHigherThanZeroAndNotIsProneTransition;           // 0x0930(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_SpeedHigherThanZero;                                  // 0x0931(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_HvdXorClAndClOrHvdXorVaAndVaOrBipod;                  // 0x0932(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_ClimbAnimNotEqual1;                                   // 0x0933(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_ClimbAndClimbAnim1;                                   // 0x0934(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0935(0x0003) MISSED OFFSET
	struct FRotator                                    FP_ClimbAndClimbAnim1_AimRotator;                         // 0x0938(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_1pLeftHandIkConditions;                               // 0x0944(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0945(0x0003) MISSED OFFSET
	float                                              FP_1pLeftHandIKConditionsAlpha;                           // 0x0948(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_IsUsingItemAlpha;                                      // 0x094C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_IsProneAlpha;                                          // 0x0950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_ProneStatesProneMoveToOutProneMove;                 // 0x0954(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Jump1pJumpStartToJumpEnd;                           // 0x0955(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_ToADS_Hipfire;                                      // 0x0956(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsPullingTriggerAndMagazineHasAmmo;                // 0x0957(0x0001) (ZeroConstructor, IsPlainOldData)
	float                                              ToADS_Hipfire_RemainingTIme;                              // 0x0958(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Steady1pHipFireDuration;                                  // 0x095C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_StandToADS_Grenade;                                 // 0x0960(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_WeaponBobbing1P_ADSToStand;                         // 0x0961(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_WeaponBobbing1P_ADSToProne;                         // 0x0962(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_WeaponBobbing1P_ProneToADS;                         // 0x0963(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_CustomIsCrouchedAlpha;                                 // 0x0964(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_HasAdjustableSightAlphaTimesIsAdsAlpha;                // 0x0968(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bProneMoveBobbing;                                        // 0x096C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeftHandIkOut1P;                                         // 0x096D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSwitchedProne;                                           // 0x096E(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bLastProneStance;                                         // 0x096F(0x0001) (ZeroConstructor, IsPlainOldData)
	float                                              MoveDeviationFactor;                                      // 0x0970(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ShotDeviationFactor;                                      // 0x0974(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0978(0x0008) MISSED OFFSET
	struct FVector4                                    FinalDeviation;                                           // 0x0980(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DeviationVisuFbZY;                                        // 0x0990(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AddRotGoingShot;                                          // 0x0998(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              RecoilReleaseInterpSpeed;                                 // 0x09A4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RecoilWeaponLimit;                                        // 0x09A8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MoveRecoilFactor;                                         // 0x09AC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RecoilCanRelease;                                         // 0x09B0(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     FinalRecoilSigma;                                         // 0x09B4(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     FinalRecoilMean;                                          // 0x09C0(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              MoveSwayFactor;                                           // 0x09CC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CustomSwayMin;                                            // 0x09D0(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SwayZY;                                                   // 0x09D4(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              StrafeSpringFactor;                                       // 0x09DC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    LastKnownRot1;                                            // 0x09E0(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     CtrlRotVectorDeltaSpring;                                 // 0x09EC(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    LastKnownRot2;                                            // 0x09F8(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              CtrlRotDeltaSpringLerpAlpha;                              // 0x0A04(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringTurnSpeedToFullIntensity;                     // 0x0A08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StrafeSpringRotator;                                      // 0x0A0C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StrafeSpringVector;                                       // 0x0A18(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AdsStrafeSpringRotator;                                   // 0x0A24(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CustomNotIsAds;                                           // 0x0A30(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0A34(0x0004) MISSED OFFSET
	class UClass*                                      FireShake;                                                // 0x0A38(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                WeaponSpringSide;                                         // 0x0A40(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringStiffness;                                    // 0x0A44(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringCriticalDampingFactor;                        // 0x0A48(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringMass;                                         // 0x0A4C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringFactor;                                       // 0x0A50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponMeshSpringLocDelayFactor;                           // 0x0A54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringClamp;                                        // 0x0A58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponMeshSpringRotDelayFactor;                           // 0x0A5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AddMoveDeviation;                                         // 0x0A60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MoveDeviationFactorRelease;                               // 0x0A64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveDeviationFactor;                                   // 0x0A68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinMoveDeviationFactor;                                   // 0x0A6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullStaminaDeviationFactor;                               // 0x0A70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowStaminaDeviationFactor;                                // 0x0A74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AddShotDeviationFactor;                                   // 0x0A78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AddShotDeviationFactorAds;                                // 0x0A7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShotDeviationFactorRelease;                               // 0x0A80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinShotDeviationFactor;                                   // 0x0A84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxShotDeviationFactor;                                   // 0x0A88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DeviationVisuFbInterpSpeed_YZ;                            // 0x0A8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DeviationVisuFbMax;                                       // 0x0A90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DeviationVisuFbInterpSpeed_Final;                         // 0x0A94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinBipodAdsDeviation;                                     // 0x0A98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinBipodDeviation;                                        // 0x0A9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinProneAdsDeviation;                                     // 0x0AA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinProneDeviation;                                        // 0x0AA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinCrouchAdsDeviation;                                    // 0x0AA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinCrouchDeviation;                                       // 0x0AAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinStandAdsDeviation;                                     // 0x0AB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinStandDeviation;                                        // 0x0AB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinProneTransitionDeviation;                              // 0x0AB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveRecoilFactor;                                      // 0x0ABC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AddMoveRecoil;                                            // 0x0AC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinMoveRecoilFactor;                                      // 0x0AC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MoveRecoilFactorRelease;                                  // 0x0AC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullStaminaRecoilFactor;                                  // 0x0ACC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowStaminaRecoilFactor;                                   // 0x0AD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCameraOffsetFactor;                                 // 0x0AD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilLofCameraOffsetLimit;                               // 0x0AD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilLofAttackInterpSpeed;                               // 0x0ADC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCanReleaseInterpSpeed;                              // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCameraOffsetInterpSpeed;                            // 0x0AE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilLofReleaseInterpSpeed;                              // 0x0AE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeapRecoilRelLocFactor;                                   // 0x0AEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCameraShotInterpSpeed;                              // 0x0AF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilAdsCameraShotInterpSpeed;                           // 0x0AF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneAdsRecoilMean;                                       // 0x0AF8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneAdsRecoilSigma;                                      // 0x0B04(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneRecoilMean;                                          // 0x0B10(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneRecoilSigma;                                         // 0x0B1C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchAdsRecoilMean;                                      // 0x0B28(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchAdsRecoilSigma;                                     // 0x0B34(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchRecoilMean;                                         // 0x0B40(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchRecoilSigma;                                        // 0x0B4C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandAdsRecoilMean;                                       // 0x0B58(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandAdsRecoilSigma;                                      // 0x0B64(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandRecoilMean;                                          // 0x0B70(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandRecoilSigma;                                         // 0x0B7C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneTransitionRecoilMean;                                // 0x0B88(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneTransitionRecoilSigma;                               // 0x0B94(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodAdsRecoilMean;                                       // 0x0BA0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodAdsRecoilSigma;                                      // 0x0BAC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodRecoilMean;                                          // 0x0BB8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodRecoilSigma;                                         // 0x0BC4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullStaminaSwayFactor;                                    // 0x0BD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowStaminaSwayFactor;                                     // 0x0BD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AddMoveSway;                                              // 0x0BD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveSwayFactor;                                        // 0x0BDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinMoveSwayFactor;                                        // 0x0BE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MoveSwayFactorRelease;                                    // 0x0BE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SwayInterpSpeed_YZ;                                       // 0x0BE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SwayInterpSpeed_Final;                                    // 0x0BEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneAdsSwayMin;                                          // 0x0BF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneSwayMin;                                             // 0x0BF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchAdsSwayMin;                                         // 0x0BF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchSwayMin;                                            // 0x0BFC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandAdsSwayMin;                                          // 0x0C00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandSwayMin;                                             // 0x0C04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneTransitionSwayMin;                                   // 0x0C08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoldingBreathSwayFactor;                                  // 0x0C0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomSpeed;                                              // 0x0C10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x48];                                      // 0x0C14(0x0048) MISSED OFFSET
	struct FRotator                                    SmoothFinalLofSuppressRotation;                           // 0x0C5C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0C68(0x0004) MISSED OFFSET
	float                                              LofSuppressRotationAlpha;                                 // 0x0C6C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x10];                                      // 0x0C70(0x0010) MISSED OFFSET
	bool                                               bWasCrouchedBeforeProne;                                  // 0x0C80(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0C81(0x0003) MISSED OFFSET
	struct FVector                                     CustomCurrentFloorNormal1;                                // 0x0C84(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_SprintBlendAlpha;                                      // 0x0C90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSprint1pLoopSection;                                   // 0x0C94(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0C95(0x0003) MISSED OFFSET
	class UAnimSequence*                               SprintStaticPose;                                         // 0x0C98(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x20];                                      // 0x0CA0(0x0020) MISSED OFFSET
	class UAnimMontage*                                BobbingMove1pMontage;                                     // 0x0CC0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BobbingSprint1pMontage;                                   // 0x0CC8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x20];                                      // 0x0CD0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAnimInstanceSoldier1P");
		return ptr;
	}


	void UpdateWasCrouchedBeforeProne();
	void UpdateTurnSpring();
	void UpdateSwitchedProne();
	void UpdateSway();
	void UpdateStrafeSpring();
	void UpdateSprintSpeedBlend();
	void UpdateRecoilAndFire();
	void UpdatePitch();
	void UpdateLofSuppression(float DeltaSeconds);
	void UpdateIsFallingPlayRate(float DeltaSeconds);
	void UpdateFastPath();
	void UpdateDeviationVisuFb();
	void UpdateDeviation();
	void UpdateBobbingsPlayrate(float DeltaSeconds);
	void UpdateAccuracyParameters();
	void Update1pCurrentFloor();
	void LineOfFire();
};


// Class Squad.SQAnimInstanceSoldier3P
// 0x0960 (0x0E50 - 0x04F0)
class USQAnimInstanceSoldier3P : public USQAnimInstanceSoldier
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x04F0(0x0080) MISSED OFFSET
	bool                                               bStateWeight__GTEOne__Stand3P__Jog;                       // 0x0570(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0571(0x0003) MISSED OFFSET
	float                                              StateWeight__Stand3P__Jog;                                // 0x0574(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__Stand3P__Sprint;                    // 0x0578(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0579(0x0003) MISSED OFFSET
	float                                              StateWeight__Stand3P__Sprint;                             // 0x057C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StateWeight__Stand3P__SprintStop;                         // 0x0580(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRelevantAnimTimeRemaining__LTEOne__Stand3P__SprintStop;  // 0x0584(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8B];                                      // 0x0585(0x008B) MISSED OFFSET
	bool                                               bStateWeight__GTEOne__Stand_NeutralStates__Neutral;       // 0x0610(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__Stand_NeutralStates__TurnLeft_91;   // 0x0611(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__Stand_NeutralStates__TurnRight_91;  // 0x0612(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnLeft_91;// 0x0613(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnRight_91;// 0x0614(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xAB];                                      // 0x0615(0x00AB) MISSED OFFSET
	float                                              StateWeight__Crouch3P__Sprint;                            // 0x06C0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StateWeight__Crouch3P__Walk;                              // 0x06C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x42];                                      // 0x06C8(0x0042) MISSED OFFSET
	bool                                               bStateWeight__GTEOne__Crouch_NeutralStates__Neutral;      // 0x070A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__Crouch_NeutralStates__TurnLeft_91;  // 0x070B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__Crouch_NeutralStates__TurnRight_91; // 0x070C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8B];                                      // 0x070D(0x008B) MISSED OFFSET
	float                                              StateWeight__Prone3P__ProneMove;                          // 0x0798(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x25];                                      // 0x079C(0x0025) MISSED OFFSET
	bool                                               bStateWeight__GTEOne__Prone_NeutralStates__Neutral;       // 0x07C1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__Prone_NeutralStates__TurnLeft_46;   // 0x07C2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__Prone_NeutralStates__TurnRight_46;  // 0x07C3(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x67];                                      // 0x07C4(0x0067) MISSED OFFSET
	bool                                               bStateWeight__GTEOne__SoldierMovements__Stand;            // 0x082B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__SoldierMovements__Crouch;           // 0x082C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStateWeight__GTEOne__SoldierMovements__Stand2Crouch;     // 0x082D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x082E(0x0002) MISSED OFFSET
	float                                              StateWeight__SoldierMovements__Stand2Prone;               // 0x0830(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StateWeight__SoldierMovements__Sprint2Prone;              // 0x0834(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StateWeight__SoldierMovements__Prone2Stand;               // 0x0838(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StateWeight__SoldierMovements__Crouch2Prone;              // 0x083C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StateWeight__SoldierMovements__Prone2Crouch;              // 0x0840(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Stand2Prone__rifle_stand2prone;// 0x0844(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAssetPlayerTimeFromEnd__LTEPtTwo__SoldierMovements__Sprint2Prone__rifle_sprint2prone;// 0x0845(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Stand__rifle_prone2stand;// 0x0846(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Crouch2Prone__rifle_crouch2prone;// 0x0847(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Crouch__rifle_prone2crouch;// 0x0848(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Stand2Crouch__Stand2Crouch;// 0x0849(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Crouch2Stand__Crouch2Stand;// 0x084A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x22A];                                     // 0x084B(0x022A) MISSED OFFSET
	bool                                               bIsSprinting;                                             // 0x0A75(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x0A76(0x0002) MISSED OFFSET
	float                                              CustomNotIsFallingAlpha;                                  // 0x0A78(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0A7C(0x0004) MISSED OFFSET
	class UBlendSpace1D*                               BS1D_3pStandSprintType;                                   // 0x0A80(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               SprintStop3p;                                             // 0x0A88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               BS1D_3pCrouchSprintType;                                  // 0x0A90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 BS_3pStandJogType;                                        // 0x0A98(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 BS_3pStandWalkType;                                       // 0x0AA0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 BS_3pCrouchWalkType;                                      // 0x0AA8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               BS1D_3pProneCrawlType;                                    // 0x0AB0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandStopMove;                                            // 0x0AB8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchStopMove;                                           // 0x0AC0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandLeanLeftShuffle;                                     // 0x0AC8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandLeanRightShuffle;                                    // 0x0AD0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchLeanLeftShuffle;                                    // 0x0AD8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchLeanRightShuffle;                                   // 0x0AE0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               AO1D_StandPitch;                                          // 0x0AE8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               AO1D_CrouchPitch;                                         // 0x0AF0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               AO1D_PronePitch;                                          // 0x0AF8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 AO_BipodStandCrouchPitch;                                 // 0x0B00(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AO1D_StandYawSF;                                          // 0x0B08(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AO1D_CrouchYawSF;                                         // 0x0B10(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AO1D_ProneYawSF;                                          // 0x0B18(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandTurnRight;                                           // 0x0B20(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandTurnLeft;                                            // 0x0B28(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchTurnLeft;                                           // 0x0B30(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchTurnRight;                                          // 0x0B38(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneTurnRight;                                           // 0x0B40(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneTurnLeft;                                            // 0x0B48(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               SprintToProne3p;                                          // 0x0B50(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandToProne3p;                                           // 0x0B58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneToStand3p;                                           // 0x0B60(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchToProne3p;                                          // 0x0B68(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneToCrouch3p;                                          // 0x0B70(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FpvLowerRootBoneOffset;                                   // 0x0B78(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomSpeedMin40;                                         // 0x0B84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneStopMoveAlpha;                                       // 0x0B88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchStopMoveAlpha;                                      // 0x0B8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_HighestClimbAnim;                                     // 0x0B90(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Jump_3PJumpStartToJumpEnd;                          // 0x0B91(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Stand3PSprintStopToJog;                             // 0x0B92(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Stand3PSprintToSprintStop;                          // 0x0B93(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Stand3PJogToSprint;                                 // 0x0B94(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Stand_NeutralStatesTurnRight_90ToTurnLeft_91;       // 0x0B95(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Stand_NeutralStatesTurnLeft_90ToTurnRight_91;       // 0x0B96(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Stand_NeutralStatesNeutralToTurnLeft_91;            // 0x0B97(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Stand_NeutralStatesNeutralToTurnRight_91;           // 0x0B98(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Crouch_NeutralStatesTurnRight_90ToNeutral;          // 0x0B99(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Crouch_NeutralStatesTurnRight_90ToTurnLeft_91;      // 0x0B9A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Crouch_NeutralStatesTurnLeft_90ToNeutral;           // 0x0B9B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Crouch_NeutralStatesTurnLeft_90ToTurnRight_91;      // 0x0B9C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Crouch_NeutralStatesNeutralToTurnLeft_91;           // 0x0B9D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Crouch_NeutralStatesNeutralToTurnRight_91;          // 0x0B9E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Prone_NeutralStatesTurnLeft_45ToNeutral;            // 0x0B9F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Prone_NeutralStatesTurnLeft_45ToTurnRight_46;       // 0x0BA0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Prone_NeutralStatesTurnRight_45ToNeutral;           // 0x0BA1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Prone_NeutralStatesTurnRight_45ToTurnLeft_46;       // 0x0BA2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Prone_NeutralStatesNeutralToTurnLeft_46;            // 0x0BA3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_Prone_NeutralStatesNeutralToTurnRight_46;           // 0x0BA4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovementsCrouch2StandToStand;                // 0x0BA5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovementsStand2CrouchToCrouch2Prone;         // 0x0BA6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovementsStand2CrouchToCrouch;               // 0x0BA7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovementsCrouchToCrouch2Prone;               // 0x0BA8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovements_StandToCrouch;                     // 0x0BA9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovementsStandToStand2Prone;                 // 0x0BAA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovementsStandToStand2Crouch;                // 0x0BAB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_T_SoldierMovementsStandToSprint2Prone;                // 0x0BAC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0BAD(0x0003) MISSED OFFSET
	struct FRotator                                    FP_FloorAlignedRotationRightFoot;                         // 0x0BB0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FP_FloorAlignedRotationLeftFoot;                          // 0x0BBC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FP_FloorAlignedRotationFeetRoot;                          // 0x0BC8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FP_FloorAlignedRotationFeetRootReverse;                   // 0x0BD4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FP_IKFeetRootTranslation;                                 // 0x0BE0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_IsNotFirstPersonVisibilityAlpha;                       // 0x0BEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_StandIdleAlpha;                                        // 0x0BF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_CrouchProneIdleAlpha;                                  // 0x0BF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsStanding;                                           // 0x0BF8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsStandingStill;                                      // 0x0BF9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_CanCrouchToStandingStill;                             // 0x0BFA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_CanCrouchToStandMoving;                               // 0x0BFB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsCrouchedInPlace;                                    // 0x0BFC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0BFD(0x0003) MISSED OFFSET
	float                                              FP_AimOffsetProneYawFrameTime;                            // 0x0C00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetYawNegative;                                  // 0x0C04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetProneTurnRightYawFrameTime;                   // 0x0C08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnRightYawNegative;                         // 0x0C0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetProneTurnLeftYawFrameTime;                    // 0x0C10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnLeftYawNegative;                          // 0x0C14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_ProneWalkPlayRate;                                     // 0x0C18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsMoving;                                             // 0x0C1C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsNotMoving;                                          // 0x0C1D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x2];                                       // 0x0C1E(0x0002) MISSED OFFSET
	struct FRotator                                    FP_FloorAlignedRotationBody;                              // 0x0C20(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FP_FloorAlignedRotationBodyReverse;                       // 0x0C2C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_CustomSpeedMin40NormalizedToRange;                     // 0x0C38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsProneAndNotDeployBipod;                             // 0x0C3C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsClimbingOrVaulting;                                 // 0x0C3D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x0C3E(0x0002) MISSED OFFSET
	struct FRotator                                    FP_FreeLook3PHeadRotation;                                // 0x0C40(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_BipodCrouchStanceAlpha;                                // 0x0C4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_BipodStandCrouchAimPitchAlpha;                         // 0x0C50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0C54(0x0004) MISSED OFFSET
	float                                              FP_BipodProneStanceAlpha;                                 // 0x0C58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_BipodAimOffsetAlpha;                                   // 0x0C5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_BipodWeaponPosCoveredPoseAlphaDependingOnSkelMeshOffset;// 0x0C60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_BipodCoveredPoseBlendAlpha;                            // 0x0C64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FP_BipodHighPitchCoveredPoseWeaponPositionOffset;         // 0x0C68(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FP_BipodDynamicBodyOffset;                                // 0x0C74(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetCrouchYawFrameTime;                           // 0x0C80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnLeftYawPlayRate;                          // 0x0C84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnLeftProneYawPlayRate;                     // 0x0C88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnLeftYawFrameTime;                         // 0x0C8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnRightYawPlayRate;                         // 0x0C90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnRightProneYawPlayRate;                    // 0x0C94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimOffsetTurnRightYawFrameTime;                        // 0x0C98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_StandStopMoveAlpha;                                    // 0x0C9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimYawFrameTime2;                                      // 0x0CA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_CrouchWalkPlayRate;                                    // 0x0CA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimYawJogFrameTime;                                    // 0x0CA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AimPitchJogAlpha;                                      // 0x0CAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_JogPlayRate;                                           // 0x0CB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_SprintStopAlpha;                                       // 0x0CB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_Stand3PNeutralToJogRule;                              // 0x0CB8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_Stand3PJogToNeutralRule;                              // 0x0CB9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_Stand3PSprintToNeutralRule;                           // 0x0CBA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x1];                                       // 0x0CBB(0x0001) MISSED OFFSET
	float                                              FP_AimOffsetStandYawFrameTime;                            // 0x0CBC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_JumpEndAlpha;                                          // 0x0CC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_IsFallingAndNotJumping;                               // 0x0CC4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x3];                                       // 0x0CC5(0x0003) MISSED OFFSET
	float                                              FP_Final3PLeftHandIKOutAlpha;                             // 0x0CC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_AOStandToConduit;                                     // 0x0CCC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_AOStandSprintJog;                                     // 0x0CCD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_AOCrouchToConduit;                                    // 0x0CCE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_AOProneToConduit;                                     // 0x0CCF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_AOConduitToCrouch;                                    // 0x0CD0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x3];                                       // 0x0CD1(0x0003) MISSED OFFSET
	float                                              FP_BS_StandSprintSpeed;                                   // 0x0CD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FP_SprintHeadDirection;                                   // 0x0CD8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_SprintRootDirection;                                   // 0x0CE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_BS_CrouchSprintSpeed;                                  // 0x0CE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFP_LeanHeadWhenADSAndADS;                                // 0x0CEC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFinal3pLeftHandIkOut;                                    // 0x0CED(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x2];                                       // 0x0CEE(0x0002) MISSED OFFSET
	float                                              CustomWeapActionsAndIsAds;                                // 0x0CF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_WalkPlayRate;                                          // 0x0CF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_IsNotMovingAlpha;                                      // 0x0CF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_LeanYawOffsetFrameTime;                                // 0x0CFC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FP_AlphaAbsIkFeetRootPitch;                               // 0x0D00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RawActorRotation;                                         // 0x0D04(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    SmoothedControlRotation;                                  // 0x0D10(0x000C) (ZeroConstructor, IsPlainOldData)
	bool                                               bTurnNeutAoDisabled;                                      // 0x0D1C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x3];                                       // 0x0D1D(0x0003) MISSED OFFSET
	struct FRotator                                    CachedActorYaw;                                           // 0x0D20(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeftHandIkOut;                                           // 0x0D2C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bJumpEndBobbing3P;                                        // 0x0D2D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x2];                                       // 0x0D2E(0x0002) MISSED OFFSET
	float                                              CustomIsSprinting;                                        // 0x0D30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomIsAdsOrBipod;                                       // 0x0D34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SmoothVelocity;                                           // 0x0D38(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AccelRateClamp;                                           // 0x0D44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    SmoothWorldDirection;                                     // 0x0D48(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimRotation_3P;                                           // 0x0D54(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimRotation2_3P;                                          // 0x0D60(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTurnLeftAnim;                                            // 0x0D6C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFullMoveAnim;                                            // 0x0D6D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTurnRightAnim;                                           // 0x0D6E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTurnLeft;                                                // 0x0D6F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTurnRight;                                               // 0x0D70(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTurnLeftProne;                                           // 0x0D71(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTurnRightProne;                                          // 0x0D72(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x1];                                       // 0x0D73(0x0001) MISSED OFFSET
	struct FRotator                                    YawOffset;                                                // 0x0D74(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    YawOffsetDuringTurnLeft;                                  // 0x0D80(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    YawOffsetDuringTurnRight;                                 // 0x0D8C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFullSprintAnim;                                          // 0x0D98(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0D99(0x0003) MISSED OFFSET
	float                                              LastSpeed;                                                // 0x0D9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SprintStopCachedSpeed;                                    // 0x0DA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsProne;                                           // 0x0DA4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x3];                                       // 0x0DA5(0x0003) MISSED OFFSET
	float                                              StandStopMoveAlpha;                                       // 0x0DA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsCrouched;                                        // 0x0DAC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsStand;                                           // 0x0DAD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bProneTransAnim;                                          // 0x0DAE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x1];                                       // 0x0DAF(0x0001) MISSED OFFSET
	struct FVector                                     PmCachedCapsuleWorldLoc1;                                 // 0x0DB0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndSprintToProneCapsuleLoc;                               // 0x0DBC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Alpha;                                                    // 0x0DC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastKnownHeight;                                          // 0x0DCC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeightVelocity;                                           // 0x0DD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastKnownHeightVelocity;                                  // 0x0DD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BipodAimUpLimit3P;                                        // 0x0DD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BipodAimDownLimit3P;                                      // 0x0DDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomNotVaultingAlpha;                                   // 0x0DE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomNotClimbingAlpha;                                   // 0x0DE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CurrentFloorNormalBody;                                   // 0x0DE8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CurrentFloorNormalFeet;                                   // 0x0DF4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    IkFeetRootRelRot;                                         // 0x0E00(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeftFootFloorNormal;                                      // 0x0E0C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightFootFloorNormal;                                     // 0x0E18(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomIsLoweredAndNotProne;                               // 0x0E24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MeshRotationOffset;                                       // 0x0E28(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CachedActorRotationNoLean;                                // 0x0E34(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedLeanYawOffset;                                      // 0x0E40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x0E44(0x0004) MISSED OFFSET
	bool                                               bLeanHeadWhenAds;                                         // 0x0E48(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0x7];                                       // 0x0E49(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAnimInstanceSoldier3P");
		return ptr;
	}


	void UpdateTurnChar();
	void UpdateStopMoveAlpha();
	void UpdateSprintStopCachedSpeed();
	void UpdateSmoothVelocity();
	void UpdateLeanYawOffset();
	void UpdateLandingVel();
	void UpdateIkFootOrientation();
	void UpdateIkFeetRootRelRot();
	void UpdateFastPathVariables();
	void UpdateDirection();
	void UpdateAimRotation();
	void UpdateAimOffset();
	void Update3pCurrentFloor();
};


// Class Squad.SQAnimNotify_EnterSeatState
// 0x0008 (0x0040 - 0x0038)
class USQAnimNotify_EnterSeatState : public UAnimNotify
{
public:
	int                                                SeatIndex;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAnimNotify_EnterSeatState");
		return ptr;
	}

};


// Class Squad.SQAnimNotify_MontagePause
// 0x0000 (0x0038 - 0x0038)
class USQAnimNotify_MontagePause : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAnimNotify_MontagePause");
		return ptr;
	}

};


// Class Squad.SQApprovalEntryWidget
// 0x0018 (0x0220 - 0x0208)
class USQApprovalEntryWidget : public USQUserWidget
{
public:
	class UTextBlock*                                  TextBlockCPP;                                             // 0x0208(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      IconImageCPP;                                             // 0x0210(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DescriptionTextCPP;                                       // 0x0218(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQApprovalEntryWidget");
		return ptr;
	}

};


// Class Squad.SQApprovalQueueWidget
// 0x0070 (0x0278 - 0x0208)
class USQApprovalQueueWidget : public USQUserWidget
{
public:
	class UClass*                                      ApprovalEntry;                                            // 0x0208(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UScrollBox*                                  ScrollBoxCPP;                                             // 0x0210(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<uint32_t, class USQApprovalEntryWidget*>      EntryWidgets;                                             // 0x0218(0x0050) (ExportObject, ZeroConstructor)
	class UTextBlock*                                  ApprovalKeyTextCPP;                                       // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DisapprovalKeyTextCPP;                                    // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQApprovalQueueWidget");
		return ptr;
	}


	void Init();
};


// Class Squad.SQAssetManager
// 0x0000 (0x03D8 - 0x03D8)
class USQAssetManager : public UAssetManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAssetManager");
		return ptr;
	}

};


// Class Squad.SQAudioVolume
// 0x0008 (0x03C8 - 0x03C0)
class ASQAudioVolume : public AAudioVolume
{
public:
	ESQAudioVolumeType                                 SquadAudioVolumeType;                                     // 0x03C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQAudioVolume");
		return ptr;
	}

};


// Class Squad.SQBaseButton
// 0x00B8 (0x02C0 - 0x0208)
class USQBaseButton : public USQUserWidget
{
public:
	bool                                               bIsHovering;                                              // 0x0208(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsActive;                                                // 0x0209(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x020A(0x0002) MISSED OFFSET
	float                                              HoveringColorBlend;                                       // 0x020C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoverColorBlendSpeed;                                     // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPressing;                                              // 0x0214(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0215(0x0003) MISSED OFFSET
	float                                              PressColorBlend;                                          // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PressColorBlendSpeed;                                     // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UImage*                                      ButtonImage;                                              // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBorder*                                     ButtonBorder;                                             // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ButtonTextBlock;                                          // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FSQButtonStyle                              SQButtonStyle;                                            // 0x0238(0x0080) (Edit, BlueprintVisible)
	float                                              Alpha;                                                    // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBaseButton");
		return ptr;
	}


	void UpdateActiveState();
	void InitWidget();
};


// Class Squad.SQBaseHudWidget
// 0x0060 (0x0268 - 0x0208)
class USQBaseHudWidget : public USQUserWidget
{
public:
	class UUserWidget*                                 StateIndicators;                                          // 0x0208(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQAmmoWidget*                               AmmoWidget;                                               // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 SightRangeWidget;                                         // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQCompassMK2*                               CompassWidget;                                            // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 CaptureZoneWidget;                                        // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 FOBStatusWidget;                                          // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 StaminaWidget;                                            // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 VehicleHealthWidget;                                      // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQApprovalQueueWidget*                      ApprovalQueueWidget;                                      // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQSeatProgressWidget*                       SeatProgressWidget;                                       // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQStagingTimerText*                         StagingTimerText;                                         // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 CenterDotWidget;                                          // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBaseHudWidget");
		return ptr;
	}


	void UpdateActiveState();
	void InitWidget();
};


// Class Squad.SQPawnMovementComponent
// 0x0088 (0x0200 - 0x0178)
class USQPawnMovementComponent : public UPawnMovementComponent
{
public:
	struct FSQMovePostPhysicsTickFunction              PostPhysicsTickFunction;                                  // 0x0178(0x0058)
	unsigned char                                      UnknownData00[0x20];                                      // 0x01D0(0x0020) MISSED OFFSET
	unsigned char                                      bJustTeleported : 1;                                      // 0x01F0(0x0001) (Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      bIgnoreBaseRotation : 1;                                  // 0x01F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseControllerDesiredRotation : 1;                        // 0x01F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOrientRotationToMovement : 1;                            // 0x01F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bFastAttachedMove : 1;                                    // 0x01F0(0x0001)
	unsigned char                                      bRunPhysicsWithNoController : 1;                          // 0x01F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0xF];                                       // 0x01F1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPawnMovementComponent");
		return ptr;
	}


	class UPrimitiveComponent* GetMovementBase();
};


// Class Squad.SQNetMoveComponent
// 0x0060 (0x0260 - 0x0200)
class USQNetMoveComponent : public USQPawnMovementComponent
{
public:
	bool                                               bPerformMoveOnServer;                                     // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0201(0x0003) MISSED OFFSET
	float                                              MaxPendingMoveDelay;                                      // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxStartLocationDifference;                               // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MoveTimestampQuantum;                                     // 0x020C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldInterpolate;                                       // 0x0210(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0211(0x0003) MISSED OFFSET
	float                                              MinTimeBetweenTimeStampResets;                            // 0x0214(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxSmoothNetUpdateDist;                                   // 0x0218(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NoSmoothNetUpdateDist;                                    // 0x021C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	TArray<unsigned char>                              LatestPackedMove;                                         // 0x0228(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0238(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQNetMoveComponent");
		return ptr;
	}


	void SendPackedMoveRPC(TArray<unsigned char> PackedMove);
	void SendClientCorrection(TArray<unsigned char> PackedMove);
	void OnRep_LatestPackedMove();
};


// Class Squad.SQBasicMoveComponent
// 0x0010 (0x0270 - 0x0260)
class USQBasicMoveComponent : public USQNetMoveComponent
{
public:
	float                                              MovementSpeed;                                            // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0264(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBasicMoveComponent");
		return ptr;
	}

};


// Class Squad.SQBlastComponent
// 0x0020 (0x0270 - 0x0250)
class USQBlastComponent : public USceneComponent
{
public:
	float                                              MaxDamage;                                                // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDrawDebugEnabled;                                      // 0x0254(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0255(0x0003) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EffectsConeLength;                                        // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EffectsConeHalfAngle;                                     // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BlastShockwave;                                           // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBlastComponent");
		return ptr;
	}


	void ServerFireBlast(const struct FVector& BlastLocationZeroBased, const struct FVector& BlastAimVector);
	void FireBlast();
};


// Class Squad.SQBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class USQBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBlueprintLibrary");
		return ptr;
	}


	void STATIC_UpdateSpring3D(float DeltaTime, struct FSQSpringInterpStruct3D* Spring);
	void STATIC_UpdateDynamicEasing(float DeltaTime, struct FSQDynamicEasingStruct* Easing);
	class UAudioComponent* STATIC_SpawnSoundAttachedWithParameters(class USoundBase* Sound, class USceneComponent* AttachToComponent, TArray<struct FAudioComponentParam> AudioParameters, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings);
	void STATIC_SetTextureRenderTarget2DSize(class UTextureRenderTarget2D* Texture, int SizeX, int SizeY);
	void STATIC_SetSkeletalPhysMaterialOverride(class USkeletalMeshComponent* Component, class UPhysicalMaterial* NewPhysMaterial);
	void STATIC_SetMousePosition(class UObject* WorldContextObject, int X, int Y);
	void STATIC_SetMobility(class USceneComponent* Target, TEnumAsByte<EComponentMobility> NewMobility);
	void STATIC_SetMasterPoseComponent(class USkeletalMeshComponent* Target, class USkeletalMeshComponent* Master);
	void STATIC_SetDynamicEasingTarget(float NewTarget, struct FSQDynamicEasingStruct* Easing);
	void STATIC_SetComponentTickGroup(class UActorComponent* Target, TEnumAsByte<ETickingGroup> NewTickGroup);
	void STATIC_SetActorTickGroup(class AActor* Target, TEnumAsByte<ETickingGroup> NewTickGroup);
	void STATIC_SetActorHiddenInGame(class AActor* ActorToAffect, bool bNewHidden, bool bPropagateToAttachedChildren);
	void STATIC_SetActorCollisionInGame(class AActor* ActorToAffect, bool bNewCollisionEnabled, bool bPropagateToAttachedChildren);
	bool STATIC_ServerLicensingNoticeNeeded();
	bool STATIC_ServerHealthEnabled();
	void STATIC_SaveAndForceRebuildingKeyMaps(bool bRestoreDefaults);
	void STATIC_RebindKey(const struct FName& ActionName, const struct FKey& newKey, int OccuranceIndex);
	void STATIC_RebindAxisKey(const struct FInputAxisKeyMapping& Mapping, const struct FKey& newKey);
	void STATIC_PrintShotInfo(const struct FSQShotInfo& Shot);
	void STATIC_PrintHitResult(const struct FHitResult& Hit);
	void STATIC_PlaySoundAtLocationWithParameters(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, TArray<struct FAudioComponentParam> AudioParameters, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings);
	void STATIC_PlaySound2DWithParameters(class UObject* WorldContextObject, class USoundBase* Sound, TArray<struct FAudioComponentParam> AudioParameters, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings);
	void STATIC_PlaySoldierMovementFoleySound(class ASQSoldier* Soldier, class USoundBase* Sound, bool bSetSpeedParameter, bool bSetPhysMatParameter, const struct FVector& LocationOffset, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, TEnumAsByte<EAttachLocation> LocationType);
	bool STATIC_OWICoreStateVisibleDefined();
	bool STATIC_OWICoreStateEnabledDefined();
	void STATIC_OffsetSpring3D(const struct FVector& PosOffset, struct FSQSpringInterpStruct3D* Spring);
	float STATIC_NormalizeAngle(float InAngle);
	bool STATIC_MatchWaitingToStart(class UObject* WorldContextObject);
	bool STATIC_MatchWaitingAfterCompletion(class UObject* WorldContextObject);
	bool STATIC_MatchInProgress(class UObject* WorldContextObject);
	bool STATIC_MapIconVisibleDefined();
	bool STATIC_MapIconEnabledDefined();
	void STATIC_LogUnusedProperties(class UObject* Object);
	void STATIC_LoadCredits(TArray<struct FSQCreditsList>* OutCreditsList);
	bool STATIC_IsValidKey(const struct FKey& Key);
	bool STATIC_IsUnderTerrain(class UObject* WorldContextObject, const struct FVector& StartTrace, class AActor* InIgnoreActor, float TraceDistance, bool bTraceMustImpactAboveToBeUnderTerrain);
	bool STATIC_IsStandaloneOrListenServer();
	bool STATIC_IsStandalone();
	bool STATIC_IsSimulatingInEditor();
	bool STATIC_IsShippingBuild();
	bool STATIC_IsQueueEnabled();
	bool STATIC_IsLocationWithinDistanceToLocalPlayer(const struct FVector& OtherLocation, float DistanceInMeters, ESQReturnBool* Branches);
	bool STATIC_IsGamepadKey(const struct FKey& Key);
	bool STATIC_IsActorWithinDistanceToLocalPlayer(class AActor* OtherActor, float DistanceInMeters, ESQReturnBool* Branches);
	bool STATIC_InMainMenu(class UObject* WorldContextObject);
	float STATIC_GetZoomedFOV(float MagnificationDesired, float DefaultFOV);
	class AWorldSettings* STATIC_GetWorldSettings(class UObject* WorldContextObject);
	struct FSQTextureMemoryStats STATIC_GetTextureMemoryStats();
	struct FVector2D STATIC_GetTextSize(const struct FSlateFontInfo& FontInfo, const struct FText& Text, float ScaleUI);
	void STATIC_GetSquadPhysMat(class UPhysicalMaterial* PhysMat, class USQPhysicalMaterial** SquadPhysMat);
	class USQGameUserSettings* STATIC_GetSquadGameUserSettings();
	class ASQGameSession* STATIC_GetSquadGameSession(class UObject* WorldContextObject);
	class USQGameInstance* STATIC_GetSquadGameInstance(class UObject* WorldContextObject);
	struct FVector STATIC_GetSpringPos3D(const struct FSQSpringInterpStruct3D& Spring);
	void STATIC_GetServerHealthValues(float* ServerHealthLow, float* ServerHealthHigh);
	struct FSlateColor STATIC_GetServerHealthSlateColor(class UObject* WorldContextObject, int ServerHealth);
	void STATIC_GetPrimaryDisplaySize(int* Width, int* Height);
	int STATIC_GetPreviousLODLevel(class UStaticMeshComponent* Component);
	TArray<struct FHitResult> STATIC_GetOverlapHitInfos(class UPrimitiveComponent* Target);
	int STATIC_GetNumVertices(class UStaticMesh* StaticMesh, int LOD);
	int STATIC_GetNumTriangles(class UStaticMesh* StaticMesh, int LOD);
	int STATIC_GetNumTexCoords(class UStaticMesh* StaticMesh, int LOD);
	int STATIC_GetNumSections(class UStaticMesh* StaticMesh, int LOD);
	struct FString STATIC_GetNetMode();
	struct FString STATIC_GetNatoPhoneticString(int Index);
	float STATIC_GetLastRenderTime(class UPrimitiveComponent* Component);
	struct FText STATIC_GetKeysMappedToActionText(const struct FName& ActionName);
	void STATIC_GetKeysMappedToAction(const struct FName& ActionName, TArray<struct FKey>* Keys);
	void STATIC_GetKeysMapedToAxis(const struct FName& AxisName, bool Negative, TArray<struct FInputAxisKeyMapping>* Keys);
	void STATIC_GetKeyName(const struct FKey& Key, struct FName* OutName);
	void STATIC_GetKeyDisplayName(const struct FKey& Key, struct FText* OutDisplayName);
	int STATIC_GetIntFromPhysMat(class UPhysicalMaterial* PhysMat);
	int STATIC_GetIntFromFName(const struct FName& Name);
	void STATIC_GetGameVersionInfo(struct FString* Variant, int* Major, int* Minor, int* Build, int* Revision);
	struct FString STATIC_GetGameVersion();
	float STATIC_GetDynamicEasingPosition(const struct FSQDynamicEasingStruct& Easing);
	class UObject* STATIC_GetDefaultObjectFor(class UClass* Class);
	void STATIC_GetCustomServerSetting(const struct FString& PropertyName, struct FString* OutResult);
	struct FString STATIC_GetCurrentMapName(class UObject* WorldContextObject);
	void STATIC_GetComponentTransform(class USceneComponent* Component, struct FTransform* OutTransform);
	void STATIC_GetCanvasSize(class UCanvas* Canvas, int* SizeX, int* SizeY);
	TArray<struct FAudioComponentParam> STATIC_GetAudioComponentParamsArrayFromPhysMat(class UPhysicalMaterial* PhysMat);
	struct FAudioComponentParam STATIC_GetAudioComponentParamFromPhysMat(class UPhysicalMaterial* PhysMat);
	struct FSQAnnouncement STATIC_GetAnnouncement();
	struct FString STATIC_GetAlphabetLetterString(int Index);
	void STATIC_GetAllKeyMappings(TArray<struct FInputActionKeyMapping>* KeyMappings);
	void STATIC_GetAllComponentsOfClass(class AActor* WorldContextObject, class UClass* Class, TArray<class UObject*>* Components);
	float STATIC_GetActorHalfHeight(class AActor* TestActor);
	void STATIC_GetActionKeyName(const struct FName& ActionName, struct FName* Name);
	struct FText STATIC_FormatTextActionKeys(const struct FText& FormatText, TArray<struct FName> ActionKeys);
	class ASQPlayerController* STATIC_FindPlayerByPlayerId(class UWorld* World, int PlayerId);
	class ASQPlayerController* STATIC_FindPlayerByNameOrId(class UWorld* World, const struct FString& NameOrId);
	bool STATIC_FileSaveString(const struct FString& Filename, const struct FString& InText);
	bool STATIC_FileLoadString(const struct FString& Filename, struct FString* OutText);
	void STATIC_DumpStaticMeshDrawListStats(class UObject* WorldContextObject);
	void STATIC_ConvertNumberToGridLetter(int Value, struct FString* OutResult);
	bool STATIC_ComponentIsDamageableFrom(class UPrimitiveComponent* VictimComp, const struct FVector& Origin, class AActor* IgnoredActor, TArray<class AActor*> IgnoreActors, TEnumAsByte<ECollisionChannel> TraceChannel, struct FHitResult* OutHitResult);
	struct FVector STATIC_ClosestPointOnLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& Point);
	void STATIC_ClampVector(const struct FVector& Min, const struct FVector& Max, struct FVector* Vector);
	float STATIC_ClampDeltaAngle(float InDeltaAngle, float CurrentAngle, float MinAngle, float MaxAngle);
	float STATIC_ClampDelta(float InDelta, float Current, float Min, float Max);
	void STATIC_CenterMousePosition(class UObject* WorldContextObject);
	float STATIC_CalculateAmmoCostToSwapRole(class USQRoleSettings* NewRole);
	void STATIC_CalcTimeToMid(float Midpoint, float Position, float Velocity, float Acceleration, float* TimeToMid);
	void STATIC_CalcMidpoint(float Target, float Position, float Velocity, float Acceleration, float* Midpoint);
	void STATIC_BreakInputAxisKeyMapping(const struct FInputAxisKeyMapping& KeyMapping, struct FName* ActionName, struct FKey* Key, float* Scale);
	void STATIC_BreakInputActionKeyMapping(const struct FInputActionKeyMapping& KeyMapping, struct FName* ActionName, struct FKey* Key, bool* bShift, bool* bCtrl, bool* bAlt, bool* bCmd);
	void STATIC_BreakFullHitResult(const struct FHitResult& Hit, struct FVector* Location, struct FVector* Normal, struct FVector* ImpactPoint, struct FVector* ImpactNormal, struct FVector* TraceStart, struct FVector* TraceEnd, bool* bBlockingHit, bool* bStartPenetrating, float* PenetrationDepth, float* Time, class UPhysicalMaterial** PhysMat, class AActor** HitActor, class UPrimitiveComponent** HitComponent, struct FName* HitBoneName, int* HitItem, int* HitFaceIndex);
	TArray<struct FAudioComponentParam> STATIC_AssembleSoldierAudioParameters(class ASQSoldier* Soldier, bool bSetSpeedParameter, bool bSetFloorPhysMatParameter);
	bool STATIC_ApplyRadialDamageWithFalloff(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float KillZoneRadius, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, bool bOnlyDamageMeshes, TEnumAsByte<ECollisionChannel> DamagePreventionChannel);
	void STATIC_ApplyOppositeAcceleration(float Target, float Position, float Velocity, float OppositeAcceleration, float DeltaTime, float* NewPosition, float* NewVelocity, float* TimeLeft);
	bool STATIC_ApplyHitResultRadialDamageWithFalloff(class UObject* WorldContextObject, const struct FHitResult& HitResult, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float KillZoneRadius, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, bool bOnlyDamageMeshes, TEnumAsByte<ECollisionChannel> DamagePreventionChannel);
	void STATIC_ApplyDeceleration(float Position, float Velocity, float Acceleration, float TimeLeft, float* NewPosition, float* NewVelocity);
	void STATIC_ApplyAcceleration(float TimeToMid, float Midpoint, float Position, float Velocity, float Acceleration, float DeltaTime, float* NewPosition, float* NewVelocity, float* TimeLeft);
	struct FVector2D STATIC_AdjustPositionForTextAlignment(const struct FVector2D& OriginalRenderPosition, const struct FVector2D& TextSize, ESQTextHorizontalAlignment HorizontalAlignment, ESQTextVerticalAlignment VerticalAlignment);
	void STATIC_ActivateReverbEffectFixed(class UObject* WorldContextObject, class UReverbEffect* ReverbEffect, const struct FName& TagName, float Priority, float Volume, float FadeTime);
};


// Class Squad.SQSoldier
// 0x0E40 (0x1590 - 0x0750)
class ASQSoldier : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0750(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      Mesh1P;                                                   // 0x0758(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh1PShadow;                                             // 0x0760(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bEnableTickUpdateShiftMesh : 1;                           // 0x0768(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0769(0x0003) MISSED OFFSET
	struct FVector                                     ShiftMeshOffset;                                          // 0x076C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Prone2SprintMovementRecovery;                             // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Prone2SprintAlpha;                                        // 0x077C(0x0004) (ZeroConstructor, IsPlainOldData)
	class USQConsoleVariablesComponent*                ConsoleVariablesComponent;                                // 0x0780(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class USkeletalMesh*>                       SoldierMeshSkins;                                         // 0x0788(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PatchMaterialIndex;                                       // 0x0798(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HoldingBreathVelocityLimit;                               // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCameraComponent*                            FirstPersonCameraComponent;                               // 0x07A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              WeaponBasedFOV;                                           // 0x07A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07AC(0x0004) MISSED OFFSET
	class USQSoldierMovement*                          SoldierMovement;                                          // 0x07B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SnapZone;                                                 // 0x07B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FPostProcessSettings                        LowHealthPostProcessSettings;                             // 0x07C0(0x04E0) (Edit, BlueprintVisible)
	struct FPostProcessSettings                        SuppressionPostProcessSettings;                           // 0x0CA0(0x04E0) (Edit, BlueprintVisible)
	unsigned char                                      bAllowEffectsForProjectilesFiredWithinSuppressionRange : 1;// 0x1180(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03[0x3];                                       // 0x1181(0x0003) MISSED OFFSET
	float                                              UnderSuppressionPercentage;                               // 0x1184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	float                                              SuppressionEffectsDecayRate;                              // 0x1188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BaseTurnRate;                                             // 0x118C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BaseLookUpRate;                                           // 0x1190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      bIsDoubleTapWalking : 1;                                  // 0x1194(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData04[0x3];                                       // 0x1195(0x0003) MISSED OFFSET
	struct FVector                                     GunOffset;                                                // 0x1198(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneEyeHeight;                                           // 0x11A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsProne : 1;                                             // 0x11A8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData05 : 1;                                        // 0x11A8(0x0001)
	unsigned char                                      bInThirdPersonView : 1;                                   // 0x11A8(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      bCachedInThirdPerson : 1;                                 // 0x11A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData06[0x7];                                       // 0x11A9(0x0007) MISSED OFFSET
	struct FName                                       AttachSocket1PName;                                       // 0x11B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachSocket3PName;                                       // 0x11B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQCoreStateComponent*                       StateObject;                                              // 0x11C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQMapIconComponent*                         MapIcon;                                                  // 0x11C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              SecondsUntilIgnoreDistanceForAliveTeamMates;              // 0x11D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SecondsOfSpawnProtection;                                 // 0x11D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InvulnerableDelay;                                        // 0x11D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RagdollLifeSpan;                                          // 0x11DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQBoneDamageMod>                    BoneDamageModifiers;                                      // 0x11E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData07[0x30];                                      // 0x11F0(0x0030) MISSED OFFSET
	unsigned char                                      LeaningDirection;                                         // 0x1220(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x1221(0x0003) MISSED OFFSET
	float                                              BlockLeanTraceDistance;                                   // 0x1224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              UseInteractDistance;                                      // 0x1228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x122C(0x0004) MISSED OFFSET
	class AActor*                                      UseFocus;                                                 // 0x1230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x1238(0x0004) MISSED OFFSET
	float                                              SnapZoneRadius;                                           // 0x123C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceToSuppressedTarget;                            // 0x1240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullSuppressionRadius;                                    // 0x1244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SuppressionRadius;                                        // 0x1248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x124C(0x0004) MISSED OFFSET
	class USQVehicleSeatComponent*                     CurrentSeat;                                              // 0x1250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bTestingMove : 1;                                         // 0x1258(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData12[0x3];                                       // 0x1259(0x0003) MISSED OFFSET
	float                                              CachedMoveRotation;                                       // 0x125C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CachedMoveRotationPoint;                                  // 0x1260(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CachedForwardVector;                                      // 0x126C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnChangedSeat;                                            // 0x1278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bStopADSWhenSprintPressed : 1;                            // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStopADSWhenPronePressed : 1;                             // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStopADSWhenUnpronePressed : 1;                           // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStopSprintWhenADSPressed : 1;                            // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStopUsingPrimaryItemWhenPronePressed : 1;                // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStopUsingAltItemWhenPronePressed : 1;                    // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStopUsingPrimaryItemWhenUnpronePressed : 1;              // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStopUsingAltItemWhenUnpronePressed : 1;                  // 0x1288(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bItemLoweredDueToCollision : 1;                           // 0x1289(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCachedADSDuringItemCollision : 1;                        // 0x1289(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData13[0x6];                                       // 0x128A(0x0006) MISSED OFFSET
	class AActor*                                      UsingObject;                                              // 0x1290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleSeatEntryWeaponSlot;                               // 0x1298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                VehicleSeatEntryWeaponOffset;                             // 0x129C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x10];                                      // 0x12A0(0x0010) MISSED OFFSET
	struct FSQTakeHitInfo                              LastTakeHitInfo;                                          // 0x12B0(0x0138) (Net, Transient)
	unsigned char                                      SoldierSkinIndex;                                         // 0x13E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x13E9(0x0003) MISSED OFFSET
	unsigned char                                      bIsDying : 1;                                             // 0x13EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst)
	unsigned char                                      UnknownData16 : 1;                                        // 0x13EC(0x0001)
	unsigned char                                      bIsBleeding : 1;                                          // 0x13EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst)
	unsigned char                                      bIsWounded : 1;                                           // 0x13EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst)
	unsigned char                                      UnknownData17 : 1;                                        // 0x13EC(0x0001)
	unsigned char                                      bAllowWoundedState : 1;                                   // 0x13EC(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData18[0x3];                                       // 0x13ED(0x0003) MISSED OFFSET
	float                                              Health;                                                   // 0x13F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              LastHealedTime;                                           // 0x13F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WoundedThreshold;                                         // 0x13F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HealthBleedableThreshold;                                 // 0x13FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HealthHurtMovementThreshold;                              // 0x1400(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageBleedableThreshold;                                 // 0x1404(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WoundedHealthLossRate;                                    // 0x1408(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WoundedBandagedHealthLossRate;                            // 0x140C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BleedingHealthLossRate;                                   // 0x1410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              KillDamageThreshold;                                      // 0x1414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HealthUponRevival;                                        // 0x1418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBecameWounded;                                        // 0x141C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBecameRevived;                                        // 0x1420(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinTimeSinceReviveToPreventImmediateDeath;                // 0x1424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WoundedEffectTime;                                        // 0x1428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CumulativeRevivePenalty;                                  // 0x142C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bIsHoldingBreath : 1;                                     // 0x1430(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData19[0x3];                                       // 0x1431(0x0003) MISSED OFFSET
	float                                              BreathHoldStamina;                                        // 0x1434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreathHoldStaminaMax;                                     // 0x1438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreathHoldRecoveryDuration;                               // 0x143C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreathHoldConsumptionDuration;                            // 0x1440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreathHoldFadeDuration;                                   // 0x1444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreathHoldPct;                                            // 0x1448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusZoomAlpha;                                           // 0x144C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FallingDamageMultiplier;                                  // 0x1450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaximumSafeFallingSpeed;                                  // 0x1454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundMix*                                   WoundedSoundMix;                                          // 0x1458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundMix*                                   BleedingSoundMix;                                         // 0x1460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ESQListenerType                                    ListenerType;                                             // 0x1468(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x7];                                       // 0x1469(0x0007) MISSED OFFSET
	class UCurveLinearColor*                           HealthBasedFilterGainCurve;                               // 0x1470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bUseHealthBasedFilterGainCurveForWoundedSoundMix : 1;     // 0x1478(0x0001) (Edit)
	unsigned char                                      bUseHealthBasedFilterGainCurveForBleedingSoundMix : 1;    // 0x1478(0x0001) (Edit)
	unsigned char                                      UnknownData21[0x7];                                       // 0x1479(0x0007) MISSED OFFSET
	class UCurveFloat*                                 HeartbeatVolumeCurve;                                     // 0x1480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  HeartbeatSound;                                           // 0x1488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  HeartbeatIncapSound;                                      // 0x1490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DefaultLandedSound;                                       // 0x1498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  HitSound;                                                 // 0x14A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  FirstPersonHitSound;                                      // 0x14A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  IncapSound;                                               // 0x14B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FSQBoneHitSound>                     BoneHitSounds;                                            // 0x14B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                              IncapSoundOccurrencePercentage;                           // 0x14C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bPlayIncapSound : 1;                                      // 0x14CC(0x0001) (Net)
	unsigned char                                      UnknownData22[0x3];                                       // 0x14CD(0x0003) MISSED OFFSET
	class USoundBase*                                  DeathSound;                                               // 0x14D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ClothingSound;                                            // 0x14D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  EquipmentSound;                                           // 0x14E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ResupplyCrateSound;                                       // 0x14E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeathSoundOccurrencePercentage;                           // 0x14F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bPlayDeathSound : 1;                                      // 0x14F4(0x0001) (Net)
	unsigned char                                      UnknownData23[0x3];                                       // 0x14F5(0x0003) MISSED OFFSET
	class UAudioComponent*                             FoleyAC;                                                  // 0x14F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             HeartbeatAC;                                              // 0x1500(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             HeartbeatIncapAC;                                         // 0x1508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      PhysMatEffectsClass;                                      // 0x1510(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bTeamControllersAlwaysRelevant : 1;                       // 0x1518(0x0001) (Config)
	unsigned char                                      bPerfToggleMultiCastLean : 1;                             // 0x1518(0x0001) (Config)
	unsigned char                                      UnknownData24[0x7];                                       // 0x1519(0x0007) MISSED OFFSET
	class UPhysicsHandleComponent*                     DraggingHandle;                                           // 0x1520(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             DraggingHook;                                             // 0x1528(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bIsDragging : 1;                                          // 0x1530(0x0001) (BlueprintVisible)
	unsigned char                                      bSetToSimulatePhysics : 1;                                // 0x1530(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData25[0x7];                                       // 0x1531(0x0007) MISSED OFFSET
	class USQSoldierRagdollComponent*                  RagdollComponent;                                         // 0x1538(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQBuffManager*                              Buffs;                                                    // 0x1540(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData26[0x8];                                       // 0x1548(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDeathEvent;                                             // 0x1550(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USQSoldierStaticInfo*                        SoldierStaticInfo;                                        // 0x1560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData27[0x10];                                      // 0x1568(0x0010) MISSED OFFSET
	class USQPawnInventoryComponent*                   InventoryComponent;                                       // 0x1578(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData28[0x8];                                       // 0x1580(0x0008) MISSED OFFSET
	class USoundMix*                                   CurrentSoundMix;                                          // 0x1588(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoldier");
		return ptr;
	}


	bool Wound(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser);
	void UpdatePatches();
	void UpdateFirstPersonVisibility();
	void UnProne();
	bool SwitchWeapon(int NewWeaponSlotla);
	void SwitchedSeat(class USQVehicleSeatComponent* PreviousSeat, class USQVehicleSeatComponent* NewSeat);
	void Suicide();
	void StopBleeding();
	void StartAimDownSights();
	void SetSeatState(ESQSoldierSeatState SoldierSeatState);
	void SetFirstPersonVisibility(bool bIsFirstPersonVisible);
	void ServerVehicleCollision(class ASQVehicle* Vehicle, bool bShouldKill);
	void ServerPickupAmmoBag(class ASQDeployableAmmoBag* ammobag);
	void ServerEndInteract();
	void ServerDragBody(class UPrimitiveComponent* ComponentToDrag, const struct FName& BoneName, const struct FVector& GrabLocation);
	void ServerDisableSpawnProtection();
	void ServerDebugToggleGodMode();
	void ServerDebugStopBleeding();
	void ServerDebugRevive();
	void ServerDebugRearm();
	void ServerBeginInteract();
	void ReviveServerOnly();
	void RaycastBodyDragging();
	void Prone();
	void PlayFootStep(const struct FName& SocketName, const struct FName& OpposingKneeSocketName, float MaxDistanceInMeters);
	void PlayEquipmentSound(float MaxDistanceInMeters);
	void PlayClothingSound(float MaxDistanceInMeters);
	void OnSnapZoneOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnSnapZoneOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_SoldierSkinIndex();
	void OnRep_LastTakeHitInfo();
	void OnRep_IsWounded();
	void OnRep_IsDying();
	void OnRep_IsBleeding();
	void OnRep_Health(float OldHealth);
	void OnRep_CurrentSeat(class USQVehicleSeatComponent* PreviousSeat);
	void OnPrevItem();
	void OnNextItem();
	void MulticastToggleGodMode();
	void MulticastLean(unsigned char NewLeanDirection);
	void MulticastChangeRootComponent(bool bSetMeshAsRoot);
	void LeftVehicle(class USQVehicleSeatComponent* PreviousSeat);
	void LeftSeat(class USQVehicleSeatComponent* PreviousSeat, bool bSwitchedSeats, bool bLeftVehicle);
	bool IsSprinting();
	bool IsInVehicle();
	bool IsInteracting();
	bool IsFirstPersonViewTarget();
	bool IsAlive();
	void Heal(float AmountHealed);
	class ASQTeamState* GetTeamState();
	int GetTeam();
	ESQSoldierSeatState GetSeatState();
	class ASQEquipableItem* GetPendingWeapon();
	int GetMaxHealth();
	class USQPawnInventoryComponent* GetInventory();
	bool GetFirstPersonVisibility();
	class ASQEquipableItem* GetCurrentWeapon();
	class ASQVehicle* GetCurrentVehicle();
	struct FRotator GetCurrentSeatWeaponRotation();
	class ASQVehicleSeat* GetCurrentSeatPawn();
	class USQVehicleSeatComponent* GetCurrentSeat();
	void EnteredVehicle(class USQVehicleSeatComponent* NewSeat);
	void EnteredSeat(class USQVehicleSeatComponent* PreviousSeat, class USQVehicleSeatComponent* NewSeat, bool bSwitchedSeats, bool bEnteredVehicle);
	void EndInteract();
	void EndFireWeapon();
	void EndAltFireWeapon();
	void EndAimDownSights();
	void DisableSpawnProtection();
	bool Die(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser);
	void DebugToggleGodMode();
	void DebugStopBleeding();
	void DebugRevive();
	void DebugRearm();
	void ClearSeatState();
	void ChangeSoundMix(class USoundMix* NewSoundMix);
	bool CanStartWithMaxAmmo();
	void BPWoundedDamageTaken(float damage);
	void BPWound(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser);
	void BPOnSuppression(const struct FVector& ClosestPoint, float ClosenessRatio, bool bAppliedSuppression);
	void BPOnStartProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void BPOnSnapZoneOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BPOnSnapZoneOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BPOnEndProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	struct FVector2D BPGetYawViewLimits(const struct FVector2D& YawViewLimits);
	void BPDie(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser);
	void BPBleedingDamageTaken(float damage);
	void BlueprintUpdateSkin();
	void BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible);
	void BlueprintCalcCamera(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV);
	void BeginInteract();
	void BeginFireWeapon();
	void BeginAltFireWeapon();
	bool AttemptToRearmWeapons(const TScriptInterface<class USQRearmSource>& RearmSource, TArray<struct FSQRearmWeaponRequest> RearmRequest);
	bool AttemptSuppression(const struct FVector& SuppressionStart, const struct FVector& SuppressionEnd, class AActor* ProjectileInstigator, class UClass* SuppressionInfoClass, struct FVector* OutClosestPoint, bool* bOutApplySuppression);
};


// Class Squad.SQBot
// 0x0010 (0x15A0 - 0x1590)
class ASQBot : public ASQSoldier
{
public:
	class UBehaviorTree*                               BotBehavior;                                              // 0x1590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x1598(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBot");
		return ptr;
	}

};


// Class Squad.SQBotComponent
// 0x0028 (0x0118 - 0x00F0)
class USQBotComponent : public UActorComponent
{
public:
	class ASQSoldierNew*                               TargetEnemy;                                              // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class ASQSoldierNew*                               OwnerSoldier;                                             // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0100(0x0004) MISSED OFFSET
	float                                              TargetingRange;                                           // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CheckAtFloorDistance;                                     // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RandomHeadingYawRange;                                    // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RandomHeadingPitchRange;                                  // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TargetingMaxPitchDelta;                                   // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBotComponent");
		return ptr;
	}

};


// Class Squad.SQBoundaryListener
// 0x0068 (0x0158 - 0x00F0)
class USQBoundaryListener : public UActorComponent
{
public:
	bool                                               bRegisterToAllBoundaries;                                 // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	TArray<class UClass*>                              TargetBoundaryClasses;                                    // 0x00F8(0x0010) (Edit, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnEnterBoundarySignal;                                    // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitBoundarySignal;                                     // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AActor*                                      OverrideTargetActor;                                      // 0x0128(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class ASQBoundary*>                         Boundaries;                                               // 0x0130(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0140(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBoundaryListener");
		return ptr;
	}


	void UnregisterAllBoundaries();
	bool ShouldRegisterToBoundary(class ASQBoundary* Boundary);
	void OnExitBoundary(class ASQBoundary* Boundary);
	void OnEnterBoundary(class ASQBoundary* Boundary);
	class AActor* GetActor();
};


// Class Squad.SQBoundary
// 0x00C0 (0x03F0 - 0x0330)
class ASQBoundary : public AActor
{
public:
	class USplineComponent*                            XYBoundary;                                               // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bXYBoundaryTangetsInwards;                                // 0x0338(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0339(0x0003) MISSED OFFSET
	int                                                BoundaryMaskSizeX;                                        // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BoundaryMaskSizeY;                                        // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	class UTexture2D*                                  BoundaryMask;                                             // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CeilingHeight;                                            // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloorHeight;                                              // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CheckDelaySeconds;                                        // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDefaultToInside;                                         // 0x035C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bComplexCheck;                                            // 0x035D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x035E(0x0002) MISSED OFFSET
	TMap<class USQBoundaryListener*, struct FSQBoundaryListenerData> ListenerDatas;                                            // 0x0360(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData03[0x28];                                      // 0x03B0(0x0028) MISSED OFFSET
	TArray<unsigned char>                              BoundaryMaskData;                                         // 0x03D8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBoundary");
		return ptr;
	}


	bool UnregisterListener(class USQBoundaryListener* Listener);
	bool RegisterListener(class USQBoundaryListener* Listener, bool bForce);
	void OnListenerExitBoundary(class USQBoundaryListener* Listener);
	void OnListenerEnterBoundary(class USQBoundaryListener* Listener);
	bool IsInside(const struct FVector& Location);
	void GenerateBoundaryMask();
	struct FSQBoundaryListenerData FindListenerData(class USQBoundaryListener* Listener, bool* bOutFound);
};


// Class Squad.SQBTDecorator_HasLoSTo
// 0x0028 (0x0090 - 0x0068)
class USQBTDecorator_HasLoSTo : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      EnemyKey;                                                 // 0x0068(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBTDecorator_HasLoSTo");
		return ptr;
	}

};


// Class Squad.SQBTTask_FindPointNearEnemy
// 0x0000 (0x0098 - 0x0098)
class USQBTTask_FindPointNearEnemy : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBTTask_FindPointNearEnemy");
		return ptr;
	}

};


// Class Squad.SQBuffManager
// 0x0020 (0x0110 - 0x00F0)
class USQBuffManager : public UActorComponent
{
public:
	struct FSQBuffDesc                                 Buffs[0x4];                                               // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBuffManager");
		return ptr;
	}

};


// Class Squad.SQDamageType
// 0x0000 (0x0040 - 0x0040)
class USQDamageType : public UDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDamageType");
		return ptr;
	}

};


// Class Squad.SQBurningDamage
// 0x0000 (0x0040 - 0x0040)
class USQBurningDamage : public USQDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQBurningDamage");
		return ptr;
	}

};


// Class Squad.SQCameraMan
// 0x0060 (0x07B0 - 0x0750)
class ASQCameraMan : public ACharacter
{
public:
	ESQListenerType                                    ListenerType;                                             // 0x0750(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0751(0x0003) MISSED OFFSET
	float                                              BaseTurnRate;                                             // 0x0754(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BaseLookUpRate;                                           // 0x0758(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x075C(0x0004) MISSED OFFSET
	class USpringArmComponent*                         SpringArm;                                                // 0x0760(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            FirstPersonCameraComponent;                               // 0x0768(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture*                                    CameraManHUDIconTexture;                                  // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTryingToGainAltitude;                                  // 0x0778(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTryingToLoseAltitude;                                  // 0x0779(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x26];                                      // 0x077A(0x0026) MISSED OFFSET
	class USQCoreStateComponent*                       StateObject;                                              // 0x07A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x07A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCameraMan");
		return ptr;
	}


	void ServerSetFlySpeedTarget(float InFlySpeedTarget);
	void ServerSetDecelerationTarget(float InDecelerationTarget);
	void DrawHUD(class ASQHUD* SquadHUD, class UCanvas* Canvas);
};


// Class Squad.SQGraphNodeComponent
// 0x0078 (0x0168 - 0x00F0)
class USQGraphNodeComponent : public UActorComponent
{
public:
	class UClass*                                      RouteSelectorPredicate;                                   // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RouteSelectorVisualizerPredicate;                         // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RouteCombinerPredicate;                                   // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0108(0x0050) UNKNOWN PROPERTY: SetProperty Squad.SQGraphNodeComponent.DesignOutgoingLinks
	unsigned char                                      UnknownData01[0x10];                                      // 0x0158(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGraphNodeComponent");
		return ptr;
	}


	void RemoveNeighbor(class USQGraphNodeComponent* Neighbor);
	void GetNeighbors(TArray<class USQGraphNodeComponent*>* InOutNodes);
	void AddNeighbor(class USQGraphNodeComponent* Neighbor);
};


// Class Squad.SQCaptureZoneComponent
// 0x0080 (0x01E8 - 0x0168)
class USQCaptureZoneComponent : public USQGraphNodeComponent
{
public:
	unsigned char                                      InitialTeam;                                              // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0169(0x0007) MISSED OFFSET
	struct FText                                       FlagName;                                                 // 0x0170(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      CapturingTeam;                                            // 0x0188(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      OwningTeam;                                               // 0x0189(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LastOwningTeam;                                           // 0x018A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x018B(0x0001) MISSED OFFSET
	float                                              TimeToCap;                                                // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Uncappable;                                               // 0x0190(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0191(0x0003) MISSED OFFSET
	int                                                PlayerAdvantageToCapture;                                 // 0x0194(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PlayersNeededWhenUncaptured;                              // 0x0198(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CapturePercent;                                           // 0x019C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                CapturePercentDirection;                                  // 0x01A0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLocked;                                                // 0x01A4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01A5(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    CaptureStateChangeEvent;                                  // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USQCoreStateComponent*                       StateObject;                                              // 0x01B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x01C0(0x0018) MISSED OFFSET
	uint32_t                                           TeamCapturabilities;                                      // 0x01D8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x01DC(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCaptureZoneComponent");
		return ptr;
	}


	void UpdateLockState();
	void UpdateCaptureState(class USQCaptureZoneComponent* CaptureZone, unsigned char Team);
	void UpdateCanCaptureState(TArray<class USQCaptureZoneComponent*>* TeamOneDir, TArray<class USQCaptureZoneComponent*>* TeamTwoDir);
	void UnlockCaptureZone();
	bool SetTeamCanCapture(unsigned char Team, bool bCanCap);
	void OnRep_Uncappable();
	void OnRep_TeamCapturabilities();
	void OnRep_OwningTeam();
	void OnRep_CapturingTeam();
	void OnRep_CapturePercent();
	void OnIndexedTeamStatesReplicated();
	void Neutralize();
	void LockCaptureZone();
	void GetPlayersInCaptureZone(TArray<class AActor*>* TeamOne, TArray<class AActor*>* TeamTwo);
	void GetCapturezoneDirections(TArray<class USQCaptureZoneComponent*>* TeamOneDir, TArray<class USQCaptureZoneComponent*>* TeamTwoDir);
	bool GetCanTeamCapture(unsigned char Team);
	void FullyCap(unsigned char ForTeam);
	class USQGraphNodeComponent* FindMainBase(unsigned char Team, TArray<class USQGraphNodeComponent*>* VisitedNodes);
	void CaptureTick();
};


// Class Squad.SQCaptureZoneInvasionComponent
// 0x0008 (0x01F0 - 0x01E8)
class USQCaptureZoneInvasionComponent : public USQCaptureZoneComponent
{
public:
	int                                                TeamToLockFor;                                            // 0x01E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01EC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCaptureZoneInvasionComponent");
		return ptr;
	}

};


// Class Squad.SQCaptureZoneResourceComponent
// 0x0000 (0x00F0 - 0x00F0)
class USQCaptureZoneResourceComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCaptureZoneResourceComponent");
		return ptr;
	}

};


// Class Squad.SQCaptureZoneTCComponent
// 0x0000 (0x01E8 - 0x01E8)
class USQCaptureZoneTCComponent : public USQCaptureZoneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCaptureZoneTCComponent");
		return ptr;
	}

};


// Class Squad.SQChatWidgetStyle
// 0x0908 (0x0938 - 0x0030)
class USQChatWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FSQChatStyle                                ChatStyle;                                                // 0x0030(0x0908) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQChatWidgetStyle");
		return ptr;
	}

};


// Class Squad.SQClientsideWeaponSettings
// 0x0028 (0x0060 - 0x0038)
class USQClientsideWeaponSettings : public UDeveloperSettings
{
public:
	float                                              MaxVerificationAngle;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              ShotTimeout;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              SlowProjectileTimeout;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNotifyPlayerOnShotFail;                                  // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNotifyAdminOnShotFail;                                   // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNotifyPlayerOnHitFail;                                   // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNotifyAdminOnHitFail;                                    // 0x0047(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	TArray<ESQHitDetectionFailReason>                  NotifyOnlyOnTheseFailureReasons;                          // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config)
	int                                                ConsecutiveFailedShotKickAmount;                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	int                                                ConsecutiveFailedHitKickAmount;                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQClientsideWeaponSettings");
		return ptr;
	}

};


// Class Squad.SQCollisionDamage
// 0x0018 (0x0108 - 0x00F0)
class USQCollisionDamage : public UActorComponent
{
public:
	float                                              MinDamage;                                                // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDamage;                                                // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinImpactForce;                                           // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxImpactForce;                                           // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 InterpCurve;                                              // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCollisionDamage");
		return ptr;
	}


	void OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	float CalculateDamage(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ApplyDamage(float damage);
};


// Class Squad.SQColorsDataAsset
// 0x0080 (0x00B0 - 0x0030)
class USQColorsDataAsset : public UDataAsset
{
public:
	struct FLinearColor                                TintColors[0x7];                                          // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FLinearColor>                        FireTeamColors;                                           // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQColorsDataAsset");
		return ptr;
	}


	struct FLinearColor GetColor(TEnumAsByte<ESQMapWidgetTint> TintValue, int FireTeamIndex);
};


// Class Squad.SQCommanderInputComponent
// 0x0000 (0x00F0 - 0x00F0)
class USQCommanderInputComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCommanderInputComponent");
		return ptr;
	}


	void VotePlayer(class ASQPlayerState* Player);
	void ServerVoteForCommander(class ASQPlayerState* Nominee);
	void ServerRequestSupportAtLocation(const struct FVector& WorldLocation);
	void ServerMakePlayerCommander(class ASQPlayerState* NewCommander);
	void ServerDemoteCommander();
	void RequestSupportAtLocation(const struct FVector& WorldLocation);
	void DebugVoteForCommander(const struct FString& PlayerName);
	void DebugDemoteCommander();
	void DebugBecomeCommander();
};


// Class Squad.SQTeam
// 0x0070 (0x03A0 - 0x0330)
class ASQTeam : public AInfo
{
public:
	class UClass*                                      TeamStateClass;                                           // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class UClass*                                      PrivateTeamStateClass;                                    // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class ASQTeamState*                                TeamState;                                                // 0x0340(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ASQTeamStatePrivate*                         PrivateTeamState;                                         // 0x0348(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class ASQSquad*>                            Squads;                                                   // 0x0350(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class ASQSquad*>                            IndexedSquads;                                            // 0x0360(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class ASQPlayerController*                         Commander;                                                // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQSquad*                                    CommandSquad;                                             // 0x0378(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQCommanderManager*                         CommanderManager;                                         // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0388(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeam");
		return ptr;
	}


	bool TryClaimRole(class USQRoleSettings* SquadRole, class ASQPlayerController* Player, bool bForDeployment);
	void ReleaseRole(class USQRoleSettings* SquadRole, class ASQPlayerController* Player);
	struct FString STATIC_GetNatoStringOrSquadString(int Idx);
	void ForceRecalcRoleUsage();
};


// Class Squad.SQCommanderManager
// 0x0018 (0x0108 - 0x00F0)
class USQCommanderManager : public UActorComponent
{
public:
	class ASQCommanderState*                           CommanderState;                                           // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bCommanderActive;                                         // 0x00F8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x00F9(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCommanderManager");
		return ptr;
	}

};


// Class Squad.SQCommanderState
// 0x0100 (0x0430 - 0x0330)
class ASQCommanderState : public AInfo
{
public:
	bool                                               bVoteInProgress;                                          // 0x0330(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	int                                                CommanderVoteTimestamp;                                   // 0x0334(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                CommanderVoteTimer;                                       // 0x0338(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCommanderIsActive;                                       // 0x033C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x13];                                      // 0x033D(0x0013) MISSED OFFSET
	struct FCommanderNomineeArray                      NomineeStatus;                                            // 0x0350(0x00C0) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0410(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCommanderChangedEvent;                                  // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ASQPlayerState*                              CurrentCommander;                                         // 0x0428(0x0008) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCommanderState");
		return ptr;
	}


	void OnRep_CurrentCommander(class ASQPlayerState* OldCommander);
};


// Class Squad.SQCommanderVotingPlayerItem
// 0x0020 (0x0228 - 0x0208)
class USQCommanderVotingPlayerItem : public USQUserWidget
{
public:
	bool                                               bIsVotedByPlayer;                                         // 0x0208(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0209(0x0003) MISSED OFFSET
	int                                                VoteCount;                                                // 0x020C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     NomineeName;                                              // 0x0210(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class ASQPlayerState*                              NomineePlayerState;                                       // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCommanderVotingPlayerItem");
		return ptr;
	}


	void OnVoteCountChanged();
	void OnNomineeNameChanged();
	void OnIsVotedByPlayerChanged();
};


// Class Squad.SQCommanderVotingWidget
// 0x0020 (0x0228 - 0x0208)
class USQCommanderVotingWidget : public USQUserWidget
{
public:
	bool                                               bIsVotingAvailable;                                       // 0x0208(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsVotePending;                                           // 0x0209(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsVoteInProgress;                                        // 0x020A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x020B(0x0005) MISSED OFFSET
	class UClass*                                      VoteItemClass;                                            // 0x0210(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPanelWidget*                                VoteItemsParent;                                          // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCommanderVotingWidget");
		return ptr;
	}


	void UpdateFromData();
	void OnVotingTimeChanged(float Seconds);
	void OnIsVotingAvailableChanged();
	void OnIsVoteInProgressChanged();
	void Init();
};


// Class Squad.SQCompass
// 0x0020 (0x0228 - 0x0208)
class USQCompass : public USQUserWidget
{
public:
	bool                                               bIsOwnerMedic;                                            // 0x0208(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0209(0x0003) MISSED OFFSET
	float                                              RotationXFix;                                             // 0x020C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              XScale;                                                   // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxVisibilityDistance;                                    // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              YPositionOffset;                                          // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TotalScale;                                               // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BearingLERP;                                              // 0x0220(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDoCompassLERP;                                           // 0x0224(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldHide;                                              // 0x0225(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0226(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCompass");
		return ptr;
	}

};


// Class Squad.SQCompassBaseUnit
// 0x0008 (0x0210 - 0x0208)
class USQCompassBaseUnit : public USQUserWidget
{
public:
	class UImage*                                      BaseImage;                                                // 0x0208(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCompassBaseUnit");
		return ptr;
	}

};


// Class Squad.SQCompassMarker
// 0x0030 (0x0240 - 0x0210)
class USQCompassMarker : public USQCompassBaseUnit
{
public:
	struct FLinearColor                                MarkerColor;                                              // 0x0210(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DistanceResolutionCurveInMeters;                          // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQMapMarker*                                MapMarker;                                                // 0x0228(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTextBlock*                                  DistanceTextBlock;                                        // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MeterTextBlock;                                           // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCompassMarker");
		return ptr;
	}


	void UpdateState(float InScale, bool bShowIcon);
	void InitWidget();
};


// Class Squad.SQCompassMK2
// 0x0098 (0x02C0 - 0x0228)
class USQCompassMK2 : public USQCompass
{
public:
	class UCanvasPanel*                                MainP;                                                    // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CompassBearingText;                                       // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      LeftArrow;                                                // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      RightArrow;                                               // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CompassMID;                                               // 0x0248(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       BearingMatParamName;                                      // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              InitialPlayerState;                                       // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              MarkerYPositionOffset;                                    // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0264(0x0004) MISSED OFFSET
	TArray<class USQCompassPlayer*>                    TrackedSquadMatesWidgets;                                 // 0x0268(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	class UCurveFloat*                                 DistanceCurve;                                            // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysShowSquadLeader;                                   // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0281(0x0007) MISSED OFFSET
	TArray<class USQCompassMarker*>                    TrackedMarkerWidgets;                                     // 0x0288(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<ESQMapMarkerType>                           MarkerTypesToTrack;                                       // 0x0298(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              CompassEdgeFadePercentage;                                // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CompassEdgeMinFade;                                       // 0x02AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CompassPlayerType;                                        // 0x02B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CompassMarkerType;                                        // 0x02B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCompassMK2");
		return ptr;
	}


	void UpdateVisibility();
	void UpdateSquadMembers();
	void UpdateSquadMarkers();
	float UpdatePlayerWidgetTransform(class ASQSoldier* SoldierRef, class USQCompassPlayer* WidgetRef, bool* bShowIcon);
	void UpdateMarkerArrows();
	void UpdateCompassBearing();
	void SquadChangedHandler(class ASQSquadState* NewSquad, class ASQSquadState* OldSquad, class ASQPlayerState* Player);
	void RemoveMarker(class AActor* DestroyedActor);
	void PlayerLeftSquad(class ASQSquadState* Squad, class ASQPlayerState* PlayerState);
	void PlayerJoinedSquad(class ASQSquadState* Squad, class ASQPlayerState* PlayerState);
	void InitWidget();
	void CreateSquadMateWidget(class ASQPlayerState* SquadMate);
	void CreateNewMarker(int SquadId, class ASQMapMarker* Marker);
};


// Class Squad.SQCompassPlayer
// 0x0078 (0x0288 - 0x0210)
class USQCompassPlayer : public USQCompassBaseUnit
{
public:
	class UImage*                                      MedicIcon;                                                // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                ColorHealthy;                                             // 0x0218(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorWounded;                                             // 0x0228(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorDown;                                                // 0x0238(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorInvisible;                                           // 0x0248(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TexturePlayer;                                            // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TextureSL;                                                // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TextureMedic;                                             // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayerIconScale;                                          // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SLPlayerIconScale;                                        // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MedicPlayerIconScale;                                     // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MedicIconScale;                                           // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              PlayerState;                                              // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCompassPlayer");
		return ptr;
	}


	void UpdateState(float InScale, bool bShowIcon, int HealthStateIndex, bool bIsMedic, bool bIsSL, bool bIsOwnderMedic);
	void InitWidget();
};


// Class Squad.SQConfig
// 0x0198 (0x01C0 - 0x0028)
class USQConfig : public UObject
{
public:
	unsigned char                                      UnknownData00[0x198];                                     // 0x0028(0x0198) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQConfig");
		return ptr;
	}

};


// Class Squad.SQConnectionCheckBeaconClient
// 0x0010 (0x03B8 - 0x03A8)
class ASQConnectionCheckBeaconClient : public AOnlineBeaconClient
{
public:
	class USQServerListItemWidget*                     ServerWidget;                                             // 0x03A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQConnectionCheckBeaconClient");
		return ptr;
	}


	void ServerPong(const struct FSQConnectionCheckResponse& Response);
	void InitConnection(const struct FString& ServerURL);
};


// Class Squad.SQConnectionCheckBeaconHostObj
// 0x0000 (0x0358 - 0x0358)
class ASQConnectionCheckBeaconHostObj : public AOnlineBeaconHostObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQConnectionCheckBeaconHostObj");
		return ptr;
	}

};


// Class Squad.SQGameViewportClient
// 0x0010 (0x02F8 - 0x02E8)
class USQGameViewportClient : public UGameViewportClient
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02E8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameViewportClient");
		return ptr;
	}

};


// Class Squad.SQConsole
// 0x0020 (0x0150 - 0x0130)
class USQConsole : public UConsole
{
public:
	ESQConsoleMessageType                              MessageType;                                              // 0x0130(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	struct FString                                     CustomMessage;                                            // 0x0138(0x0010) (ZeroConstructor)
	float                                              LastMessageTime;                                          // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQConsole");
		return ptr;
	}

};


// Class Squad.SQConsoleVariablesComponent
// 0x0050 (0x0140 - 0x00F0)
class USQConsoleVariablesComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00F0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQConsoleVariablesComponent");
		return ptr;
	}

};


// Class Squad.SQConstructionResourceWeapon
// 0x0000 (0x0B50 - 0x0B50)
class ASQConstructionResourceWeapon : public ASQVehicleResourceWeapon
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQConstructionResourceWeapon");
		return ptr;
	}

};


// Class Squad.SQCoreStateComponent
// 0x0038 (0x0128 - 0x00F0)
class USQCoreStateComponent : public UActorComponent
{
public:
	class UClass*                                      DataClass;                                                // 0x00F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	class USQCoreStateData*                            DataObject;                                               // 0x0100(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<class USQCoreStateConnection*>              Connections;                                              // 0x0108(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0118(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateComponent");
		return ptr;
	}


	void ServerSetIsVisible(bool bValue);
	void ServerConfigure();
	void OnRep_DataObject(class USQCoreStateData* PrevDataObject);
	void OnConnectionCreate(class USQCoreStateConnection* Connection);
	struct FSQCoreStateId GetId();
};


// Class Squad.SQCoreStateConnection
// 0x0070 (0x0160 - 0x00F0)
class USQCoreStateConnection : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	TArray<class USQCoreStateComponent*>               ComponentList;                                            // 0x0100(0x0010) (ExportObject, ZeroConstructor)
	TMap<class UActorChannel*, struct FSQCoreStateDataToIdMap> RemovedDataLists;                                         // 0x0110(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateConnection");
		return ptr;
	}


	void OnComponentObtainedId(class USQCoreStateComponent* Component);
};


// Class Squad.SQCoreStateConnectionActor
// 0x0008 (0x0338 - 0x0330)
class ASQCoreStateConnectionActor : public AInfo
{
public:
	class USQCoreStateConnection*                      StateConnection;                                          // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateConnectionActor");
		return ptr;
	}

};


// Class Squad.SQCoreStateConnectionChildActorComponent
// 0x0010 (0x0290 - 0x0280)
class USQCoreStateConnectionChildActorComponent : public UChildActorComponent
{
public:
	float                                              MinNetUpdateFrequency;                                    // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0284(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateConnectionChildActorComponent");
		return ptr;
	}

};


// Class Squad.SQCoreStateData
// 0x00A8 (0x00D0 - 0x0028)
class USQCoreStateData : public UObject
{
public:
	bool                                               bIsGlobalData;                                            // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowConfigureOnServer;                                  // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowConfigureOnClient;                                  // 0x002A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanEverConfigureOnTick;                                  // 0x002B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TickConfigureServerFrequency;                             // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TickConfigureClientFrequency;                             // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FCoreStateDataTickFunction                  TickFunction;                                             // 0x0038(0x0058)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0090(0x0008) MISSED OFFSET
	TArray<class USQCoreStateListener*>                ListenerList;                                             // 0x0098(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET
	struct FSQCoreStateId                              RepComponentId;                                           // 0x00B0(0x0002) (Net)
	unsigned char                                      bCanRegister : 1;                                         // 0x00B2(0x0001) (Net)
	unsigned char                                      bIsVisible : 1;                                           // 0x00B2(0x0001) (Net)
	unsigned char                                      UnknownData03[0x1D];                                      // 0x00B3(0x001D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateData");
		return ptr;
	}


	void OnWorldCleanup(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void OnListenerCreate(class USQCoreStateListener* Listener);
};


// Class Squad.SQCoreStateListener
// 0x0068 (0x0158 - 0x00F0)
class USQCoreStateListener : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00F0(0x0018) MISSED OFFSET
	TMap<struct FSQCoreStateId, struct FSQCoreStateDataList> DataMap;                                                  // 0x0108(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateListener");
		return ptr;
	}


	void RefreshVisbility(class APlayerController* PC);
	void OnDataCreate(class USQCoreStateData* Data);
};


// Class Squad.SQCoreStateWidgetFactory
// 0x0200 (0x0358 - 0x0158)
class USQCoreStateWidgetFactory : public USQCoreStateListener
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0158(0x0008) MISSED OFFSET
	TMap<struct FSQCoreStateId, class USQCoreStateWidget*> Widgets;                                                  // 0x0160(0x0050) (ExportObject, ZeroConstructor)
	TMap<class UClass*, struct FWidgetGroup>           UnusedWidgets;                                            // 0x01B0(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0xF0];                                      // 0x0200(0x00F0) MISSED OFFSET
	TMap<class USQCoreStateData*, int>                 SubDataPendingSuperKey;                                   // 0x02F0(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0340(0x0010) MISSED OFFSET
	class USQCoreStateSelectionHUB*                    SelectionHUB;                                             // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateWidgetFactory");
		return ptr;
	}


	void UnselectAll(class UObject* SelectionInstigator);
	void ReceiveSelection(const struct FSQCoreStateId& ComponentId, ESQSelectionState SelectionState, class UObject* SelectionInstigator);
};


// Class Squad.SQCoreStateMapComponent
// 0x0170 (0x04C8 - 0x0358)
class USQCoreStateMapComponent : public USQCoreStateWidgetFactory
{
public:
	class UPanelWidget*                                RootWidget;                                               // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              WidgetScale;                                              // 0x0360(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x164];                                     // 0x0364(0x0164) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateMapComponent");
		return ptr;
	}


	bool WorldToMapVector(const struct FVector& WorldVectorZeroBased, struct FVector2D* OutMapLocation);
	bool WorldToMapLocation(const struct FVector& WorldLocationZeroBased, struct FVector2D* OutMapLocation);
	bool WorldToMapGridLocation(const struct FVector& WorldVectorZeroBased, struct FVector2D* OutMapGrid);
	void SetWidgetScale(float UniformScale);
	void SetRootWidget(class UPanelWidget* Value);
	bool MapToMapGridLocation(const struct FVector2D& MapLocation, struct FVector2D* OutMapGrid);
	bool MapLocationToScreenLocation(const struct FVector2D& MapLocation, struct FVector2D* OutScreenLocation);
	struct FString MapLocationToGridCoordinateString(const struct FVector2D& MapLocation);
	struct FBox2D GetWorldBounds();
	bool GetWidgetWorldLocation(const struct FSQCoreStateId& ID, struct FVector* OutWorldLocation);
	bool GetWidgetScreenPosition(const struct FSQCoreStateId& ID, struct FVector2D* OutPosition);
	TMap<int, struct FSQCoreStateId> GetWaypointWidgets();
	TMap<int, struct FSQCoreStateId> GetWaypointFTWidgets();
	TMap<int, struct FSQCoreStateId> GetOrderTargetWidgets();
	struct FVector2D GetNumGridLines();
	struct FVector2D GetMapBoundsScale();
};


// Class Squad.SQCoreStateMapDataInterface
// 0x0000 (0x0028 - 0x0028)
class USQCoreStateMapDataInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateMapDataInterface");
		return ptr;
	}

};


// Class Squad.SQCoreStateWidget
// 0x0028 (0x0230 - 0x0208)
class USQCoreStateWidget : public UUserWidget
{
public:
	ESlateVisibility                                   UnconfiguredVisibility;                                   // 0x0208(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	class USQCoreStateWidgetFactory*                   SourceComponent;                                          // 0x0210(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	ESQSelectionState                                  SelectionState;                                           // 0x0218(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0219(0x0007) MISSED OFFSET
	class UObject*                                     SelectionInstigator;                                      // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0228(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateWidget");
		return ptr;
	}


	void OnSelectionStateChanged();
	void OnScaleChanged(float UniformScale);
	void AnnounceSelectionState(ESQSelectionState InSelectionState);
};


// Class Squad.SQCoreStateMapWidget
// 0x0018 (0x0248 - 0x0230)
class USQCoreStateMapWidget : public USQCoreStateWidget
{
public:
	float                                              ZOrder;                                                   // 0x0230(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAutoSize;                                                // 0x0234(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0235(0x0003) MISSED OFFSET
	struct FVector2D                                   Alignment;                                                // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USQCoreStateMapComponent*                    MapComponent;                                             // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateMapWidget");
		return ptr;
	}

};


// Class Squad.SQCoreStateSquadListComponent
// 0x0210 (0x0568 - 0x0358)
class USQCoreStateSquadListComponent : public USQCoreStateWidgetFactory
{
public:
	class UClass*                                      SquadWidgetClass;                                         // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      PlayerWidgetClass;                                        // 0x0360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPanelWidget*                                SquadRoot;                                                // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPanelWidget*                                UnassignedRoot;                                           // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPanelWidget*                                CommanderRoot;                                            // 0x0378(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	EListLayout                                        ListLayout;                                               // 0x0380(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EListLayout                                        UnassignedLayout;                                         // 0x0381(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0382(0x0006) MISSED OFFSET
	TMap<int, class USQCoreStateSquadItemWidget*>      ActiveSquadWidgets;                                       // 0x0388(0x0050) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData01[0x190];                                     // 0x03D8(0x0190) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateSquadListComponent");
		return ptr;
	}


	void SetRootWidgets(class UPanelWidget* InSquadRoot, class UPanelWidget* InUnassignedRoot, class UPanelWidget* InCommanderRoot);
};


// Class Squad.SQCoreStateRolesSquadListComponent
// 0x0000 (0x0568 - 0x0568)
class USQCoreStateRolesSquadListComponent : public USQCoreStateSquadListComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateRolesSquadListComponent");
		return ptr;
	}

};


// Class Squad.SQCoreStateSelectionHUB
// 0x0030 (0x0120 - 0x00F0)
class USQCoreStateSelectionHUB : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x00F0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateSelectionHUB");
		return ptr;
	}


	void UnselectAll(class UObject* SelectionInstigator);
};


// Class Squad.SQCoreStateSpawnPointsListComponent
// 0x0050 (0x03A8 - 0x0358)
class USQCoreStateSpawnPointsListComponent : public USQCoreStateWidgetFactory
{
public:
	class UClass*                                      WidgetClass;                                              // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGridPanel*                                  BaseRoot;                                                 // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  HABRoot;                                                  // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  RallyRoot;                                                // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0378(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateSpawnPointsListComponent");
		return ptr;
	}


	void SetRootWidgets(class UGridPanel* InBaseRoot, class UGridPanel* InHABRoot, class UGridPanel* InRallyRoot);
};


// Class Squad.SQCoreStateSpawnPointsListWidget
// 0x0048 (0x0278 - 0x0230)
class USQCoreStateSpawnPointsListWidget : public USQCoreStateWidget
{
public:
	bool                                               bSpawnOnSelection;                                        // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0231(0x0003) MISSED OFFSET
	unsigned char                                      bIsSelected : 1;                                          // 0x0234(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0235(0x0003) MISSED OFFSET
	struct FVector                                     SpawnPointLocation;                                       // 0x0238(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESQSpawnPointType                                  SpawnPointType;                                           // 0x0244(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0245(0x0003) MISSED OFFSET
	class UTexture2D*                                  BaseTexture;                                              // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  HABTexture;                                               // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  RallyTexture;                                             // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  CacheTexture;                                             // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class ASQGameSpawn*                                OwningGameSpawn;                                          // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0270(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateSpawnPointsListWidget");
		return ptr;
	}


	void SelectSpawnPoint();
	void OnSpawnPointTypeChanged();
	void OnSpawnPointLocationChanged();
	void OnIsSelectedChanged();
	class UTexture2D* GetSpawnIcon();
};


// Class Squad.SQCoreStateSquadListWidget
// 0x0008 (0x0238 - 0x0230)
class USQCoreStateSquadListWidget : public USQCoreStateWidget
{
public:
	EListLayout                                        ListLayout;                                               // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0231(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateSquadListWidget");
		return ptr;
	}


	void OnListLayoutChanged();
};


// Class Squad.SQCoreStateSquadItemWidget
// 0x0050 (0x0288 - 0x0238)
class USQCoreStateSquadItemWidget : public USQCoreStateSquadListWidget
{
public:
	class ASQSquadState*                               SquadState;                                               // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SquadId;                                                  // 0x0240(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0244(0x0004) MISSED OFFSET
	struct FString                                     SquadName;                                                // 0x0248(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     LeaderName;                                               // 0x0258(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MemberNum;                                                // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMembers;                                               // 0x026C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSelfInSquad;                                           // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCommandSquad;                                          // 0x0271(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EJoinButtonState                                   JoinButtonState;                                          // 0x0272(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0273(0x0005) MISSED OFFSET
	class ASQPlayerController*                         CachedSQPlayerController;                                 // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0280(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateSquadItemWidget");
		return ptr;
	}


	void OnSquadNameChanged();
	void OnSquadIdChanged();
	void OnMemberNumChanged();
	void OnMaxMembersChanged();
	void OnLeaderNameChanged();
	void OnJoinButtonStateChanged();
	void OnIsSelfInSquadChanged();
	void OnIsCommandSquadChanged();
	void OnBanned(int SquadId, float BanDuration);
	void JoinSquad();
	class UPanelWidget* GetMemberRoot(int FireTeamIndex);
	class ASQPlayerController* GetCachedSQPlayerController();
};


// Class Squad.SQCoreStateSquadMemberWidget
// 0x0058 (0x0290 - 0x0238)
class USQCoreStateSquadMemberWidget : public USQCoreStateSquadListWidget
{
public:
	int                                                RootWidgetSquadId;                                        // 0x0238(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	class ASQPlayerState*                              PlayerState;                                              // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SquadId;                                                  // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsPossessingPawn : 1;                                    // 0x024C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x024D(0x0003) MISSED OFFSET
	bool                                               bIsSquadLeader;                                           // 0x0250(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFireTeamLeader;                                        // 0x0251(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0252(0x0002) MISSED OFFSET
	int                                                FireTeamIndex;                                            // 0x0254(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0258(0x0004) MISSED OFFSET
	int                                                FireTeamPosition;                                         // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	class USQRoleSettings*                             DeployRole;                                               // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0270(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class USQVehicleUIStaticDataAsset*                 CurrentVehicleData;                                       // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESQRemoteTalkerDisplayChannel                      VoipChannel;                                              // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMuted;                                                 // 0x0289(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsAlive;                                                 // 0x028A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBleeding;                                              // 0x028B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWounded;                                               // 0x028C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x028D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCoreStateSquadMemberWidget");
		return ptr;
	}


	void OnVoipChannelChanged();
	void OnSquadIdChanged();
	void OnPlayerNameChanged();
	void OnIsWoundedChanged();
	void OnIsSquadLeaderChanged();
	void OnIsPossessingPawnChanged();
	void OnIsMutedChanged();
	void OnIsFireTeamLeaderChanged();
	void OnIsBleedingChanged();
	void OnIsAliveChanged();
	void OnFireTeamPositionChanged();
	void OnFireTeamIndexChanged();
	void OnDeployRoleChanged();
	void OnCurrentVehicleDataChanged();
};


// Class Squad.SQCreateSquadButton
// 0x0030 (0x02F0 - 0x02C0)
class USQCreateSquadButton : public USQBaseButton
{
public:
	bool                                               bUsesCustomName;                                          // 0x02C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02C1(0x0007) MISSED OFFSET
	class ASQPlayerState*                              OwnerPlayerState;                                         // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQPlayerController*                         OwnerPlayerController;                                    // 0x02D0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UEditableTextBox*                            SquadNameTextBox;                                         // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnNewSquadCreated;                                        // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQCreateSquadButton");
		return ptr;
	}


	void SquadNameTextCommit(const struct FText& Text, TEnumAsByte<ETextCommit> CommitMethodEnum);
	void SquadNameTextChanged(const struct FText& Text);
};


// Class Squad.SQDamageType_Collision
// 0x0000 (0x0040 - 0x0040)
class USQDamageType_Collision : public USQDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDamageType_Collision");
		return ptr;
	}

};


// Class Squad.SQDamageType_Explosive
// 0x0000 (0x0040 - 0x0040)
class USQDamageType_Explosive : public USQDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDamageType_Explosive");
		return ptr;
	}

};


// Class Squad.SQDamageType_ExplosiveRocket
// 0x0000 (0x0040 - 0x0040)
class USQDamageType_ExplosiveRocket : public USQDamageType_Explosive
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDamageType_ExplosiveRocket");
		return ptr;
	}

};


// Class Squad.SQDamageType_Fall
// 0x0000 (0x0040 - 0x0040)
class USQDamageType_Fall : public USQDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDamageType_Fall");
		return ptr;
	}

};


// Class Squad.SQDamageType_HeatExplosive
// 0x0000 (0x0040 - 0x0040)
class USQDamageType_HeatExplosive : public USQDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDamageType_HeatExplosive");
		return ptr;
	}

};


// Class Squad.SQDamageType_Thermite
// 0x0000 (0x0040 - 0x0040)
class USQDamageType_Thermite : public USQDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDamageType_Thermite");
		return ptr;
	}

};


// Class Squad.SQWoundedDamageType
// 0x0000 (0x0040 - 0x0040)
class USQWoundedDamageType : public USQDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWoundedDamageType");
		return ptr;
	}

};


// Class Squad.SQDataGatheringComponent
// 0x0008 (0x00F8 - 0x00F0)
class USQDataGatheringComponent : public UActorComponent
{
public:
	class UHeatMapRecorder*                            HeatMapRecorder;                                          // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDataGatheringComponent");
		return ptr;
	}


	void RecordHeatMap(float XStepSize, float YStepSize, float HeightOffset, bool bRecordRawValues, float PositionWaitTime, const struct FString& Filename);
};


// Class Squad.SQDemoSpectator
// 0x0018 (0x0698 - 0x0680)
class ASQDemoSpectator : public APlayerController
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0680(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDemoSpectator");
		return ptr;
	}

};


// Class Squad.SQDeployable
// 0x0188 (0x04B8 - 0x0330)
class ASQDeployable : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	ESQTeam                                            InitialTeam;                                              // 0x0340(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0341(0x0007) MISSED OFFSET
	class ASQForwardBase*                              OwningFob;                                                // 0x0348(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              HalfBuiltTransitionHealth;                                // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FullyBuiltTransitionHealth;                               // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Team;                                                     // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsFob;                                                   // 0x035C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlaced;                                                  // 0x035D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x035E(0x0002) MISSED OFFSET
	class UBoxComponent*                               StackingCollisionBox;                                     // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PlacementCollisionBox;                                    // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bUsePlacementCollisionBox;                                // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0371(0x0007) MISSED OFFSET
	class USQCoreStateComponent*                       StateObject;                                              // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	ESQExplosiveType                                   ExplosiveType;                                            // 0x0380(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0381(0x0007) MISSED OFFSET
	struct FSQUsableData                               UsableData;                                               // 0x0388(0x0040) (Edit, BlueprintVisible)
	class USceneComponent*                             Completed;                                                // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             Unbuilt;                                                  // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             HalfBuilt;                                                // 0x03D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SimpleDetectionSphere;                                    // 0x03E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBuildStateChange;                                       // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDestroyedEvent;                                         // 0x03F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	ESQBuildState                                      BuildState;                                               // 0x0408(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	TArray<struct FSQDeployableChangeStateEffect>      ChangeStateEffects;                                       // 0x0410(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FSQDeployableStateDamageEffect>      DamageStateEffects;                                       // 0x0420(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                Cost;                                                     // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x0434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialHealth;                                            // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Health;                                                   // 0x043C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bCanUnbuild;                                              // 0x0440(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	TArray<struct FSQDamageModifier>                   AllowableDamageTypes;                                     // 0x0448(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	ESQDeployableSize                                  Size;                                                     // 0x0458(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIngoreNoResist;                                          // 0x0459(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bStartUnbuilt;                                            // 0x045A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTrackInFOB;                                              // 0x045B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTrackInPlayerState;                                      // 0x045C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x045D(0x0003) MISSED OFFSET
	TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectTypesToStack;                                       // 0x0460(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                               bAllowStacking;                                           // 0x0470(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowPlacementOnPawns;                                   // 0x0471(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowPlacementOnSoldiers;                                // 0x0472(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowPlacementOnVehicles;                                // 0x0473(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachToUnderlyingActor;                                 // 0x0474(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyWhenAttachedActorIsDestroyed;                     // 0x0475(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQInvalidPlacementReason                          bCachedPlacementResult;                                   // 0x0476(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAlignToGround;                                           // 0x0477(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ValidPitchRange;                                          // 0x0478(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxCornerDifference;                                      // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequiresSameTeam;                                        // 0x0480(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCantBePlacedInFOB;                                       // 0x0481(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x0482(0x0002) MISSED OFFSET
	struct FVector                                     GhostOffset;                                              // 0x0484(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESQBuildState                                      GhostBuildState;                                          // 0x0490(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0491(0x0007) MISSED OFFSET
	class UMaterialInterface*                          GhostMaterial;                                            // 0x0498(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsGhost;                                                 // 0x04A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x04A1(0x0003) MISSED OFFSET
	float                                              GhostRotationSpeed;                                       // 0x04A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GhostRotationDelta;                                       // 0x04A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowFireWeaponOverrideOnSQPlayerController;             // 0x04AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowAltFireWeaponOverrideOnSQPlayerController;          // 0x04AD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRequiresFOB;                                             // 0x04AE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebug;                                               // 0x04AF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    DynGhostInstance;                                         // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployable");
		return ptr;
	}


	void UpdateState();
	void SetTeam(int Team);
	void SetStateUnbuilt();
	void SetStateHalfBuilt();
	void SetStateCompleted();
	void RemovedFromPlayersPlacedList();
	void PushSoldiersOutOfBounds();
	void PlayStateChangeEffects(ESQBuildState OldBuildState);
	void Placed();
	void OnStateChangeClient(ESQBuildState OldBuildState);
	void OnRep_Team();
	void OnRep_BuildState(ESQBuildState OldBuildState);
	void OnAttachedActorDestroyed(class AActor* DestroyedActor);
	void MulticastPlayDamageEffects(class UClass* DamageTypeClass, const struct FVector& ImpactLocationZeroBased, ESQBuildState OldBuildState, ESQBuildState NewBuildState);
	void MakeGhost();
	bool IsValidPlacement(ESQInvalidPlacementReason* Reason);
	bool IsGhost();
	bool IsDeployableEmpty();
	void InvalidatePlacement();
	void GoToBuildState(ESQBuildState InBuildState);
	ESQTrackDeployableResult GetTrackDeployableResult(class ASQPlayerState* PlayerState, bool bIncludeSelf);
	class ASQForwardBase* GetNearestFOB(bool bIsFriendly);
	struct FText GetFailedSpawnReasonText(ESQInvalidPlacementReason Reason);
	ESQBuildState GetBuildState();
	bool ExtraPlacementRules(ESQInvalidPlacementReason* Reason);
	void Die(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser);
	void ConstructionHit(class ASQSoldier* Activator, class AController* inst, float Amount);
	void CompletedConstruction();
	void BPOnGhostMade();
	void BPOnDie(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser);
	void BP_OnStateChangeClient(ESQBuildState OldBuildState);
	void BP_OnStateChange(ESQBuildState OldBuildState);
	ESQTrackDeployableResult BP_ExtraTrackDeployableRules(class ASQPlayerState* PlayerState, bool bIncludeSelf);
	void AttachToUnderlyingActor();
};


// Class Squad.SQDeployableItem
// 0x0020 (0x04D8 - 0x04B8)
class ASQDeployableItem : public ASQDeployable
{
public:
	class ASQPlayerController*                         InstigatingPlayerController;                              // 0x04B8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              InstigatingPlayerState;                                   // 0x04C0(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                MaxAllowedPerPlayerInGame;                                // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTrackDeployableResult                           TrackDeployableOverMaxResult;                             // 0x04CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04CD(0x0003) MISSED OFFSET
	class UClass*                                      EquippableInstigatorClass;                                // 0x04D0(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployableItem");
		return ptr;
	}

};


// Class Squad.SQDeployableAmmoBag
// 0x0030 (0x0508 - 0x04D8)
class ASQDeployableAmmoBag : public ASQDeployableItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04D8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    AmmoBagAmmoUpdatedEvent;                                  // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    RearmSourceAmmoUpdatedEvent;                              // 0x04F0(0x0010) (ZeroConstructor, InstancedReference)
	float                                              AmmoCount;                                                // 0x0500(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              OutOfAmmoLifetime;                                        // 0x0504(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployableAmmoBag");
		return ptr;
	}


	void OnRep_AmmoCount();
	void BP_PickedUp(class ASQEquipableItem* EquippableAmmoBag);
};


// Class Squad.SQDeployableChildActorComponent
// 0x0000 (0x0280 - 0x0280)
class USQDeployableChildActorComponent : public UChildActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployableChildActorComponent");
		return ptr;
	}


	void OnDeployableStateChange(ESQBuildState BuildState);
};


// Class Squad.SQItemStaticInfo
// 0x04B0 (0x04D8 - 0x0028)
class USQItemStaticInfo : public UObject
{
public:
	class UAnimMontage*                                BaseWeaponMontage;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Base1pMontage;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Base3pMontage;                                            // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               SprintToProne3p;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandToProne3p;                                           // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneToStand3p;                                           // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchToProne3p;                                          // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneToCrouch3p;                                          // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               AO1D_StandPitch;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               AO1D_CrouchPitch;                                         // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               AO1D_PronePitch;                                          // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 AO_BipodStandCrouchPitch;                                 // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AO1D_StandYawSF;                                          // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AO1D_CrouchYawSF;                                         // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AO1D_ProneYawSF;                                          // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandTurnRight;                                           // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandTurnLeft;                                            // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchTurnRight;                                          // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchTurnLeft;                                           // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneTurnRight;                                           // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneTurnLeft;                                            // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadWeaponMontage;                                      // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Reload1pMontage;                                          // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Reload3pMontage;                                          // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckCurrentMagazineForEquip;                            // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckCurrentMagazineForUnequip;                          // 0x00E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00EA(0x0006) MISSED OFFSET
	class UAnimMontage*                                EmptyEquipWeaponMontage;                                  // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EmptyEquip1pMontage;                                      // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EmptyEquip3pMontage;                                      // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EquipWeaponMontage;                                       // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Equip1pMontage;                                           // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Equip3pMontage;                                           // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EmptyUnequipWeaponMontage;                                // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EmptyUnequip1pMontage;                                    // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EmptyUnequip3pMontage;                                    // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnequipWeaponMontage;                                     // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Unequip1pMontage;                                         // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Unequip3pMontage;                                         // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BobbingSprint1pMontage;                                   // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BobbingEndSprint1pMontage;                                // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BobbingAddSprint1pMontage;                                // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               BS1D_3pStandSprintType;                                   // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               BS1D_3pCrouchSprintType;                                  // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               SprintStop3p;                                             // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 BS_3pStandJogType;                                        // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 BS_3pStandWalkType;                                       // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 BS_3pCrouchWalkType;                                      // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               BS1D_3pProneCrawlType;                                    // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandStopMove;                                            // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchStopMove;                                           // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BobbingMove1pMontage;                                     // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Idle1pMontage;                                            // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeanLeftBegin3pMontage;                                   // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeanLeftEnd3pMontage;                                     // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeanRightBegin3pMontage;                                  // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeanRightEnd3pMontage;                                    // 0x01D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandLeanLeftShuffle;                                     // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandLeanRightShuffle;                                    // 0x01E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchLeanLeftShuffle;                                    // 0x01F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               CrouchLeanRightShuffle;                                   // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Lowered1pMontage;                                         // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Lowered3pMontage;                                         // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LoweredCrouch3pMontage;                                   // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSQMontageSectionNames                      MoveBobbingEndLoopSectionNames;                           // 0x0218(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSQMontageSectionNames                      SprintBobbingEndLoopSectionNames;                         // 0x0240(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UBlendSpaceBase*                             BobbingProneMoveType;                                     // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ProneMoveTypeAdditiveReference;                           // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               OutProneMoveType;                                         // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               OutProneMoveTypeNonadditive;                              // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LeftHandWeaponIkAlpha;                                    // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RightHand3pWeaponIkAlpha;                                 // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              JogPlayRateFactorMinRange;                                // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SprintPlayRateFactorMinRange;                             // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SprintBlendFactorMinRange;                                // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SprintBlendSpeedInterpSpeed;                              // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               SprintStaticPose;                                         // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LoweringBlendOutTime;                                     // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IdleBlendOutTime;                                         // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQBoredMontageSet>                  BoredMontage;                                             // 0x02B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              BoredMaxFrequency;                                        // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BoredAbortBlendOutTime;                                   // 0x02C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQMutualWeapon>                     MutualWeapons;                                            // 0x02C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              EmptyUnequipDuration;                                     // 0x02D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EmptyEquipDuration;                                       // 0x02DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAutoLowering;                                         // 0x02E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02E1(0x0003) MISSED OFFSET
	float                                              LoweringTimer;                                            // 0x02E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemCollisionDistance;                                    // 0x02E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bReturnToADSAfterItemCollision;                           // 0x02EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02ED(0x0003) MISSED OFFSET
	class UClass*                                      FireShake;                                                // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandLoc;                                                 // 0x02F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchLoc;                                                // 0x0304(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneLoc;                                                 // 0x0310(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodLoc;                                                 // 0x031C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StandLocBlendTime;                                        // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    OffsetLineOfFire;                                         // 0x032C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandLeanLeftRootOffset;                                  // 0x0338(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanLeftWeaponRotation;                              // 0x0344(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanLeftCameraRotation;                              // 0x0350(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandLeanRightRootOffset;                                 // 0x035C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanRightWeaponRotation;                             // 0x0368(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StandLeanRightCameraRotation;                             // 0x0374(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchLeanLeftRootOffset;                                 // 0x0380(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanLeftWeaponRotation;                             // 0x038C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanLeftCameraRotation;                             // 0x0398(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchLeanRightRootOffset;                                // 0x03A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanRightWeaponRotation;                            // 0x03B0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CrouchLeanRightCameraRotation;                            // 0x03BC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneLeanLeftRootOffset;                                  // 0x03C8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanLeftWeaponRotation;                              // 0x03D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanLeftCameraRotation;                              // 0x03E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneLeanRightRootOffset;                                 // 0x03EC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanRightWeaponRotation;                             // 0x03F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ProneLeanRightCameraRotation;                             // 0x0404(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FpvLowerRootBoneOffset;                                   // 0x0410(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FpvTorsoCameraOffset;                                     // 0x041C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeaponSpringSide;                                         // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringStiffness;                                    // 0x042C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringCriticalDampingFactor;                        // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringMass;                                         // 0x0434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringFactor2;                                      // 0x0438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponMeshSpringLocDelayFactor;                           // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponMeshSpringRotDelayFactor;                           // 0x0440(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringClamp;                                        // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSpringTurnSpeedToFullIntensity;                     // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    StrafeSpringRotator;                                      // 0x044C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StrafeSpringVector;                                       // 0x0458(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AdsStrafeSpringRotator;                                   // 0x0464(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundsSocket;                                             // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FireSound1P;                                              // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FireSound3P;                                              // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ReloadSound1P;                                            // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ReloadSound3P;                                            // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DryReloadSound1P;                                         // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DryReloadSound3P;                                         // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EquipSound1P;                                             // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EquipSound3P;                                             // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   UnequipSound1P;                                           // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   UnequipSound3P;                                           // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  IntoForcedLoweringSound;                                  // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  OutOfForcedLoweringSound;                                 // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQItemStaticInfo");
		return ptr;
	}

};


// Class Squad.SQDeployableItemStaticInfo
// 0x0028 (0x0500 - 0x04D8)
class USQDeployableItemStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                PlacingDeployableWeaponMontage;                           // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                PlacingDeployable1pMontage;                               // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                PlacingDeployable3pMontage;                               // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DeployableClass;                                          // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlacingDeployableDuration;                                // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FinishPlacingDeployableBlendOutDuration;                  // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployableItemStaticInfo");
		return ptr;
	}

};


// Class Squad.SQPawn
// 0x00A0 (0x0430 - 0x0390)
class ASQPawn : public APawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0390(0x0008) MISSED OFFSET
	unsigned char                                      bClientUpdating : 1;                                      // 0x0398(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0399(0x0003) MISSED OFFSET
	bool                                               bUseEngineActorReplication;                               // 0x039C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsUsingNewMovementComponent;                             // 0x039D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESQTeam                                            Team;                                                     // 0x039E(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x039F(0x0001) MISSED OFFSET
	struct FSQBasedMovementInfo                        BasedMovement;                                            // 0x03A0(0x0030)
	class USQCoreStateComponent*                       StateObject;                                              // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FVector                                     BaseTranslationOffset;                                    // 0x03D8(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x03E4(0x000C) MISSED OFFSET
	struct FQuat                                       BaseRotationOffset;                                       // 0x03F0(0x0010) (IsPlainOldData)
	unsigned char                                      ReplicatedMovementMode;                                   // 0x0400(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bInBaseReplication;                                       // 0x0401(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0402(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPawnPossessedEvent;                                     // 0x0408(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPawnUnPossessedEvent;                                   // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0428(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPawn");
		return ptr;
	}


	void SetTeam(ESQTeam Team);
	void OnRep_Team();
	void OnPossessionChanged__DelegateSignature();
	ESQTeam GetTeam();
	void BlueprintCalcCamera(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV);
};


// Class Squad.SQVehicleSeat
// 0x0090 (0x04C0 - 0x0430)
class ASQVehicleSeat : public ASQPawn
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0430(0x0018) MISSED OFFSET
	float                                              ADSSpeed;                                                 // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PitchLimit;                                               // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinPitchLimit;                                            // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              YawLimit;                                                 // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinYawLimit;                                              // 0x0458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	class USQVehicleSeatComponent*                     ParentSeatComponent;                                      // 0x0460(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	ESQListenerType                                    ListenerType;                                             // 0x0468(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCameraInitialized;                                     // 0x0469(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x046A(0x0006) MISSED OFFSET
	TArray<class USQVehicleComponent*>                 VehicleComponents;                                        // 0x0470(0x0010) (ExportObject, ZeroConstructor)
	class USQVehicleComponent*                         CachedVehicleEngine;                                      // 0x0480(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bTurnOut;                                                 // 0x0488(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0489(0x0007) MISSED OFFSET
	class USQVehicleInventoryComponent*                CachedVehicleInventory;                                   // 0x0490(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            CachedCameraComponent;                                    // 0x0498(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              SeatHealth;                                               // 0x04A0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04A4(0x0004) MISSED OFFSET
	class USQFreeLookComponent*                        FreeLookComponent;                                        // 0x04A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQMovementComponentManager*                 MovementComponentManager;                                 // 0x04B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x04B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleSeat");
		return ptr;
	}


	void SetTurnOut(bool bEnabled);
	void ServerSetTurnOut(bool bEnabled);
	void ServerOnInteract();
	void ServerCancelPlayerExit(class ASQPlayerController* SPC);
	void RequestChangeSeat(class ASQPlayerController* Player, int RequestedSeat);
	void OverlayZoom();
	void OverlayUnzoom();
	void OnRep_TurnOut();
	void OnRep_SeatHealth(float PreviousHealth);
	void OnPrevItem();
	void OnNextItem();
	class USceneComponent* GetWeaponAttachComponent();
	class USQVehicleSeatComponent* GetVehicleSeatComponent();
	class USQVehicleInventoryComponent* GetVehicleInventory();
	class USQVehicleComponent* GetVehicleEngine();
	class ASQVehicle* GetVehicle();
	class USceneComponent* GetSoldierAttachComponent();
	float GetSeatHealth();
	float GetNormalizedSeatHealth();
	class USkinnedMeshComponent* GetMasterPoseComponent();
	class USceneComponent* GetDefaultCameraLocationComponent();
	class UCameraComponent* GetCameraComponent();
	class USceneComponent* GetADSCameraLocationComponent();
	class USceneComponent* Get3PAttachComponent();
	class USceneComponent* Get1PAttachComponent();
};


// Class Squad.SQVehicle
// 0x0450 (0x0910 - 0x04C0)
class ASQVehicle : public ASQVehicleSeat
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04C0(0x0008) MISSED OFFSET
	struct FSQUsableData                               UsableData;                                               // 0x04C8(0x0040) (Edit, BlueprintVisible)
	class UClass*                                      DefaultDestroyedVehicleActorClass;                        // 0x0508(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQVehicleDestroyedConfig>           DestroyedVehicleConfig;                                   // 0x0510(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      TemperatureLastingEffectClass;                            // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       TemperatureLastingEffectAttachSocket;                     // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQLastingEffect*                            TemperatureLastingEffect;                                 // 0x0530(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQVehicleBurningComponent*                  BurningComponent;                                         // 0x0538(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      ImpactCameraShake;                                        // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpactEffectNormalForceThreshold;                         // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x054C(0x0004) MISSED OFFSET
	class USoundCue*                                   LightImpactSound;                                         // 0x0550(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             LightImpactEffect;                                        // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ImpactSound;                                              // 0x0560(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ImpactEffect;                                             // 0x0568(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDoParticlesUseRotation;                                  // 0x0570(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0571(0x0007) MISSED OFFSET
	class UClass*                                      PhysMatEffectsClass;                                      // 0x0578(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnVehicleRepairEvent;                                     // 0x0580(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ASQDestroyedVehicle*                         DestroyedVehicleActor;                                    // 0x0590(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class USQVehicleClaim*                             ClaimInfo;                                                // 0x0598(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class ASQSquadState*                               ClaimedBySquad;                                           // 0x05A0(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bClaimable;                                               // 0x05A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnterableWithoutClaim;                                   // 0x05A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrivableWithoutClaim;                                    // 0x05AA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNonSquadMembersMayEnterWhenClaimed;                      // 0x05AB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05AC(0x0004) MISSED OFFSET
	struct FText                                       NotClaimedCantEnterErrorMessage;                          // 0x05B0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       FullVehicleCantEnterErrorMessage;                         // 0x05C8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       EnemyVehicleCantEnterErrorMessage;                        // 0x05E0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NotClaimedNeedsApprovalErrorMessage;                      // 0x05F8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NotClaimedNotInSquadErrorMessage;                         // 0x0610(0x0018) (Edit, BlueprintVisible)
	struct FText                                       WrongRoleForClaimErrorMessage;                            // 0x0628(0x0018) (Edit, BlueprintVisible)
	struct FText                                       WrongRoleForSeatErrorMessage;                             // 0x0640(0x0018) (Edit, BlueprintVisible)
	struct FText                                       FullVehicleOrWrongRoleCantEnterErrorMessage;              // 0x0658(0x0018) (Edit, BlueprintVisible)
	struct FText                                       SeatFilledErrorMessage;                                   // 0x0670(0x0018) (Edit, BlueprintVisible)
	struct FText                                       SeatBeingEnteredErrorMessage;                             // 0x0688(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ClaimedByAnotherSquadCantEnterErrorMessage;               // 0x06A0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CrewmanRole;                                              // 0x06B8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PilotRole;                                                // 0x06D0(0x0018) (Edit, BlueprintVisible)
	class UCurveFloat*                                 VelocityVsCollisionDamageCurve;                           // 0x06E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CollisionDamageThesholdGs;                                // 0x06F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CollisionsDamageVelocityThreshold;                        // 0x06F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleToOccupantCollisionDamageScaler;                   // 0x06F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x06FC(0x0004) MISSED OFFSET
	class USQBoundaryListener*                         BoundaryListener;                                         // 0x0700(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQCollisionDamage*                          CollisionDamage;                                          // 0x0708(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0710(0x0008) MISSED OFFSET
	ESQVehicleType                                     VehicleType;                                              // 0x0718(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0719(0x0007) MISSED OFFSET
	class UTexture*                                    VehicleIconTexture;                                       // 0x0720(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                VehicleIconColor;                                         // 0x0728(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   VehicleIconOffset;                                        // 0x0738(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   VehicleIconSize;                                          // 0x0740(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastRepairedTime;                                         // 0x0748(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PercentDriverGetsForKill;                                 // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastSeatEventTime;                                        // 0x0750(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPreventVehicleEntrance;                                  // 0x0754(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0755(0x0003) MISSED OFFSET
	float                                              MaxVehicleEntryDistance;                                  // 0x0758(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x075C(0x0004) MISSED OFFSET
	struct FSQVehicleSeatConfig                        DriverSeatConfig;                                         // 0x0760(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FSQVehicleSeatConfig>                AdditionalSeatsConfig;                                    // 0x07B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class USQVehicleSeatComponent*>             VehicleSeats;                                             // 0x07C0(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst)
	class USkeletalMeshComponent*                      VehicleMesh;                                              // 0x07D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bIsVehicleDamagedByRadialExplosions;                      // 0x07D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x07D9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVehicleDestroyed;                                       // 0x07E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerEntered;                                          // 0x07F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerExited;                                           // 0x0800(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerSwitchedSeats;                                    // 0x0810(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AmmoUpdatedEvent;                                         // 0x0820(0x0010) (ZeroConstructor, InstancedReference)
	class USoundCue*                                   OnVehicleEnterSound;                                      // 0x0830(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   OnVehicleExitSound;                                       // 0x0838(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   OnSeatSwitchSound;                                        // 0x0840(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USQBuffManager*                              Buffs;                                                    // 0x0848(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Health;                                                   // 0x0850(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LastDamageTypeClass;                                      // 0x0858(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AController*                                 LastDamageInstigator;                                     // 0x0860(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanStackRepairers;                                       // 0x0868(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0869(0x0003) MISSED OFFSET
	float                                              MaxRepairToolLimit;                                       // 0x086C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastDamageInstigatorTimeoutThreshold;                     // 0x0870(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0874(0x0004) MISSED OFFSET
	float                                              FlipPitchThreshold;                                       // 0x0878(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlipRollThreshold;                                        // 0x087C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlipSpeedThreshold;                                       // 0x0880(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0884(0x0004) MISSED OFFSET
	float                                              FlipRotationExceededTimeThreshold;                        // 0x0888(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DestroyTime;                                              // 0x088C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasBeenDestroyed;                                        // 0x0890(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0891(0x0007) MISSED OFFSET
	TArray<struct FSQDamageModifier>                   AllowableDamageTypes;                                     // 0x0898(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FSQDamageTypeEffects                        DamageEffects;                                            // 0x08A8(0x0028) (Edit, BlueprintVisible)
	class USQVehicleUIStaticDataAsset*                 StaticUIData;                                             // 0x08D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxThrottle;                                              // 0x08D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x08DC(0x0004) MISSED OFFSET
	TArray<struct FSQVehicleQueueEntry>                PlayerSeatPairInfoArray;                                  // 0x08E0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData15[0x8];                                       // 0x08F0(0x0008) MISSED OFFSET
	TArray<class AActor*>                              CurrentRepairers;                                         // 0x08F8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData16[0x8];                                       // 0x0908(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicle");
		return ptr;
	}


	void SwitchedSeat(class ASQSoldier* Soldier, class USQVehicleSeatComponent* PreviousSeat, class USQVehicleSeatComponent* NewSeat);
	void SetEffectPhysmatParams(class UParticleSystemComponent* ParticleSystem, class USQPhysicalMaterial* SQPhysMat);
	void ResetLastSeatEventTime();
	void RepairVehicle(class AActor* SourceRepairer, ESQRepairSource RepairSource, float RepairAmount, float SoldierHealAmount);
	void PlayerRequestLeaveSeat(class ASQPlayerController* Player);
	void OutOfBoundsKillCallback();
	void OnVehicleRepaired();
	void OnRep_HealthChanged();
	void OnRep_HasBeenDestroyed();
	void OnRep_DestroyedState();
	void OnExitBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary);
	void OnEnterBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary);
	void MulticastPlayDamageEffects(class UClass* DamageTypeClass, const struct FVector& ImpactLocationZeroBased);
	void LeftVehicle(class ASQSoldier* Soldier, class USQVehicleSeatComponent* PreviousSeat);
	bool IsVehicleFull();
	bool IsVehicleEmpty();
	bool IsValidSeat(int Seat);
	bool IsSeatHeldByClaimingSquad(int Seat);
	bool IsOutOfMapBounds();
	TArray<class USQVehicleSeatComponent*> GetSeats();
	int GetPlayersSeat(class ASQPlayerController* Player);
	int GetNumOccupants();
	int GetInventoryAmmoPoints();
	void GetExitPoints(TArray<struct FTransform>* OutTransforms);
	class USQVehicleSeatComponent* GetDriverSeat();
	int FindFirstAvailableSeat(class ASQPlayerController* SPC, bool bIncludeDriverSeat);
	void ExitTurnOut(class USQVehicleSeatComponent* Seat);
	void EnterTurnOut(class USQVehicleSeatComponent* Seat);
	void EnteredVehicle(class ASQSoldier* Soldier, class USQVehicleSeatComponent* NewSeat);
	void EjectPlayerFromSeat(int Seat);
	void EjectAllPlayers();
	void DrivetrainComponentRepaired(class USQDriveTrainComponent* DriveTrainComponent);
	void DrivetrainComponentDestroyed(class USQDriveTrainComponent* DriveTrainComponent);
	bool CanActAsRearmSource();
	void BurnVehicle(float VehicleBurnAmount, float SoldierBurnAmount, class AController* BurnCauser);
	void BPClientDestroyed();
	void AmmoUpdated();
};


// Class Squad.SQDeployableVehicle
// 0x0060 (0x0970 - 0x0910)
class ASQDeployableVehicle : public ASQVehicle
{
public:
	class USQMapIconComponent*                         MapIconComponent;                                         // 0x0910(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USQVehicleExitPointComponent*                VehicleExitPoint;                                         // 0x0918(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      SwivelMeshComponent;                                      // 0x0920(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USceneComponent*                             GunMountComponent;                                        // 0x0928(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USceneComponent*                             Camera1pPositionComponent;                                // 0x0930(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            Camera1pComponent;                                        // 0x0938(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         Camera3pSpringComponent;                                  // 0x0940(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            Camera3pComponent;                                        // 0x0948(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	bool                                               bIsInThirdPerson;                                         // 0x0950(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0951(0x0007) MISSED OFFSET
	class ASQDeployable*                               OwningDeployable;                                         // 0x0958(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class USQRotatingMovementComponent*                YawMovementComponent;                                     // 0x0960(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USQRotatingMovementComponent*                PitchMovementComponent;                                   // 0x0968(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployableVehicle");
		return ptr;
	}


	void TurnAtRate(float Rate);
	void Turn(float Rate);
	void ToggleView();
	void MouseWheelScroll(float Rate);
	void LookUpAtRate(float Rate);
	void LookUp(float Rate);
	bool IsCurrentWeaponInputEnabled();
	class ASQDeployable* GetOwnerDeployable();
};


// Class Squad.SQDeployableMortarVehicle
// 0x0010 (0x0980 - 0x0970)
class ASQDeployableMortarVehicle : public ASQDeployableVehicle
{
public:
	float                                              CachedTubePitch;                                          // 0x0970(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0974(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployableMortarVehicle");
		return ptr;
	}

};


// Class Squad.SQDeployableTripodVehicle
// 0x0010 (0x0980 - 0x0970)
class ASQDeployableTripodVehicle : public ASQDeployableVehicle
{
public:
	class USceneComponent*                             AdsCamera1pPositionComponent;                             // 0x0970(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0978(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDeployableTripodVehicle");
		return ptr;
	}

};


// Class Squad.SQDestroyedVehicle
// 0x00A8 (0x03D8 - 0x0330)
class ASQDestroyedVehicle : public AActor
{
public:
	class UStaticMeshComponent*                        VehicleMesh;                                              // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bIsSimulatingInEditor;                                    // 0x0338(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bSimulatePhysics;                                         // 0x0339(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayEffectsWhenReady;                                    // 0x033A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x033B(0x0005) MISSED OFFSET
	class ASQLastingEffect*                            TemperatureLastingEffect;                                 // 0x0340(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       TemperatureLastingEffectAttachSocket;                     // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TemperatureLastingEffectLifetime;                         // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinReplicationTime;                                       // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0358(0x0008) MISSED OFFSET
	class ASQVehicle*                                  OriginalVehicle;                                          // 0x0360(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DeathDamageType;                                          // 0x0368(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQVehicleDestroyEffectConfig>       DeathEffectConfig;                                        // 0x0370(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FName                                       DestroyedEffectsSocket;                                   // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DestroyedParticleEffect;                                  // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DestroyedShockwaveEffect;                                 // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DestroyedSound;                                           // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DestroyedDebrisSound;                                     // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQDamageModifier>                   AllowableDamageTypes;                                     // 0x03A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              Health;                                                   // 0x03B8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LastDamageTypeClass;                                      // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AController*                                 LastDamageInstigator;                                     // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      DefaultEffectsClass;                                      // 0x03D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDestroyedVehicle");
		return ptr;
	}


	void TransferBurningLastingEffect(class ASQLastingEffect* LastingEffect);
	void OnBeginDestroyedVehicle();
};


// Class Squad.SQDetonatorStaticInfo
// 0x0038 (0x0510 - 0x04D8)
class USQDetonatorStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                DetonatorUseWeaponMontage;                                // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                DetonatorUse1pMontage;                                    // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                DetonatorUse3pMontage;                                    // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      IEDClass;                                                 // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RandomDetonationDelayRange;                               // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DetonationDelay;                                          // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DetonatorUseDuration;                                     // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseRandomDetonationDelay;                                // 0x0508(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0509(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDetonatorStaticInfo");
		return ptr;
	}

};


// Class Squad.SQRotorsAnimInstance
// 0x0060 (0x03E0 - 0x0380)
class USQRotorsAnimInstance : public USQAnimInstance
{
public:
	class USQRotorVehicleMovementComponent*            RotorMovementComponent;                                   // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<struct FName, struct FRotator>                RotationsMap;                                             // 0x0388(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRotorsAnimInstance");
		return ptr;
	}


	struct FRotator GetRotationByBoneName(const struct FName& BoneName);
};


// Class Squad.SQDoubleRotorAnimInstance
// 0x0030 (0x0410 - 0x03E0)
class USQDoubleRotorAnimInstance : public USQRotorsAnimInstance
{
public:
	struct FName                                       Rotor1Name;                                               // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       Rotor2Name;                                               // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotor1Rotation;                                           // 0x03F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotor2Rotation;                                           // 0x03FC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDoubleRotorAnimInstance");
		return ptr;
	}

};


// Class Squad.SQDPICustomScalingRule
// 0x0000 (0x0028 - 0x0028)
class USQDPICustomScalingRule : public UDPICustomScalingRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDPICustomScalingRule");
		return ptr;
	}

};


// Class Squad.SQDrawChatWidget
// 0x0010 (0x0218 - 0x0208)
class USQDrawChatWidget : public USQUserWidget
{
public:
	TArray<struct FSQDrawChatStruct>                   MessagesToDraw;                                           // 0x0208(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDrawChatWidget");
		return ptr;
	}


	void InitWidget();
	void STATIC_DrawWidget(class USQDrawChatWidget* ChatWidget, struct FPaintContext* Context);
};


// Class Squad.SQVehicleComponent
// 0x00D0 (0x06D0 - 0x0600)
class USQVehicleComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0600(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnComponentUndestroyedEvent;                              // 0x0608(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MaxHealth;                                                // 0x0618(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x061C(0x0004) MISSED OFFSET
	TArray<struct FSQDamageModifier>                   AllowableDamageTypes;                                     // 0x0620(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bCanBeDestroyed;                                          // 0x0630(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0631(0x0003) MISSED OFFSET
	float                                              MaxRepairToolLimit;                                       // 0x0634(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 FullyRepairedComponentMesh;                               // 0x0638(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 RepairedFromDestructionComponentMesh;                     // 0x0640(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 DestroyedComponentMesh;                                   // 0x0648(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQVehicle*                                  ParentVehicle;                                            // 0x0650(0x0008) (ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BurningEffect;                                            // 0x0658(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   BurningSound;                                             // 0x0660(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             BurningAudioComponent;                                    // 0x0668(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             DestroyedExplosion;                                       // 0x0670(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DestroyedSound;                                           // 0x0678(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       DestructionDamageEffectSocket;                            // 0x0680(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQDamageEffect>                     DestructionDamageEffects;                                 // 0x0688(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UAudioComponent*                             DestroyedAudioComponent;                                  // 0x0698(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BurningParticleSystem;                                    // 0x06A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    DestructionParticleSystem;                                // 0x06A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              NormalizedHealth;                                         // 0x06B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Health;                                                   // 0x06B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	ESQVehicleComponentStates                          VehicleComponentState;                                    // 0x06B8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x06B9(0x0007) MISSED OFFSET
	class UStaticMeshComponent*                        DecorativeMesh;                                           // 0x06C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x06C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleComponent");
		return ptr;
	}


	void OnRep_VehicleComponentState(ESQVehicleComponentStates PreviousState);
	void OnRep_HealthChanged(float PreviousHealthValue);
	void MulticastComponentRepairedFromDestruction();
	void MulticastComponentFullyRepaired();
	void MulticastComponentDestroyed(class UClass* DamageTypeClass);
	ESQVehicleComponentStates GetVehicleComponentState();
	ESQVehicleComponentStates GetPreviousVehicleComponentState();
	class ASQVehicle* GetParentVehicle();
	float GetNormalizedHealth();
	float GetMaximumHealth();
	float GetHealth();
};


// Class Squad.SQDriveTrainComponent
// 0x0010 (0x06E0 - 0x06D0)
class USQDriveTrainComponent : public USQVehicleComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x06D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQDriveTrainComponent");
		return ptr;
	}

};


// Class Squad.SQVehicleUIStaticDataAsset
// 0x0020 (0x0050 - 0x0030)
class USQVehicleUIStaticDataAsset : public UDataAsset
{
public:
	class UTexture2D*                                  MapIcon;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MapIconRotation;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UTexture2D*                                  SideImage;                                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  FrontImage;                                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleUIStaticDataAsset");
		return ptr;
	}

};


// Class Squad.SQEmplacementUIStaticDataAsset
// 0x0000 (0x0050 - 0x0050)
class USQEmplacementUIStaticDataAsset : public USQVehicleUIStaticDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQEmplacementUIStaticDataAsset");
		return ptr;
	}

};


// Class Squad.SQHealingEquipableItem
// 0x0030 (0x05B0 - 0x0580)
class ASQHealingEquipableItem : public ASQEquipableItem
{
public:
	float                                              TraceLength;                                              // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TraceSphereRadius;                                        // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDurationForCancel;                                     // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ErrorMessageColor;                                        // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ErrorMessageLifetime;                                     // 0x0590(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0594(0x0004) MISSED OFFSET
	class ASQSoldier*                                  HealedTarget;                                             // 0x0598(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             HealthAudioComponent;                                     // 0x05A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHealingEquipableItem");
		return ptr;
	}


	void OnRep_HealedTarget(class ASQSoldier* PreviousHealedTarget);
};


// Class Squad.SQFieldDressing
// 0x0090 (0x0640 - 0x05B0)
class ASQFieldDressing : public ASQHealingEquipableItem
{
public:
	bool                                               bWasHealingSelf;                                          // 0x05B0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bWasRevivingOther;                                        // 0x05B1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x05B2(0x0006) MISSED OFFSET
	struct FTimerHandle                                TimerHandle;                                              // 0x05B8(0x0008)
	class USQFieldDressingStaticInfo*                  FieldDressingStaticInfo;                                  // 0x05C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                SelectedSoldier1pMontage;                                 // 0x05C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                SelectedSoldier3pMontage;                                 // 0x05D0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                SelectedWeaponMontage;                                    // 0x05D8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x60];                                      // 0x05E0(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFieldDressing");
		return ptr;
	}


	void StopBleeding();
	void Revive();
};


// Class Squad.SQFieldDressingStaticInfo
// 0x0118 (0x05F0 - 0x04D8)
class USQFieldDressingStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                HealingSelfRightArm1pMontage;                             // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfRightArm3pMontage;                             // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfRightArm1pWeaponMontage;                       // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfRightArm3pWeaponMontage;                       // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfLeftArm1pMontage;                              // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfLeftArm3pMontage;                              // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfLeftArm1pWeaponMontage;                        // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfLeftArm3pWeaponMontage;                        // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfEnd1pMontage;                                  // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfEnd3pMontage;                                  // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfEnd1pWeaponMontage;                            // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingSelfEnd3pWeaponMontage;                            // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Healing1pMontage;                                         // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Healing3pMontage;                                         // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingEnd1pMontage;                                      // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingEnd3pMontage;                                      // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Healing1pWeaponMontage;                                   // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Healing3pWeaponMontage;                                   // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingEnd1pWeaponMontage;                                // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                HealingEnd3pWeaponMontage;                                // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Reviving1pMontage;                                        // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Reviving3pMontage;                                        // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RevivingEnd1pMontage;                                     // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RevivingEnd3pMontage;                                     // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Reviving1pWeaponMontage;                                  // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Reviving3pWeaponMontage;                                  // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RevivingEnd1pWeaponMontage;                               // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RevivingEnd3pWeaponMontage;                               // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   HealSelfSound;                                            // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   HealOtherSound;                                           // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   ReviveOtherSound;                                         // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NormalReviveDuration;                                     // 0x05D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MedicReviveDuration;                                      // 0x05D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NormalStopBleedingOtherDuration;                          // 0x05D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NormalStopBleedingSelfDuration;                           // 0x05DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MedicStopBleedingOtherDuration;                           // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MedicStopBleedingSelfDuration;                            // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AnimPlayRateMultiplier;                                   // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFieldDressingStaticInfo");
		return ptr;
	}

};


// Class Squad.SQFindFriendsCallbackProxy
// 0x0030 (0x0058 - 0x0028)
class USQFindFriendsCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET
	class APlayerController*                           PlayerController;                                         // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFindFriendsCallbackProxy");
		return ptr;
	}

};


// Class Squad.SQFindSessionsCallbackProxy
// 0x0060 (0x0088 - 0x0028)
class USQFindSessionsCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET
	class UObject*                                     WorldContextObject;                                       // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFindSessionsCallbackProxy");
		return ptr;
	}


	bool STATIC_IsSameServer(const struct FBlueprintSessionResult& ResultA, const struct FBlueprintSessionResult& ResultB);
	struct FSQSessionFlagStruct STATIC_GetSessionFlagStruct(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetServerName(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetSearchKeywords(const struct FBlueprintSessionResult& Result);
	int STATIC_GetPingInMs(const struct FBlueprintSessionResult& Result);
	bool STATIC_GetPasswordProtected(const struct FBlueprintSessionResult& Result);
	int STATIC_GetMaxPlayers(const struct FBlueprintSessionResult& Result);
	int STATIC_GetMatchTimeout(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetMapName(const struct FBlueprintSessionResult& Result);
	bool STATIC_GetLicensedServer(class UObject* WorldContextObject, const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetGameVersion(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetGameMode(const struct FBlueprintSessionResult& Result);
	int STATIC_GetCurrentPlayers(const struct FBlueprintSessionResult& Result);
	bool STATIC_GetAnticheatProtected(const struct FBlueprintSessionResult& Result);
};


// Class Squad.SQFlagScoringRuleset
// 0x0058 (0x03B0 - 0x0358)
class ASQFlagScoringRuleset : public ASQGameRuleSet
{
public:
	float                                              RateOfScoreTick;                                          // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSQFlagScoreInfo                            TeamOneFlagScores;                                        // 0x035C(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSQFlagScoreInfo                            TeamTwoFlagScores;                                        // 0x0378(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	TArray<class USQCaptureZoneComponent*>             CaptureZones;                                             // 0x0398(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFlagScoringRuleset");
		return ptr;
	}


	void OnFlagTick();
	void OnFlagStateChange(class USQCaptureZoneComponent* CaptureZone, unsigned char Team);
};


// Class Squad.SQMovementComponentBase
// 0x00E0 (0x01D0 - 0x00F0)
class USQMovementComponentBase : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00F0(0x0020) MISSED OFFSET
	float                                              MaxMoveDeltaTime;                                         // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VectorEqualityTolerance;                                  // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AccelDotThresholdCombine;                                 // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AccelDotThreshold;                                        // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AccelMagThreshold;                                        // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AngularErrorTolerance;                                    // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkMaxSmoothUpdateDistance;                           // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinCorrectionDelay;                                       // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkNoSmoothUpdateDistance;                            // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EVectorQuantization                                LocationQuantizationLevel;                                // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EVectorQuantization                                VelocityQuantizationLevel;                                // 0x0135(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EVectorQuantization                                AccelerationQuantizationLevel;                            // 0x0136(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERotatorQuantization                               RotationQuantizationLevel;                                // 0x0137(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AActor*                                      OwnerActor;                                               // 0x0138(0x0008) (ZeroConstructor, IsPlainOldData)
	class AController*                                 Controller;                                               // 0x0140(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x0148(0x0040) MISSED OFFSET
	struct FSQRepMovement                              ReplicatedMovement;                                       // 0x0188(0x0040) (Net)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01C8(0x0004) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x01CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMovementComponentBase");
		return ptr;
	}


	void ServerMoveOld(TArray<unsigned char> Move);
	void ServerMoveDual(TArray<unsigned char> Move1, TArray<unsigned char> Move2);
	void ServerMove(TArray<unsigned char> Move);
	void OnRep_Movement();
	bool IsServerComponent();
	bool IsLocallyControlledComponent();
	struct FVector GetCurrentVelocity();
	struct FVector GetCurrentRotationalVelocity();
	struct FVector GetCurrentRotationalAcceleration();
	struct FVector GetCurrentAcceleration();
	void ClientAdjustPositionAndRotation(float Timestamp, const struct FVector& LocationZeroBased, const struct FVector& InVelocity, const struct FRotator& Rotation);
	void ClientAdjustPosition(float Timestamp, const struct FVector& LocationZeroBased, const struct FVector& InVelocity);
	void ClientAckGoodMove(float Timestamp);
};


// Class Squad.SQFlightMovementComponent
// 0x0040 (0x0210 - 0x01D0)
class USQFlightMovementComponent : public USQMovementComponentBase
{
public:
	TScriptInterface<class USQMeshOwnerInterface>      UpdatedMeshOwner;                                         // 0x01D0(0x0030) (ZeroConstructor, IsPlainOldData)
	class USQFDMComponent*                             FlightModelComponent;                                     // 0x01E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x01E8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFlightMovementComponent");
		return ptr;
	}

};


// Class Squad.SQFloatingVehicle
// 0x0030 (0x0460 - 0x0430)
class ASQFloatingVehicle : public ASQPawn
{
public:
	class USQSimpleMovementComponent*                  SimpleMovementComponent;                                  // 0x0430(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            CameraComponent;                                          // 0x0438(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         SpringArm;                                                // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                    // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           CapsuleComponent;                                         // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFloatingVehicle");
		return ptr;
	}

};


// Class Squad.SQFoliageBender
// 0x0020 (0x0350 - 0x0330)
class ASQFoliageBender : public AActor
{
public:
	class UMaterialParameterCollection*                FoliageMaterialParameterCollection;                       // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USphereComponent*                            Sphere;                                                   // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              StandSpreadMultiplier;                                    // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProneSpreadMultiplier;                                    // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebugSpheres;                                        // 0x0348(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebugPoints;                                         // 0x0349(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x034A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFoliageBender");
		return ptr;
	}


	void GetSoldierLocationAndSpread(class ASQSoldier* Soldier, float* X, float* Y, float* Z, float* SpreadMultiplier);
};


// Class Squad.SQForceMovementComponentSettings
// 0x0058 (0x0088 - 0x0030)
class USQForceMovementComponentSettings : public UDataAsset
{
public:
	float                                              Mass;                                                     // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MaxRotationalVelocity;                                    // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Length;                                                   // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Width;                                                    // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 AirDensityByHeight;                                       // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DragCoefficient;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Gravity;                                                  // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyGravity;                                            // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyDrag;                                               // 0x0061(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0062(0x0006) MISSED OFFSET
	struct FName                                       DragApplicationSocket;                                    // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DragTorqueMultiplier;                                     // 0x0070(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyCentripedalForce;                                   // 0x007C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUsePhysX;                                                // 0x007D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugForces;                                             // 0x007E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x007F(0x0001) MISSED OFFSET
	float                                              AngularDamping;                                           // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LinearDamping;                                            // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQForceMovementComponentSettings");
		return ptr;
	}

};


// Class Squad.SQForceNetMovementComponent
// 0x0080 (0x02E0 - 0x0260)
class USQForceNetMovementComponent : public USQNetMoveComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0260(0x0010) MISSED OFFSET
	struct FVector                                     TorqueInput;                                              // 0x0270(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ForceInput;                                               // 0x027C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CurrentRotationalVelocity;                                // 0x0288(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x0294(0x0024) MISSED OFFSET
	class USQForceMovementComponentSettings*           ForceComponentSettings;                                   // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             CenterOfMass;                                             // 0x02C0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x02C8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQForceNetMovementComponent");
		return ptr;
	}


	void AddYawTorque(float Amount);
	void AddTorque(const struct FVector& Torque);
	void AddRollTorque(float Amount);
	void AddPitchTorque(float Amount);
	void AddForceAtLocationWithTorqueMultiplier(const struct FVector& Force, const struct FVector& Position, const struct FVector& TorqueMultiplier);
	void AddForceAtLocation(const struct FVector& Force, const struct FVector& Position, float TorqueMultiplier);
	void AddForce(const struct FVector& Force);
};


// Class Squad.SQForwardBase
// 0x01F8 (0x06B0 - 0x04B8)
class ASQForwardBase : public ASQDeployable
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04B8(0x0008) MISSED OFFSET
	bool                                               bIsSpawningEnabled;                                       // 0x04C0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04C1(0x0003) MISSED OFFSET
	float                                              TimeToEnableSpawning;                                     // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCreatesFobSpawnPoints;                                   // 0x04C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSuppliesCreateSpawnPoints;                               // 0x04C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x04CA(0x0002) MISSED OFFSET
	float                                              SpawnPointRadius;                                         // 0x04CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SpawnOffset;                                              // 0x04D0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                EnemiesToCapture;                                         // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CurrentNumDeployables;                                    // 0x04E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x04E1(0x0007) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x04E8(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor)
	bool                                               bHasBeenOverrun;                                          // 0x04F8(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               UseCaptureTick;                                           // 0x04F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x04FA(0x0006) MISSED OFFSET
	TArray<class ASQDeployable*>                       TrackedDeployables;                                       // 0x0500(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst)
	TArray<class ASQGameSpawn*>                        SpawnPoints;                                              // 0x0510(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst)
	class UClass*                                      SpawnPointClass;                                          // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSieged;                                                  // 0x0528(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0529(0x0003) MISSED OFFSET
	float                                              RespawnIncrease;                                          // 0x052C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfTeammatesNeededToDeploy;                          // 0x0530(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumberOfLogisNeededToDeploy;                              // 0x0534(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PercentToDisableSpawns;                                   // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	class USphereComponent*                            CaptureZone;                                              // 0x0540(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            DeploymentRadius;                                         // 0x0548(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            ConstructionRadius;                                       // 0x0550(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bUseResourceTickRateToUpdateResources;                    // 0x0558(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0559(0x0003) MISSED OFFSET
	float                                              MaxTicketsPerSecond;                                      // 0x055C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TicketsPerPlayer;                                         // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TicketsLostWhenOverrun;                                   // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                EnemiesToDisableSpawn;                                    // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                EnemiesNear;                                              // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              InitialConstructionPoints;                                // 0x0570(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxConstructionPoints;                                    // 0x0574(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialAmmo;                                              // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAmmo;                                                  // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CPPerSecond;                                              // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AmmoPerSecond;                                            // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ResourceGenerationRate;                                   // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CaptureTickRate;                                          // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<class UClass*, unsigned char>                 CurrentDeployablesOnFOB;                                  // 0x0590(0x0050) (ZeroConstructor, Transient)
	int                                                SiegedMinNearbyEnemies;                                   // 0x05E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearbyEnemiesRadius;                                      // 0x05E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Ammo;                                                     // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ConstructionPoints;                                       // 0x05EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ExclusionRadius;                                          // 0x05F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NearbyEnemies;                                            // 0x05F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SiegedSpawnPoints;                                        // 0x05F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0xB4];                                      // 0x05FC(0x00B4) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQForwardBase");
		return ptr;
	}


	bool TryAcceptPlacement(class ASQDeployable* Deployable);
	void TrackDeployable(class ASQDeployable* Deployable);
	void SetSpawnPointsEnabled(bool bEnabled);
	void SetSieged(bool bValue);
	void Overrun(bool bFriendly);
	void OnTrackedDeployableDestroyed(class ASQDeployable* Deployable);
	void OnSpawnSiegedStateChanged(bool bNewState);
	void OnSpawnPointDestroyed(class AActor* DestroyedActor);
	void OnSpawningEnabledChanged(bool bNewState);
	void OnRep_TrackedDeployables();
	void OnRep_SpawnPointsChanged();
	void OnRep_SpawningEnabledChanged();
	void OnRep_SiegedChanged();
	void OnRep_ConstructionPointsChanged();
	void OnRep_AmmoChanged();
	bool HasConstructionPointsFor(float Amount);
	bool HasAmmoFor(float Amount);
	bool GetSpawnPointsEnabled();
	class ASQGameSpawn* CreateSpawnPointSeperately(const struct FVector& Location);
	class ASQGameSpawn* CreateSpawnPointOnFob();
	bool ConsumeFOBAmmo(float Amount);
	bool ConsumeConstructionPoints(float Amount);
	bool CheckDeploymentRules();
	void BPPostTicketTick(float Difference);
	void BPOverrun(bool bFriendly);
};


// Class Squad.SQFreeLookComponent
// 0x0080 (0x0170 - 0x00F0)
class USQFreeLookComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	class APawn*                                       OuterPawn;                                                // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0100(0x0018) MISSED OFFSET
	class UCameraComponent*                            FreeLookCamera;                                           // 0x0118(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bCanFreelookWhileADS;                                     // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bFreelookCanRecenterWeapons;                              // 0x0121(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0122(0x0002) MISSED OFFSET
	struct FVector2D                                   PitchLimits;                                              // 0x0124(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   YawLimits;                                                // 0x012C(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RotationSpeed;                                            // 0x0134(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ResetSpeed;                                               // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0140(0x0020) MISSED OFFSET
	struct FSQRotator_NetQuantizeBytes                 ReplicatedFreeLookRot;                                    // 0x0160(0x000C) (Net)
	EFreeLookMode                                      FreeLookMode;                                             // 0x016C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bReplicateFreeLookRotation;                               // 0x016D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x016E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFreeLookComponent");
		return ptr;
	}


	void SetYawLimits(const struct FVector2D& NewYawLimits);
	void SetRotationSpeed(const struct FVector2D& NewRotationSpeed);
	void SetReplicateFreeLookRotation(bool bNewBool);
	void SetPitchLimits(const struct FVector2D& NewPitchLimits);
	void SetIsToggleActive(bool bNewState);
	void SetFreeLookRotation(const struct FRotator& NewFreeLookRotator);
	void SetFreeLookMode(EFreeLookMode NewFreeLookMode);
	void SetFreelookCanRecenterWeapons(bool bNewBool);
	void SetFreeLookCamera(class UCameraComponent* NewCamera);
	void SetCanFreelookWhileADS(bool bNewBool);
	void ServerSetFreeLookRotation(const struct FRotator& NewFreeLookRotation);
	void ResetFreeLook();
	void OnRep_ReplicatedFreeLookRot();
	struct FVector2D GetYawLimits();
	struct FVector2D GetRotationSpeed();
	struct FVector2D GetPitchLimits();
	bool GetIsUsingFreeLook();
	bool GetIsFreeLookComponentActive();
	bool GetFreelookCanRecenterWeapons();
	class UCameraComponent* GetFreeLookCamera();
	bool GetCanFreelookWhileADS();
	struct FRotator CalculateFreeLookRotation();
};


// Class Squad.SQFreeLookInterface
// 0x0000 (0x0028 - 0x0028)
class USQFreeLookInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFreeLookInterface");
		return ptr;
	}


	void SetIsToggleActive(bool bNewState);
	bool GetIsUsingFreeLook();
	class USQFreeLookComponent* GetFreeLookComponent();
	struct FRotator CalculateFreeLookRotation();
};


// Class Squad.SQFriendsBrowserWidget
// 0x0010 (0x0218 - 0x0208)
class USQFriendsBrowserWidget : public USQUserWidget
{
public:
	bool                                               bCanStartNewFindFriends;                                  // 0x0208(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	class USQFindFriendsCallbackProxy*                 CurrentCallback;                                          // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQFriendsBrowserWidget");
		return ptr;
	}


	void StartFindFriends();
	void OnSuccess(TArray<struct FSQBlueprintFriend> Results);
	void OnFindFriendsCompleted(TArray<struct FSQBlueprintFriend> Results, bool bSuccess);
	void OnFailure();
};


// Class Squad.SQGameState
// 0x0128 (0x04B8 - 0x0390)
class ASQGameState : public AGameState
{
public:
	bool                                               bTimerPaused;                                             // 0x0390(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsTicketBasedGame;                                       // 0x0391(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTeamPrepsActive;                                         // 0x0392(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3D];                                      // 0x0393(0x003D) MISSED OFFSET
	TArray<class ASQTeamState*>                        TeamStates;                                               // 0x03D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class ASQTeamState*>                        IndexedTeamStates;                                        // 0x03E0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	int                                                ChangeTeamWaitTime;                                       // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	class ASQTeamState*                                WinningTeam;                                              // 0x03F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                WinningTeamTickets;                                       // 0x0400(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ServerTickRate;                                           // 0x0404(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     GameModeName;                                             // 0x0408(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	TArray<struct FSQGameModeRules>                    GameModeRules;                                            // 0x0418(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	struct FString                                     NextMapName;                                              // 0x0428(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	struct FString                                     NextGameModeName;                                         // 0x0438(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	class USQGameCommandComponent*                     GameCommandComponent;                                     // 0x0448(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      GameCommandComponentClass;                                // 0x0450(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	int                                                MaxFireTeamCount;                                         // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData)
	int                                                MaxFireTeamSize;                                          // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData)
	struct FString                                     MapName;                                                  // 0x0460(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	int                                                MaxPlayers;                                               // 0x0470(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	struct FString                                     ServerName;                                               // 0x0478(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	struct FString                                     MessageOfTheDay;                                          // 0x0488(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	class USQCoreStateConnectionChildActorComponent*   CoreStateConnectionChildActorComponent;                   // 0x0498(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	float                                              TimeOfCompletion;                                         // 0x04A0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x04A4(0x000C) MISSED OFFSET
	int                                                ServerStartTimeStamp;                                     // 0x04B0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameState");
		return ptr;
	}


	void SetRemainingTime(int Seconds);
	void RequestFinishAndExitToMainMenu();
	void RefreshTeamStates();
	void OnRep_ServerStartTimeStamp();
	void OnRep_ServerName();
	void OnRep_NeutralTeamInfoClass();
	void OnRep_MaxPlayers();
	void OnRep_IndexedTeamStates();
	void OnRep_GameModeRules();
	int GetRemainingTime();
	void AddGameModeRules(TArray<struct FSQGameModeRules> InGameModeRules);
};


// Class Squad.SQGameCommandComponent
// 0x0100 (0x01F0 - 0x00F0)
class USQGameCommandComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x100];                                     // 0x00F0(0x0100) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameCommandComponent");
		return ptr;
	}

};


// Class Squad.SQGameEngine
// 0x00E8 (0x0DE0 - 0x0CF8)
class USQGameEngine : public UGameEngine
{
public:
	class USQConfig*                                   SquadConfig;                                              // 0x0CF8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE0];                                      // 0x0D00(0x00E0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameEngine");
		return ptr;
	}

};


// Class Squad.SQGameEventRuleset
// 0x0008 (0x0360 - 0x0358)
class ASQGameEventRuleset : public ASQGameRuleSet
{
public:
	ESQKillReportChannel                               JoinChannel;                                              // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESQKillReportChannel                               PartChannel;                                              // 0x0359(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x035A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameEventRuleset");
		return ptr;
	}

};


// Class Squad.SQGameInstance
// 0x0360 (0x0400 - 0x00A0)
class USQGameInstance : public UGameInstance
{
public:
	TMap<struct FString, struct FSQMapData>            MapsData;                                                 // 0x00A0(0x0050) (Edit, ZeroConstructor)
	TArray<struct FSQSoliderNetPriorityObject>         SoliderNetPriorities;                                     // 0x00F0(0x0010) (ZeroConstructor, Config)
	float                                              SoldierNetPriorityConeSensitivity;                        // 0x0100(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              SoldierNetPriorityConeFactor;                             // 0x0104(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	class ASQConnectionCheckBeaconHostObj*             SQConnectionCheckHost;                                    // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	class ASQJoinBeaconHost*                           SQJoinQueueHost;                                          // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData)
	class AOnlineBeaconHost*                           BeaconHost;                                               // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData)
	class ASQJoinBeaconClient*                         JoinQueueClient;                                          // 0x0120(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQFindSessionsCallbackProxy*                ActiveFindSessionsCallback;                               // 0x0128(0x0008) (ZeroConstructor, IsPlainOldData)
	class USQFindFriendsCallbackProxy*                 ActiveFindFriendsCallback;                                // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData)
	TMap<struct FString, class ASQConnectionCheckBeaconClient*> ConnectionCheckClients;                                   // 0x0138(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x88];                                      // 0x0188(0x0088) MISSED OFFSET
	class USQLicensedServerManager*                    LicensedServerManager;                                    // 0x0210(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bSaveServerBrowserResultsToFile;                          // 0x0218(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0219(0x0007) MISSED OFFSET
	struct FString                                     MainMenuMap;                                              // 0x0220(0x0010) (ZeroConstructor, Config)
	ESQRandomizeMapRotation                            RandomizeMapRotation;                                     // 0x0230(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x127];                                     // 0x0231(0x0127) MISSED OFFSET
	class USQConfig*                                   SquadConfig;                                              // 0x0358(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnMapIconCreated;                                         // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMapIconDestroyed;                                       // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWorldOriginLocationChangedEvent;                        // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FString                                     UserEnteredPassword;                                      // 0x0390(0x0010) (BlueprintVisible, ZeroConstructor)
	class UAudioComponent*                             MusicAudioComponent;                                      // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  MusicSoundCue;                                            // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     ServerPartMessage;                                        // 0x03B0(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FModdingRuntimeModInfoDetails>       ModInfo;                                                  // 0x03C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData03[0x30];                                      // 0x03D0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameInstance");
		return ptr;
	}


	void StopMusic();
	void QueueForServer(class UObject* WorldContextObject, class USQServerListItemWidget* SessionWidget);
	void PlayMusic();
	bool IsSteamConnected();
	bool HostGame(class ULocalPlayer* LocalPlayer, const struct FString& GameType, const struct FString& InTravelURL);
	void GotoMainMenu();
	class USQUISettings* GetSquadUISettings();
	struct FString STATIC_GetServerURL(class UObject* WorldContextObject, const struct FBlueprintSessionResult& BlueprintSessionResult);
	struct FString GetRandomMapPath();
	struct FString GetCurrentMapPath();
	void DisconnectToMenu();
	void CheckConnectionToServer(class UObject* WorldContextObject, class USQServerListItemWidget* SessionWidget);
};


// Class Squad.SQGameMode
// 0x0398 (0x0810 - 0x0478)
class ASQGameMode : public AGameMode
{
public:
	bool                                               bTournamentMode;                                          // 0x0478(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	float                                              CheckEndMatchConditionsTimeInterval;                      // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                InitialLives;                                             // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                StartupTime;                                              // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEditorIgnoreStartupTime;                                 // 0x0488(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0489(0x0003) MISSED OFFSET
	int                                                RoundTime;                                                // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TimeBetweenMatches;                                       // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	class ASQTeam*                                     WinnerTeam;                                               // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeamClass;                                                // 0x04A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class UClass*                                      SquadClass;                                               // 0x04A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	TArray<class UClass*>                              RuleSetClasses;                                           // 0x04B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NoClear)
	TArray<class ASQGameRuleSet*>                      RuleSets;                                                 // 0x04C0(0x0010) (ZeroConstructor, Transient)
	TArray<class ASQTeam*>                             Teams;                                                    // 0x04D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class ASQTeam*>                             IndexedTeams;                                             // 0x04E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                EditorStartTeam;                                          // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04F4(0x0004) MISSED OFFSET
	struct FString                                     NextMap;                                                  // 0x04F8(0x0010) (ZeroConstructor, Transient)
	bool                                               bAdminOverrideNextMap;                                    // 0x0508(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x57];                                      // 0x0509(0x0057) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x0560(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData05[0x298];                                     // 0x0578(0x0298) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameMode");
		return ptr;
	}


	void VehicleDestroyed(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UDamageType* DamageType);
	void UnregisterImportantActor(class AActor* Actor);
	bool TryToChangePlayersTeam(class ASQPlayerController* PlayerToChange, int TeamToChangeTo, bool bForceChange);
	void SetNextMapInRotation();
	void RequestPlaceDeployable(class UClass* DeployableClass, const struct FTransform& SpawnLocation, class ASQPlayerController* PlayerController);
	void RegisterRuleSet(class ASQGameRuleSet* RuleSet);
	void RegisterImportantActor(class AActor* Actor);
	void PlayerWounded(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UDamageType* DamageType);
	void PlayerRevived(class AController* Reviver, class AController* RevivedPlayer);
	void PlayerHealed(class AController* Healer, class AController* HealedPlayer);
	void PlayerDied(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UDamageType* DamageType);
	void PlayerBandaged(class AController* Bandager, class AController* BandagedPlayer);
	void OnPlayerChangedTeams(class ASQPlayerController* PlayerWhoSwitched);
	void LogisticsDropOff(class AActor* VehicleActor, float AmmoDroppedOff, float ConstructionDroppedOff);
	bool IsDeployNow(class APlayerController* PC);
	class ASQTeam* GetTeam(ESQTeam Team);
	struct FString GetNextMapDisplayName();
	void GetDisplayNameArray(TArray<struct FString>* OutArray);
	struct FString GetDisplayName();
	struct FString GetCurrentMapDisplayName();
	class UClass* GetConcretePawnClassForController(class AController* InController);
	void BP_InvalidatePlacement(class ASQPlayerController* PlayerController, class ASQDeployable* Deployable, ESQInvalidPlacementReason FailureReason);
	void BP_InitializeDeployableFromEquippable(class ASQDeployableItem* DeployableItem, class ASQEquipableItem* Equippable);
	void BP_FailPlaceDeployableFromEquippable(class ASQEquipableItem* Equippable);
	bool AllowTeamChange(class ASQPlayerController* RequestingPlayer, int NewTeam);
};


// Class Squad.SQGameMode_Menu
// 0x0000 (0x0478 - 0x0478)
class ASQGameMode_Menu : public AGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameMode_Menu");
		return ptr;
	}

};


// Class Squad.SQGameplayStatics
// 0x0000 (0x0028 - 0x0028)
class USQGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameplayStatics");
		return ptr;
	}

};


// Class Squad.SQGameSpawn
// 0x0168 (0x04C8 - 0x0360)
class ASQGameSpawn : public APlayerStart
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSiegedStateChanged;                                     // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSpawningEnabledStateChanged;                            // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              RespawnDelay;                                             // 0x0388(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              RespawnIncrease;                                          // 0x038C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              SecondsOfSpawnProtection;                                 // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawningEnabled;                                         // 0x0394(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bSieged;                                                  // 0x0395(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0396(0x0002) MISSED OFFSET
	class UClass*                                      SpawnIconComponentClass;                                  // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxTimeIntervalBetweenSpawnPointLocationEvaluations;      // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET
	class USQCoreStateComponent*                       StateObject;                                              // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQMapIconComponent*                         MapIcon;                                                  // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      DefaultMapIconWidget;                                     // 0x03B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpawnSearchRadius;                                        // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpawnSearchHeight;                                        // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             ValidSpawnLocations;                                      // 0x03C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVector>                             ValidOutOfSightSpawnPoints;                               // 0x03D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bHasValidSpawnLocation;                                   // 0x03E8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x03E9(0x000F) MISSED OFFSET
	bool                                               bCanEverDoNearbyEnemiesCheck;                             // 0x03F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x03F9(0x0003) MISSED OFFSET
	int                                                SiegedMinNearbyEnemies;                                   // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RespawnDelayPerNearbyEnemy;                               // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearbyEnemiesRadius;                                      // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NearbyEnemies;                                            // 0x0408(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x94];                                      // 0x040C(0x0094) MISSED OFFSET
	ESQTeam                                            Team;                                                     // 0x04A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	ESQSpawnPointType                                  SpawnPointType;                                           // 0x04A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x04A2(0x0002) MISSED OFFSET
	float                                              WaveIntervalTime;                                         // 0x04A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x18];                                      // 0x04A8(0x0018) MISSED OFFSET
	float                                              WaveSpawnStartTime;                                       // 0x04C0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameSpawn");
		return ptr;
	}


	void SetTeam(ESQTeam Team);
	void SetSpawningEnabled(bool bEnabled);
	void SetSieged(bool bEnabled);
	void SetRespawnIncrease(float Value);
	void OnRep_Team();
	void OnRep_SpawningEnabledChanged();
	void OnRep_SiegedChanged();
	bool HasValidSpawnLocation();
	float GetWaveTime();
	float GetWaveSpawnStartTime();
	float GetWaveIntervalTime();
	TArray<struct FVector> GetValidSpawnLocations();
	struct FVector GetValidSpawnLocation(class UClass* DefaultPawnClass);
	ESQTeam GetTeam();
	ESQSpawnPointType GetSpawnPointType();
	bool GetSpawningEnabled();
	class AActor* GetSpawnActor();
	bool GetSieged();
	float GetRespawnIncrease();
	float GetRespawnDelay();
	bool CanSpawn();
};


// Class Squad.SQGameRallyPoint
// 0x0030 (0x04F8 - 0x04C8)
class ASQGameRallyPoint : public ASQGameSpawn
{
public:
	class UStaticMeshComponent*                        Mesh;                                                     // 0x04C8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USphereComponent*                            CollisionComp;                                            // 0x04D0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USQMapIconComponent*                         RallyPointMapIcon;                                        // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	int                                                EnemyDisableRadius;                                       // 0x04E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	class USoundBase*                                  PlacementSound;                                           // 0x04E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfSpawns;                                           // 0x04F0(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameRallyPoint");
		return ptr;
	}


	int GetNumberOfSpawns();
};


// Class Squad.SQGameSession
// 0x0278 (0x05C0 - 0x0348)
class ASQGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData00[0x178];                                     // 0x0348(0x0178) MISSED OFFSET
	int                                                NumPlayersDiffForTeamChanges;                             // 0x04C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowTeamChanges;                                        // 0x04C4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPreventTeamChangeIfUnbalanced;                           // 0x04C5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xCA];                                      // 0x04C6(0x00CA) MISSED OFFSET
	class USQConfig*                                   SquadConfig;                                              // 0x0590(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0598(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameSession");
		return ptr;
	}


	void SetServerPassword(const struct FString& ServerPassword);
	void SetNumReservedSlots(int NumReserved);
	void SetMaxNumPlayers(int NumPlayers, bool bIgnoreRestrictions);
	bool Logout();
	bool Login(const struct FString& LoginName, const struct FString& InPassword);
	bool IsLoginBusy();
	bool IsLoggedIn();
	class USQConfig* GetSquadConfig();
	struct FString GetLastLoginError();
};


// Class Squad.SQGameUserSettings
// 0x02E0 (0x03F8 - 0x0118)
class USQGameUserSettings : public UGameUserSettings
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0118(0x0018) MISSED OFFSET
	struct FString                                     PlayerNamePrefix;                                         // 0x0130(0x0010) (BlueprintVisible, ZeroConstructor, Config)
	float                                              NameTagOpacity;                                           // 0x0140(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              NameTagScale;                                             // 0x0144(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowNameTagText;                                         // 0x0148(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowNameTagKit;                                          // 0x0149(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDistanceFieldShadows;                                    // 0x014A(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bInvertedYAxis;                                           // 0x014B(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableMouseSmoothing;                                    // 0x014C(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bKeyboardHighlight;                                       // 0x014D(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseMenuToolTips;                                         // 0x014E(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseRadialMenuToolTips;                                   // 0x014F(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseInGameHelp;                                           // 0x0150(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideServerIdentification;                                // 0x0151(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0152(0x0002) MISSED OFFSET
	float                                              FOV;                                                      // 0x0154(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              GlobalSensitivity;                                        // 0x0158(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DoubleKeyPressTime;                                       // 0x015C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              Gamma;                                                    // 0x0160(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DistanceFieldShadowDistance;                              // 0x0164(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CascadeShadowMapDistance;                                 // 0x0168(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	bool                                               bToggleCrouch;                                            // 0x0170(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bToggleADS;                                               // 0x0171(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bToggleLean;                                              // 0x0172(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bToggleFreelook;                                          // 0x0173(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              FreelookSensitivitySliderValue;                           // 0x0174(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FreelookSensitivity;                                      // 0x0178(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHelicopterInvertMousePitch;                              // 0x017C(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x017D(0x0003) MISSED OFFSET
	float                                              HelicopterPitchSensitivitySliderValue;                    // 0x0180(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HelicopterPitchSensitivity;                               // 0x0184(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              HelicopterRollSensitivitySliderValue;                     // 0x0188(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HelicopterRollSensitivity;                                // 0x018C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseSensivityScaling;                                     // 0x0190(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0191(0x0003) MISSED OFFSET
	float                                              GlobalSensitivitySliderValue;                             // 0x0194(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SoldierSensitivitySliderValue;                            // 0x0198(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SoldierSensitivity;                                       // 0x019C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	TMap<float, float>                                 SoldierZoomSensitivitiesSliderValues;                     // 0x01A0(0x0050) (BlueprintVisible, ZeroConstructor)
	TMap<float, float>                                 SoldierZoomSensitivities;                                 // 0x01F0(0x0050) (ZeroConstructor, Config)
	float                                              VehicleSensitivitySliderValue;                            // 0x0240(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleSensitivity;                                       // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	TMap<float, float>                                 VehicleZoomSensitivitiesSliderValues;                     // 0x0248(0x0050) (BlueprintVisible, ZeroConstructor)
	TMap<float, float>                                 VehicleZoomSensitivities;                                 // 0x0298(0x0050) (ZeroConstructor, Config)
	bool                                               bFreelookRecentersWeapon;                                 // 0x02E8(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bJumpCausesUnCrouch;                                      // 0x02E9(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bJumpCausesUnProne;                                       // 0x02EA(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsDoubleTapWalkingEnabled;                               // 0x02EB(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowDiffVerServers;                                      // 0x02EC(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowEmptyServers;                                        // 0x02ED(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowQueuesSeparately;                                    // 0x02EE(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowReservedSlots;                                       // 0x02EF(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                GraphicsQuality;                                          // 0x02F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	int                                                AntiAliasingMethod;                                       // 0x02F4(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                AntiAliasingMethodQuality;                                // 0x02F8(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenSharpening;                                         // 0x02FC(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                MSAACompositingSampleCount;                               // 0x0300(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                AmbientOcclusion;                                         // 0x0304(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                AmbientOcclusionStaticFraction;                           // 0x0308(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                AmbientOcclusionLevels;                                   // 0x030C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              AmbientOcclusionRadiusScale;                              // 0x0310(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                MotionBlur;                                               // 0x0314(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                MotionBlurQuality;                                        // 0x0318(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                LensFlare;                                                // 0x031C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                LensFlareQuality;                                         // 0x0320(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                Bloom;                                                    // 0x0324(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                BloomQuality;                                             // 0x0328(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                AutoExposure;                                             // 0x032C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                EyeAdaptationQuality;                                     // 0x0330(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MasterVolume;                                             // 0x0334(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              EffectsVolume;                                            // 0x0338(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              UIVolume;                                                 // 0x033C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MusicVolume;                                              // 0x0340(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              VoiceVolume;                                              // 0x0344(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bApplyVoiceRadioFilter;                                   // 0x0348(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bPlaySquadVOIPSounds;                                     // 0x0349(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bPlayCommandVOIPSounds;                                   // 0x034A(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x034B(0x0001) MISSED OFFSET
	float                                              LocalVoIPVolume;                                          // 0x034C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CommandVoIPVolume;                                        // 0x0350(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              UnfocusedVolumeMultiplier;                                // 0x0354(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxImpactEffectDecalLifeSpan;                             // 0x0358(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	TArray<struct FSQOnlineInventorySetting>           InventorySettings;                                        // 0x0360(0x0010) (BlueprintVisible, ZeroConstructor, Config)
	int                                                TextureStreaming;                                         // 0x0370(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0374(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGameUserSettingsChanged;                                // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bIsLanMatch;                                              // 0x0388(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0389(0x0003) MISSED OFFSET
	uint32_t                                           SquadIncrementalVersion;                                  // 0x038C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0x68];                                      // 0x0390(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGameUserSettings");
		return ptr;
	}


	void UpdateQualityLevels();
	int UpdateQualityBasedOnGraphicsQuality(int InBaseQuality, int InGraphicsQuality);
	void SetSteamItemEnabled(int ItemId, bool bEnabled);
	void SetResolutionQuality(int ResolutionQuality);
	void SetPostProcessQuality(int PostProcessQuality);
	void SetGraphicsQuality(int InGraphicsQuality);
	void SetEffectsQuality(int EffectsQuality);
	bool IsSteamItemEnabled(int ItemId);
	void BPSetMSAACompositingSampleCount(int InMSAACompositingSampleCount);
	int BPGetMSAACompositingSampleCount();
	void BlueprintSetVSync(bool bEnable);
	void BlueprintSetToDefaults();
	void BlueprintSetSoundsToDefaults();
	void BlueprintSetScreenResolution(const struct FIntPoint& Resolution);
	void BlueprintSetKeysToDefaults();
	void BlueprintSetGraphicsToDefaults();
	void BlueprintSetGameToDefaults();
	void BlueprintSetFullscreenMode(int InFullscreenMode);
	void BlueprintResetToCurrentSettings();
	void BlueprintResetLocalAppdata();
	bool BlueprintGetVSync();
	struct FIntPoint BlueprintGetScreenResolution();
	void BlueprintGetQualityLevels(int* ResolutionQuality, int* ViewDistanceQuality, int* AntiAliasingQuality, int* OutShadowQuality, int* PostProcessQuality, int* TextureQuality, int* EffectsQuality, int* FoliageQuality, int* ScreenEffects);
	int BlueprintGetFullscreenMode();
	void BlueprintApplySettings(bool bCheckForCommandLineOverrides);
	void BenchmarkGraphicsSettings();
};


// Class Squad.SQGraphInitializerComponent
// 0x0010 (0x0100 - 0x00F0)
class USQGraphInitializerComponent : public UActorComponent
{
public:
	TArray<struct FSQDesignLink>                       DesignOutgoingLinks;                                      // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGraphInitializerComponent");
		return ptr;
	}


	void UpdateDesignLinks();
	void PopulateGraph();
};


// Class Squad.SQGraphAASInitializerComponent
// 0x0000 (0x0100 - 0x0100)
class USQGraphAASInitializerComponent : public USQGraphInitializerComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGraphAASInitializerComponent");
		return ptr;
	}

};


// Class Squad.SQGraphVisualizerComponent
// 0x0010 (0x0100 - 0x00F0)
class USQGraphVisualizerComponent : public UActorComponent
{
public:
	bool                                               bShowDebugInfo;                                           // 0x00F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              DebugNodeRadius;                                          // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DebugNodeHeightOffset;                                    // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DebugLineHeightOffset;                                    // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGraphVisualizerComponent");
		return ptr;
	}


	void UpdateDesignLinks();
	void DrawNode(class USQGraphNodeComponent* Node, const struct FColor& Color);
	void DrawLink(class USQGraphNodeComponent* NodeA, class USQGraphNodeComponent* NodeB);
	void Draw();
};


// Class Squad.SQGraphAASVisualizerComponent
// 0x0000 (0x0100 - 0x0100)
class USQGraphAASVisualizerComponent : public USQGraphVisualizerComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGraphAASVisualizerComponent");
		return ptr;
	}

};


// Class Squad.RouteSelectorPredicate
// 0x0008 (0x0030 - 0x0028)
class URouteSelectorPredicate : public UObject
{
public:
	int                                                NumLinksToChoose;                                         // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.RouteSelectorPredicate");
		return ptr;
	}


	bool Execute(TArray<class USQGraphNodeComponent*>* LinksLeft, TArray<class USQGraphNodeComponent*>* ChosenLinks, struct FRandomStream* RandStream);
};


// Class Squad.RouteSelectorPredicate2
// 0x0000 (0x0030 - 0x0030)
class URouteSelectorPredicate2 : public URouteSelectorPredicate
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.RouteSelectorPredicate2");
		return ptr;
	}

};


// Class Squad.RouteCombinerPredicate
// 0x0000 (0x0028 - 0x0028)
class URouteCombinerPredicate : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.RouteCombinerPredicate");
		return ptr;
	}


	void Execute(TArray<struct FSQRoute2>* NewRoutes, TArray<struct FSQRoute2>* Routes);
};


// Class Squad.RouteCombinerPredicate2
// 0x0000 (0x0028 - 0x0028)
class URouteCombinerPredicate2 : public URouteCombinerPredicate
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.RouteCombinerPredicate2");
		return ptr;
	}

};


// Class Squad.SQGraphRAASInitializerComponent
// 0x0000 (0x0100 - 0x0100)
class USQGraphRAASInitializerComponent : public USQGraphAASInitializerComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGraphRAASInitializerComponent");
		return ptr;
	}

};


// Class Squad.SQGraphRAASVisualizerComponent
// 0x0018 (0x0118 - 0x0100)
class USQGraphRAASVisualizerComponent : public USQGraphAASVisualizerComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0100(0x0010) MISSED OFFSET
	int                                                RouteIndex;                                               // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGraphRAASVisualizerComponent");
		return ptr;
	}


	void UpdateCachedRoutes();
};


// Class Squad.SQGrenade
// 0x00F8 (0x0678 - 0x0580)
class ASQGrenade : public ASQEquipableItem
{
public:
	ESQGrenadeState                                    GrenadeState;                                             // 0x0580(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0581(0x0007) MISSED OFFSET
	struct FSQGrenadeData                              GrenadeConfig;                                            // 0x0588(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x18];                                      // 0x05D0(0x0018) MISSED OFFSET
	class USQGrenadeStaticInfo*                        GrenadeStaticInfo;                                        // 0x05E8(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bCachedOverhandPinpull;                                   // 0x05F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedOverhandThrow;                                     // 0x05F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedUnderhandPinpull;                                  // 0x05F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedUnderhandThrow;                                    // 0x05F3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedReloading;                                         // 0x05F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x05F5(0x0003) MISSED OFFSET
	class UAnimMontage*                                WeaponOverhandPinpull1pMontage;                           // 0x05F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponOverhandPinpull3pMontage;                           // 0x0600(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandPinpull1pMontage;                                 // 0x0608(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandPinpull3pMontage;                                 // 0x0610(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponOverhandThrow1pMontage;                             // 0x0618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponOverhandThrow3pMontage;                             // 0x0620(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandThrow1pMontage;                                   // 0x0628(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandThrow3pMontage;                                   // 0x0630(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandPinpull1pMontage;                          // 0x0638(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandPinpull3pMontage;                          // 0x0640(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandPinpull1pMontage;                                // 0x0648(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandPinpull3pMontage;                                // 0x0650(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandThrow1pMontage;                            // 0x0658(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandThrow3pMontage;                            // 0x0660(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandThrow1pMontage;                                  // 0x0668(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandThrow3pMontage;                                  // 0x0670(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGrenade");
		return ptr;
	}


	void UpdateUnderhandThrow();
	void UpdateUnderhandPinpull();
	void UpdateReloading();
	void UpdateOverhandThrow();
	void UpdateOverhandPinpull();
	void ServerSpawnGrenade(const struct FVector& SpawnLocationZeroBased);
	void ServerReleaseThrow(bool bOverhand);
	void ServerPrepareThrow(bool bOverhand);
	void OnRep_GrenadeState();
	class ASQSoldier* GetOwnerSoldier();
	class USQGrenadeStaticInfo* GetGrenadeStaticInfo();
	struct FVector GetAimLocation();
	struct FRotator GetAimDirection();
	void BlueprintOnGrenadeStateChanged();
};


// Class Squad.SQProjectile
// 0x0238 (0x0568 - 0x0330)
class ASQProjectile : public AActor
{
public:
	class USphereComponent*                            CollisionComp;                                            // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UProjectileMovementComponent*                ProjectileMovement;                                       // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      DamageTypeToApply;                                        // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FHitResult                                  LastImpactHitResult;                                      // 0x0348(0x0088) (BlueprintVisible, IsPlainOldData)
	bool                                               bHasImpacted;                                             // 0x03D0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyOnImpact;                                         // 0x03D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAppliesSuppression;                                      // 0x03D2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x03D3(0x0001) MISSED OFFSET
	float                                              CollisionSize;                                            // 0x03D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2C];                                      // 0x03D8(0x002C) MISSED OFFSET
	bool                                               bIsExplosiveProjectile;                                   // 0x0404(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0405(0x0003) MISSED OFFSET
	float                                              ExplosiveBaseDamage;                                      // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExplosiveMinimumDamage;                                   // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExplosiveKillZoneRadius;                                  // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExplosiveDamageInnerRadius;                               // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExplosiveDamageOuterRadius;                               // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExplosiveDamageFalloff;                                   // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ArmorPenetrationDepthMillimeters;                         // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TraceDistanceAfterPenetrationMeters;                      // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExplosiveDamageDistanceFromImpactNormal;                  // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	class UAudioComponent*                             ProjectileAC;                                             // 0x0430(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bOnlyPlayFlybySoundOnProjectile;                          // 0x0438(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0439(0x0007) MISSED OFFSET
	class USoundCue*                                   FlybySound;                                               // 0x0440(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SuppressionInfoClass;                                     // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<class USQPhysicalMaterial*, struct FSQProjectileImpactEffect> SpecificImpactEffects;                                    // 0x0450(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<class USQPhysicalMaterial*, struct FSQProjectileImpactEffect> SpecificThrowableEffects;                                 // 0x04A0(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<class USQPhysicalMaterial*, struct FSQProjectileImpactEffect> SpecificExplosionEffects;                                 // 0x04F0(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      DefaultEffectsClass;                                      // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x20];                                      // 0x0548(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQProjectile");
		return ptr;
	}


	class UAudioComponent* PlayProjectileSound(class USoundCue* Sound);
	bool PlayExplosionEffect(const struct FHitResult& ImpactHit);
	void OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	class ASQEquipableItem* GetWeapon();
	float GetDamage();
	bool BPApplyExplosiveDamage(const struct FHitResult& LastHitResult, class AActor* DamageCauser, TArray<class AActor*> IgnoreActors);
	void BlueprintOnImpact(const struct FHitResult& HitResult);
};


// Class Squad.SQGrenadeProjectile
// 0x0010 (0x0578 - 0x0568)
class ASQGrenadeProjectile : public ASQProjectile
{
public:
	float                                              MinimumVelocityToPlayThrowableEffects;                    // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FuseTime;                                                 // 0x056C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsExploding;                                             // 0x0570(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExplodeOnFuse;                                           // 0x0571(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExplodeOnLifeSpanExpired;                                // 0x0572(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExplodeOnLifeSpanExpiredAfterImpact;                     // 0x0573(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0574(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGrenadeProjectile");
		return ptr;
	}


	bool PlayThrowableImpactEffect(const struct FHitResult& ImpactHit);
};


// Class Squad.SQGrenadeStaticInfo
// 0x0080 (0x0558 - 0x04D8)
class USQGrenadeStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                WeaponOverhandPinpull1pMontage;                           // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponOverhandPinpull3pMontage;                           // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandPinpull1pMontage;                                 // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandPinpull3pMontage;                                 // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponOverhandThrow1pMontage;                             // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponOverhandThrow3pMontage;                             // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandThrow1pMontage;                                   // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                OverhandThrow3pMontage;                                   // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandPinpull1pMontage;                          // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandPinpull3pMontage;                          // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandPinpull1pMontage;                                // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandPinpull3pMontage;                                // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandThrow1pMontage;                            // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponUnderhandThrow3pMontage;                            // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandThrow1pMontage;                                  // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                UnderhandThrow3pMontage;                                  // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGrenadeStaticInfo");
		return ptr;
	}

};


// Class Squad.SQGridMarkerBase
// 0x0088 (0x0290 - 0x0208)
class USQGridMarkerBase : public USQUserWidget
{
public:
	bool                                               bDrawVerticalNumbers;                                     // 0x0208(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawHorizontalLetters;                                   // 0x0209(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x020A(0x0006) MISSED OFFSET
	struct FSlateFontInfo                              GridMarkerFontInfo;                                       // 0x0210(0x0058) (Edit, BlueprintVisible)
	struct FLinearColor                                GridMarkerFontColor;                                      // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   GridMarkerFontOffset;                                     // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTextHorizontalAlignment                         HorizontalAlignment;                                      // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTextVerticalAlignment                           VerticalAlignment;                                        // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0282(0x0006) MISSED OFFSET
	class USQMap*                                      OwnerMap;                                                 // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGridMarkerBase");
		return ptr;
	}


	void InitWidget();
	void STATIC_DrawWidget(class USQGridMarkerBase* MapGridMarker, struct FPaintContext* Context);
};


// Class Squad.SQGridMarkerUnit
// 0x0018 (0x0220 - 0x0208)
class USQGridMarkerUnit : public USQUserWidget
{
public:
	bool                                               bIsVertical;                                              // 0x0208(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0209(0x0003) MISSED OFFSET
	float                                              DefaultSize;                                              // 0x020C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCanvasPanel*                                SizeCanvas;                                               // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TextBlock;                                                // 0x0218(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGridMarkerUnit");
		return ptr;
	}


	void SetBoxSize(float NewSize);
};


// Class Squad.SQGroundVehicle
// 0x01D0 (0x0AE0 - 0x0910)
class ASQGroundVehicle : public ASQVehicle
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0910(0x0008) MISSED OFFSET
	TArray<struct FSQVehicleEffectConfig>              VehicleEffectsConfig;                                     // 0x0918(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FVector2D                                   WheelFXSound_RPMRate;                                     // 0x0928(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WheelFXSound_LongSlipRate;                                // 0x0930(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WheelFXSound_LatSlipRate;                                 // 0x0938(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEjectOpenSeatsOnHardLanding;                             // 0x0940(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDrawDebugTraces;                                         // 0x0941(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0942(0x0006) MISSED OFFSET
	struct FTimerHandle                                HardLandingCheckTimer;                                    // 0x0948(0x0008) (BlueprintVisible, BlueprintReadOnly)
	struct FTimerHandle                                IsFlyingTimer;                                            // 0x0950(0x0008) (BlueprintVisible, BlueprintReadOnly)
	float                                              IsFlyingUpdateInterval;                                   // 0x0958(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IsHardLandingUpdateInterval;                              // 0x095C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               LandingTraceSockets;                                      // 0x0960(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              LandingTraceLenght;                                       // 0x0970(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsFlying;                                                // 0x0974(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0975(0x0003) MISSED OFFSET
	float                                              LastFlyingZVelocity;                                      // 0x0978(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EjectZVelocityThreshold;                                  // 0x097C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class AActor*>                              LandingCheckActorsToIgnore;                               // 0x0980(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bShouldSimulate;                                          // 0x0990(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0991(0x0007) MISSED OFFSET
	class USoundCue*                                   EngineRPMSound;                                           // 0x0998(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAudioComponent*                             EngineRPMAC;                                              // 0x09A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundCue*                                   EngineExhaustSound;                                       // 0x09A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAudioComponent*                             EngineExhaustStartAC;                                     // 0x09B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineExhaustAC;                                          // 0x09B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineExhaustStopAC;                                      // 0x09C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundCue*                                   EngineStartSound;                                         // 0x09C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAudioComponent*                             EngineStartAC;                                            // 0x09D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundCue*                                   EngineStopSound;                                          // 0x09D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAudioComponent*                             EngineStopAC;                                             // 0x09E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineSpeedAC;                                            // 0x09E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             WheelFXAC;                                                // 0x09F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundCue*                                   LandingSound;                                             // 0x09F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EngineIdleFadeInAfterEngineStartTime;                     // 0x0A00(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EngineIdleFadeOutAfterEngineStopTime;                     // 0x0A04(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpringCompressionLandingThreshold;                        // 0x0A08(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SkidThresholdVelocity;                                    // 0x0A0C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongSlipSkidThreshold;                                    // 0x0A10(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LateralSlipSkidThreshold;                                 // 0x0A14(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystemComponent*                    ExhaustPSC;                                               // 0x0A18(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bTiresTouchingGround;                                     // 0x0A20(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHandbrakeActive;                                         // 0x0A21(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEngineActive;                                          // 0x0A22(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEngineToggleActive;                                    // 0x0A23(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowEngineBoosting;                                     // 0x0A24(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0A25(0x0003) MISSED OFFSET
	float                                              EngineBoostTorqueMultiplier;                              // 0x0A28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasEngineBoostBeenPressed;                               // 0x0A2C(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0A2D(0x0003) MISSED OFFSET
	TArray<struct FSQEngineMovementSoundObject>        EngineMovementSounds;                                     // 0x0A30(0x0010) (Edit, ZeroConstructor)
	float                                              ActivateEngineDelay;                                      // 0x0A40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeActivateEngineDelay;                                    // 0x0A44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x14];                                      // 0x0A48(0x0014) MISSED OFFSET
	float                                              GearChangingAlphaLerpSpeed;                               // 0x0A5C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UWheeledVehicleMovementComponent*            VehicleMovement;                                          // 0x0A60(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               VehicleRagdollOverlap;                                    // 0x0A68(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              RagollOverlapTriggerSpeed;                                // 0x0A70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CollisionKillSpeedKPH;                                    // 0x0A74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCollisionsKillSoldiers;                                  // 0x0A78(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0A79(0x0003) MISSED OFFSET
	float                                              WheelInflationRate;                                       // 0x0A7C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x60];                                      // 0x0A80(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQGroundVehicle");
		return ptr;
	}


	void UpdateIsHardLanding();
	void UpdateIsFlying();
	void ServerVehicleHitSoldier(class ASQSoldier* Soldier);
	void ServerSetEngineToggleActiveInput(bool bInIsEngineToggleActive);
	void ServerSetEngineBoostPressed(bool bInHasEngineBoostBeenPressed);
	void ServerSetEngineActiveInput(bool bNewEngineActive);
	void OnRep_ShouldSimulate();
	void OnRep_EngineToggleActive();
	void OnRep_EngineActive();
	void OnRagdollBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool IsHandbrakeActive();
	bool IsEngineToggleActive();
	bool IsEngineActive();
	float GetForwardSpeed();
	float GetEngineRPM();
	float GetEngineMaxRPM();
	float GetEngineLoad();
	float GetCurrentEngineToggleRequiredDuration();
	float GetCurrentEngineTogglePercentage();
	float GetCurrentEngineToggleElapsedTime();
	void EjectAllOpenSeatPlayers();
};


// Class Squad.SQHelicopter
// 0x0040 (0x0950 - 0x0910)
class ASQHelicopter : public ASQVehicle
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0910(0x0008) MISSED OFFSET
	bool                                               bIsEngineActive;                                          // 0x0918(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEngineToggleActive;                                    // 0x0919(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x091A(0x0002) MISSED OFFSET
	float                                              ActivateEngineDelay;                                      // 0x091C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeActivateEngineDelay;                                    // 0x0920(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0924(0x0004) MISSED OFFSET
	class UBoxComponent*                               BoxCollider;                                              // 0x0928(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            ExternalCamera;                                           // 0x0930(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         SpringArm;                                                // 0x0938(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQFDMComponent*                             FlightModelComponent;                                     // 0x0940(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0948(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHelicopter");
		return ptr;
	}


	void ServerSetEngineToggleActiveInput(bool bInIsEngineToggleActive);
	void ServerSetEngineActiveInput(bool bNewEngineActive);
	void OnRep_EngineToggleActive();
	void OnRep_EngineActive();
	void MoveRudder(float Value);
	void MoveElevator(float Value);
	void MoveCollective(float Value);
	void MoveAileron(float Value);
	void MouseMoveElevator(float Value);
	void MouseMoveAileron(float Value);
	bool IsEngineToggleActive();
	void IncreaseRudder();
	void IncreaseCollective();
	void DecreaseRudder();
	void DecreaseCollective();
};


// Class Squad.SQHelicopter2
// 0x0030 (0x0940 - 0x0910)
class ASQHelicopter2 : public ASQVehicle
{
public:
	class UBoxComponent*                               BoxCollider;                                              // 0x0910(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            ExternalCamera;                                           // 0x0918(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         SpringArm;                                                // 0x0920(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQHelicopterMovementComponent*              MovementComponent;                                        // 0x0928(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQVehicleEngineComponent*                   Engine;                                                   // 0x0930(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0938(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHelicopter2");
		return ptr;
	}


	bool IsLanded();
	float GetThrottle();
	int GetMaxRPM();
};


// Class Squad.SQHelicopterAnimInstance
// 0x0070 (0x03D0 - 0x0360)
class USQHelicopterAnimInstance : public UAnimInstance
{
public:
	int                                                RotorsAmount;                                             // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	TArray<bool>                                       RotorCCW;                                                 // 0x0368(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RotorBlades;                                              // 0x0378(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      RotorYawDegrees;                                          // 0x0388(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      MainRotorBladesIncidence;                                 // 0x0398(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      TailRotorBladesIncidence;                                 // 0x03A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bIsEngineActive;                                          // 0x03B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03B9(0x0007) MISSED OFFSET
	class USQFDMComponent*                             FDMComponent;                                             // 0x03C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHelicopterAnimInstance");
		return ptr;
	}


	float GetElevatorInput();
	float GetAileronInput();
};


// Class Squad.SQHelicopterInstruments
// 0x0000 (0x0028 - 0x0028)
class USQHelicopterInstruments : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHelicopterInstruments");
		return ptr;
	}


	void SetActivationProgress(float Progress);
	bool IsEngineActive();
	float GetYawInput();
	float GetRollInput();
	float GetPitchInput();
	float GetMaxLift();
	float GetLiftInput();
	float GetForwardSpeed();
	float GetActivationProgress();
};


// Class Squad.SQHelicopterMovementComponent
// 0x0088 (0x0258 - 0x01D0)
class USQHelicopterMovementComponent : public USQMovementComponentBase
{
public:
	float                                              BrakingDecelerationFlying;                                // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxFlySpeed;                                              // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAcceleration;                                          // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirFriction;                                              // 0x01DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingFriction;                                          // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingFrictionFactor;                                    // 0x01E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseSeparateBrakingFriction : 1;                          // 0x01E8(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01E9(0x0003) MISSED OFFSET
	float                                              GravityScale;                                             // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Mass;                                                     // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnablePhysicsInteraction : 1;                            // 0x01F4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01F5(0x0003) MISSED OFFSET
	float                                              TouchForceFactor;                                         // 0x01F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinTouchForce;                                            // 0x01FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxTouchForce;                                            // 0x0200(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTouchForceScaledToMass : 1;                              // 0x0204(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0205(0x0003) MISSED OFFSET
	float                                              PenetrationPullbackDistance;                              // 0x0208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PenetrationOverlapCheckInflation;                         // 0x020C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               MoveIgnoreFirstBlockingOverlap;                           // 0x0210(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0211(0x0003) MISSED OFFSET
	float                                              AnalogInputModifier;                                      // 0x0214(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PendingImpulseToApply;                                    // 0x0218(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PendingForceToApply;                                      // 0x0224(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bForceMaxAccel : 1;                                       // 0x0230(0x0001)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	class APawn*                                       PawnOwner;                                                // 0x0238(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	class UPrimitiveComponent*                         UpdatedComponent;                                         // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0248(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHelicopterMovementComponent");
		return ptr;
	}


	void ResetMovementState();
	struct FRotator GetRotationInput();
	float GetMaxBrakingDeceleration();
	float GetMaxAcceleration();
	void CapsuleTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AddRotationInput(const struct FRotator& InRotationInput);
	void AddImpulse(const struct FVector& Impulse, bool bVelocityChange);
	void AddForce(const struct FVector& Force);
};


// Class Squad.SQChatBoxInfo
// 0x0038 (0x0060 - 0x0028)
class USQChatBoxInfo : public UObject
{
public:
	class UFont*                                       Font;                                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQHUDMessage>                       Messages;                                                 // 0x0030(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FVector2D                                   MessageBoxLocation;                                       // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumberOfMessagesToShow;                                // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MessagesLifetime;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MessagesFadeTime;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTextHorizontalAlignment                         MessageHorizontalAlignment;                               // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTextVerticalAlignment                           MessageVerticalAlignment;                                 // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bOutlineMessages;                                         // 0x0056(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bScrollUp;                                                // 0x0057(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TextScale;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQChatBoxInfo");
		return ptr;
	}

};


// Class Squad.SQHUD
// 0x05E8 (0x0A08 - 0x0420)
class ASQHUD : public AHUD
{
public:
	TArray<struct FSQInputState>                       InputStateStack;                                          // 0x0420(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bTraceViewEnabled;                                        // 0x0430(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0431(0x0007) MISSED OFFSET
	class USQVehicleViewWidget*                        VehicleOverlayWidget;                                     // 0x0438(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQBaseHudWidget*                            BaseHudWidget;                                            // 0x0440(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQMapMarker*                                CurrentlyShownHudMarker;                                  // 0x0448(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEndOfRound;                                              // 0x0450(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0451(0x0003) MISSED OFFSET
	float                                              MapTopPadding;                                            // 0x0454(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapRightPadding;                                          // 0x0458(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapBottomPadding;                                         // 0x045C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapMaxWidthRatio;                                         // 0x0460(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MapGridLetterColor;                                       // 0x0464(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SquadToSquadRadioColor;                                   // 0x0474(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SquadToAllSquadsRadioColor;                               // 0x0484(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MapGridLetterPadding;                                     // 0x0494(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapGridLetterScale;                                       // 0x0498(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	TArray<class AActor*>                              LineOfSightDrawTextCache;                                 // 0x04A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	class USQCoreStateSelectionHUB*                    SelectionHUB;                                             // 0x04B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQCoreStateMapComponent*                    MapComponent;                                             // 0x04B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQCoreStateSpawnPointsListComponent*        SpawnPointsListComponent;                                 // 0x04C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQCoreStateSquadListComponent*              SquadListComponent;                                       // 0x04C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQCoreStateRolesSquadListComponent*         RoleSquadListComponent;                                   // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x38];                                      // 0x04D8(0x0038) MISSED OFFSET
	class UTexture2D*                                  HUDMainTexture;                                           // 0x0510(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LowHealthOverlayTexture;                                  // 0x0518(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    CircularProgressTexture;                                  // 0x0520(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    MedicIconTexture;                                         // 0x0528(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    HealedIconTexture;                                        // 0x0530(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    VehicleRepairIconTexture;                                 // 0x0538(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    BleedingIconTexture;                                      // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    ItemCollisionIconTexture;                                 // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   ProgressMaterial;                                         // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFont*                                       BigFont;                                                  // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFont*                                       NormalFont;                                               // 0x0560(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFont*                                       NametagFont;                                              // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFont*                                       ChatMessageFont;                                          // 0x0570(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFont*                                       SystemMessageFont;                                        // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TicketTextColor;                                          // 0x0580(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQRemoteTalkerDisplayInfo>          RemoteTalkers;                                            // 0x0590(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FSQRemoteTalkerDisplayInfo>          TestTalkers;                                              // 0x05A0(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bUseTestTalkers;                                          // 0x05B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQRemoteTalkerDisplayChannel                      OwnerSpeakingState;                                       // 0x05B1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x05B2(0x0006) MISSED OFFSET
	struct FSQMessageBoxInfo                           ChatBoxInfo;                                              // 0x05B8(0x0080) (Edit, BlueprintVisible)
	struct FSQMessageBoxInfo                           SystemMessageBoxInfo;                                     // 0x0638(0x0080) (Edit, BlueprintVisible)
	struct FSQMessageBoxInfo                           GameNotificationBoxInfo;                                  // 0x06B8(0x0080) (Edit, BlueprintVisible)
	struct FSQMessageBoxInfo                           PlayerNotificationBoxInfo;                                // 0x0738(0x0080) (Edit, BlueprintVisible)
	struct FLinearColor                                SystemMessagesColor;                                      // 0x07B8(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x07C8(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData06 : 1;                                        // 0x07CC(0x0001)
	unsigned char                                      bShouldOffsetSpawnText : 1;                               // 0x07CC(0x0001) (BlueprintVisible)
	unsigned char                                      bShouldShowEnemyFobWidgets : 1;                           // 0x07CC(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      UnknownData07[0x3];                                       // 0x07CD(0x0003) MISSED OFFSET
	int                                                StartingMapZoomLevel;                                     // 0x07D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x07D4(0x0004) MISSED OFFSET
	TArray<float>                                      MapZoomLevels;                                            // 0x07D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData09[0x30];                                      // 0x07E8(0x0030) MISSED OFFSET
	class USQScoreboard*                               ScoreBoard;                                               // 0x0818(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQDrawChatWidget*                           ChatDrawingWidget;                                        // 0x0820(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData10[0x10];                                      // 0x0828(0x0010) MISSED OFFSET
	float                                              NametagDistantVisibilityDropoffStart;                     // 0x0838(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              NametagDistantVisibilityDropoffFinish;                    // 0x083C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              NametagDistantVisibilitySize;                             // 0x0840(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              NametagNearVerticalOffset;                                // 0x0844(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NametagFarVerticalOffset;                                 // 0x0848(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NametagNearVerticalInterpStart;                           // 0x084C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NametagFadingInterpStart;                                 // 0x0850(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UsableDistantVisibilityDropoffStart;                      // 0x0854(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              UsableDistantVisibilityDropoffFinish;                     // 0x0858(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              UsableDistantVisibilitySize;                              // 0x085C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              UsableNearVerticalOffset;                                 // 0x0860(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UsableFarVerticalOffset;                                  // 0x0864(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UsableNearVerticalInterpStart;                            // 0x0868(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UsableFadingInterpStart;                                  // 0x086C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                EnemyColor;                                               // 0x0870(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TeamColor;                                                // 0x0880(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SquadColor;                                               // 0x0890(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FireTeamColor;                                            // 0x08A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                NametagOutlineColor;                                      // 0x08B0(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceToShowHUDIcons;                                // 0x08C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceToShowWoundedHUDIcons;                         // 0x08C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HUDIconOffset;                                            // 0x08C8(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HUDIconCrouchedOffset;                                    // 0x08D4(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HUDIconProneOffset;                                       // 0x08E0(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HUDIconWoundedOffset;                                     // 0x08EC(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HUDIconFarSize;                                           // 0x08F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HUDIconNearSize;                                          // 0x08FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HealedIconOffset;                                         // 0x0900(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HealedIconSize;                                           // 0x0908(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ItemCollisionIconOffset;                                  // 0x0910(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ItemCollisionIconSize;                                    // 0x0918(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxTimeSinceLastHealedToDrawHealedIcon;                   // 0x0920(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxTimeSinceLastRepairedToDrawRepairedIcon;               // 0x0924(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveLinearColor*                           HealthColorCurve;                                         // 0x0928(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHudWidgetsEnabled;                                       // 0x0930(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x17];                                      // 0x0931(0x0017) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnChatReceived;                                           // 0x0948(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USoundBase*                                  CommandVoiceStartingSound;                                // 0x0958(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  CommandVoiceEndingSound;                                  // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SquadVoiceStartingSound;                                  // 0x0968(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SquadVoiceEndingSound;                                    // 0x0970(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0978(0x0008) MISSED OFFSET
	struct FSQLedColorScheme                           LedColorScheme;                                           // 0x0980(0x0078) (Edit)
	class USQColorsDataAsset*                          ColorsDataAsset;                                          // 0x09F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UEnum*                                       ChatEnumObj;                                              // 0x0A00(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHUD");
		return ptr;
	}


	void VehicleResetZoom();
	void VehicleRemoveOverlay(class UClass* WidgetClass);
	void VehicleIncreaseZoomOverlay();
	void VehicleDecreaseZoomOverlay();
	void VehicleCreateOverlay(class UClass* WidgetClass);
	void TraceViewToggle();
	void ToggleScoreboard();
	void ShowScoreboard(bool bEnable);
	bool ShouldOffsetSpawnText();
	void SettingsChangedHandler(class USQGameUserSettings* Settings);
	void SetHudWidgetsEnabled(bool bValue);
	void RemoveLineOfSightActor(class AActor* Actor);
	struct FSQInputState RemoveInputStackState(const struct FSQInputState& OldState);
	void OnReceiveChatEvent__DelegateSignature(const struct FString& PlayerName, const struct FString& Message, ESQChat Channel, const struct FLinearColor& Color, ESQNotificationTypes NotificationType);
	bool IsScoreboardVisible();
	float IncrementMapZoomLevel(float CurrentMapZoom, int Amount, bool bLoop);
	bool HudWidgetsEnabled();
	void HideAmmoBagOverlay(class ASQDeployableAmmoBag* ammobag);
	struct FLinearColor GetTeamColor();
	struct FLinearColor GetTeamBasedColor(ESQTeam InTeam);
	struct FLinearColor GetSystemMessagesColor();
	float GetStartingMapZoom();
	struct FLinearColor GetSquadColor();
	float GetScaleUI();
	TArray<struct FSQRemoteTalkerDisplayInfo> GetRemoteTalkers();
	ESQRemoteTalkerDisplayChannel GetOwnerSpeakerState();
	struct FLinearColor GetOtherPlayerColor(class ASQPlayerState* OtherPlayer);
	bool GetMouseScreenSpacePosition(struct FIntPoint* OutPosition);
	struct FLinearColor GetFireTeamColor();
	struct FLinearColor GetEnemyColor();
	class UCanvas* GetCanvas();
	void DrawSystemMessages(float PosX, float PosY);
	float DrawString(int Index, const struct FString& Text, float PosX, float PosY, const struct FLinearColor& Color, const struct FSQMessageBoxInfo& Info, ESQTextHorizontalAlignment HorizontalAlignment, ESQTextVerticalAlignment VerticalAlignment);
	void DrawChatMessages(float PosX, float PosY, struct FSQMessageBoxInfo* ChatBox);
	void DisplayAmmoBagOverlay(class ASQDeployableAmmoBag* ammobag, bool bCanPickup);
	void ConditionalCloseScoreboard();
	void BPOnUsableVisible(class AActor* Actor, bool bIsVisible);
	void BPOnSetHudWidgetsEnabled(bool bEnabled);
	void BlueprintNotifyHit(float DamageTaken, const struct FDamageEvent& DamageEvent, class APawn* PawnInstigator);
	void AddSystemMessage(const struct FString& Message, const struct FLinearColor& Color, float MessageLifetimeOverride, ESQNotificationTypes NotificationType);
	void AddLineOfSightActor(class AActor* Actor);
	struct FSQInputState AddInputStackState(const struct FSQInputState& NewState);
	void AddChatMessageDefaultColor(class ASQPlayerState* Player, const struct FString& Message, ESQChat Channel, float MessageLifetimeOverride, ESQNotificationTypes NotificationType);
	void AddChatMessage(class ASQPlayerState* Player, const struct FString& Message, ESQChat Channel, const struct FLinearColor& Color, float MessageLifetimeOverride, ESQNotificationTypes NotificationType);
};


// Class Squad.SQHUDWidget
// 0x00A8 (0x00D0 - 0x0028)
class USQHUDWidget : public UObject
{
public:
	class UClass*                                      UMGWidget;                                                // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Position;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   OffsetPosition;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WidgetOrigin;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZOrder;                                                   // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScreenNormalizedCoordinates;                          // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bBypassResolutionScaling;                                 // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0056(0x0002) MISSED OFFSET
	float                                              DesignedResolution;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMaintainOriginalAspectRatio;                             // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              Alpha;                                                    // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHidden;                                                  // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	class ASQGameState*                                GameState;                                                // 0x0068(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQHUD*                                      HUD;                                                      // 0x0070(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerController*                         PlayerController;                                         // 0x0078(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              PlayerState;                                              // 0x0080(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQSoldier*                                  Soldier;                                                  // 0x0088(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCanvas*                                     Canvas;                                                   // 0x0090(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultTexture;                                           // 0x0098(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GradientTexture0;                                         // 0x00A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CanvasCenter;                                             // 0x00A8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CanvasSize;                                               // 0x00B0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DrawingPosition;                                          // 0x00B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DrawingSize;                                              // 0x00C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DrawingScale;                                             // 0x00C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQHUDWidget");
		return ptr;
	}


	void Init(class ASQHUD* InHUD);
	void Draw(float DeltaTime);
	bool CanDraw();
	void BPDrawTexture(class UTexture* Texture, float X, float Y, float Width, float Height, float U, float V, float UL, float VL, float DrawingAlpha, const struct FLinearColor& Color, const struct FVector2D& DrawingOffset, float Rotation, const struct FVector2D& RotationPivotPoint, bool bIsMask);
	struct FVector2D BPDrawText(const struct FText& Text, float X, float Y, class UFont* Font, const struct FFontRenderInfo& FontRenderInfo, const struct FLinearColor& Color, float TextScale, float DrawingAlpha, ESQTextHorizontalAlignment HorizontalAlignment, ESQTextVerticalAlignment VerticalAlignment, bool bDrawShadow, const struct FVector2D& ShadowDirection, const struct FLinearColor& ShadowColor, bool bDrawOutline, const struct FLinearColor& OutlineColor);
	void BPDrawSpriteTexture(class UTexture* Texture, float X, float Y, float Width, float Height, float TextureX, float TextureY, float TextureXL, float TextureYL, float DrawingAlpha, const struct FLinearColor& Color, const struct FVector2D& DrawingOffset, float Rotation, const struct FVector2D& RotationPivotPoint, bool bIsMask);
	void BPDrawMaterial(class UMaterialInterface* Material, float X, float Y, float Width, float Height, float U, float V, float UL, float VL, float DrawingAlpha, const struct FLinearColor& Color, const struct FVector2D& DrawingOffset, float Rotation, const struct FVector2D& RotationPivotPoint);
};


// Class Squad.SQInfantryWeapon
// 0x00A0 (0x08E8 - 0x0848)
class ASQInfantryWeapon : public ASQWeapon
{
public:
	struct FSQSpringInterpStruct3D                     WeaponSpring;                                             // 0x0848(0x0030) (Edit, BlueprintVisible)
	struct FVector                                     WeaponSpringFactor;                                       // 0x0878(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponSpringRotationPivot;                                // 0x0884(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    WeaponSpringRotationFactor;                               // 0x0890(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    WeaponSpringLastRotation;                                 // 0x089C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CachedSpringPos;                                          // 0x08A8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CachedSpringRot;                                          // 0x08B4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponOffset;                                             // 0x08C0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x08CC(0x0004) MISSED OFFSET
	class USQSoldierAnimInstance*                      NativeAnimInstance;                                       // 0x08D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialParameterCollection*                AdsScopeFovParameterCollection;                           // 0x08D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AdsScopeFovParameterName;                                 // 0x08E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInfantryWeapon");
		return ptr;
	}


	struct FVector GetSwayVector();
	class ASQSoldier* GetOwnerSoldier();
	bool BlueprintIsAnimationSystemValid();
};


// Class Squad.SQInputComponent
// 0x0010 (0x0188 - 0x0178)
class USQInputComponent : public UInputComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0178(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInputComponent");
		return ptr;
	}

};


// Class Squad.SQInstancedStaticMeshActor
// 0x0008 (0x0338 - 0x0330)
class ASQInstancedStaticMeshActor : public AActor
{
public:
	class UInstancedStaticMeshComponent*               InstancedStaticMeshComponent;                             // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInstancedStaticMeshActor");
		return ptr;
	}

};


// Class Squad.SQObjectiveRuleset
// 0x0090 (0x0420 - 0x0390)
class ASQObjectiveRuleset : public ASQGameModeRuleset
{
public:
	int                                                NumberOfObjectives;                                       // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumberOfObjectivesShownAtSameTime;                     // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TicketsGainedUponMeetingObjective;                        // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TicketsLostUponLosingObjective;                           // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      KnownAttackObjectiveMarkerClass;                          // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      KnownDefendObjectiveMarkerClass;                          // 0x03A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      UnknownDefendObjectiveMarkerClass;                        // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SatisfiedObjectiveMarkerClass;                            // 0x03B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinObjectiveDistance;                                     // 0x03C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyCheckMinDistanceAgainstActiveObjectives;             // 0x03C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomlyPickObjectiveIfAllFailDistanceCheck;             // 0x03C5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x03C6(0x0002) MISSED OFFSET
	TArray<class ASQMapMarker*>                        Markers;                                                  // 0x03C8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FTransform>                          AllAvailableObjectiveLocations;                           // 0x03D8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FTransform>                          FilteredObjectiveLocations;                               // 0x03E8(0x0010) (ZeroConstructor, Transient)
	TArray<class ASQObjective*>                        Objectives;                                               // 0x03F8(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      ObjectiveType;                                            // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeSinceLastObjectiveSpawn;                              // 0x0410(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideObjectiveSpawning;                               // 0x0414(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGenerateMarkersForTeamOneUponObjectiveSpawn;             // 0x0415(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGenerateMarkersForTeamTwoUponObjectiveSpawn;             // 0x0416(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTeam                                            WinningTeamUponAllObjectivesCompleted;                    // 0x0417(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTeam                                            WinningTeamUponTimerExpired;                              // 0x0418(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTeam                                            WinningTeamIfTeamOneHasNoTickets;                         // 0x0419(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTeam                                            WinningTeamIfTeamTwoHasNoTickets;                         // 0x041A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x041B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQObjectiveRuleset");
		return ptr;
	}


	void ShowNewObjectivesFromTimer();
	TArray<class ASQObjective*> ShowNewObjectives();
	bool RandomlySelectUnusedObjectiveLocation(struct FTransform* OutTransform);
	bool RandomlySelectDistantUnusedObjectiveLocation(struct FTransform* OutTransform);
	void OnObjectiveShown(class ASQObjective* ObjectiveShown);
	void OnObjectiveMet(class ASQObjective* ObjectiveMet);
	void GenerateMarkersForTeam(ESQTeam Team);
	void DelayShowNewObjectives(float InDelay);
	void ClearAndGenerateMarkersForTeamTwo();
	void ClearAndGenerateMarkersForTeamOne();
	void ClearAndGenerateMarkersForTeam(ESQTeam Team);
};


// Class Squad.SQInsurgencyRuleset
// 0x0050 (0x0470 - 0x0420)
class ASQInsurgencyRuleset : public ASQObjectiveRuleset
{
public:
	int                                                IntelligencePoints;                                       // 0x0420(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTeam                                            CoalitionTeam;                                            // 0x0424(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	ESQTeam                                            InsurgentTeam;                                            // 0x0425(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0426(0x0002) MISSED OFFSET
	int                                                MaxNumberOfFirstCachesToShowCoalition;                    // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TimeDelayToShowFirstCache;                                // 0x042C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TimeDelayToShowNextCache;                                 // 0x0434(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TimeDelayToNotifyCoalitionOfFirstCaches;                  // 0x043C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TimeDelayToNotifyCoalitionOfCache;                        // 0x0444(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                IntelligencePointsPerInsurgentKilled;                     // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                IntelligencePointsPerInsurgentArrested;                   // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                IntelligencePointsPerCivilianKilled;                      // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQPlayerLimiter>                    IntelligencePointsRequiredToShowCache;                    // 0x0458(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class USQRoleSettings*                             CivilianRole;                                             // 0x0468(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInsurgencyRuleset");
		return ptr;
	}


	void NotifyCoalitionOfSingleCache();
	void NotifyCoalitionOfCaches(TArray<class ASQObjective*> NewCaches);
	int GetNumberOfPlayersOnServer();
	void CheckIntelligencePoints();
};


// Class Squad.SQInteractableWidgetItem
// 0x0000 (0x0208 - 0x0208)
class USQInteractableWidgetItem : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInteractableWidgetItem");
		return ptr;
	}

};


// Class Squad.SQInteractableWidgetList
// 0x0000 (0x0208 - 0x0208)
class USQInteractableWidgetList : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInteractableWidgetList");
		return ptr;
	}

};


// Class Squad.SQInventoryGroupWidget
// 0x0058 (0x0260 - 0x0208)
class USQInventoryGroupWidget : public USQUserWidget
{
public:
	TArray<class USQInventoryItemWidget*>              ItemsArray;                                               // 0x0208(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	class UCanvasPanel*                                UnselectedGroupPanel;                                     // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              ItemWidgetsHorizontalBox;                                 // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      UnselectedImage;                                          // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  GroupNumber;                                              // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      GroupImage;                                               // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ItemNameTextBlock;                                        // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FText                                       GroupName;                                                // 0x0248(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInventoryGroupWidget");
		return ptr;
	}


	void UpdateState();
	void InitWidget();
};


// Class Squad.SQInventoryInterface
// 0x0000 (0x0028 - 0x0028)
class USQInventoryInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInventoryInterface");
		return ptr;
	}

};


// Class Squad.SQInventoryItemWidget
// 0x0020 (0x0228 - 0x0208)
class USQInventoryItemWidget : public USQUserWidget
{
public:
	class UImage*                                      ItemImage;                                                // 0x0208(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQEquipableItem*                            CurrentItem;                                              // 0x0210(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTextBlock*                                  MagTextBlock;                                             // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      BackgroundImage;                                          // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInventoryItemWidget");
		return ptr;
	}


	void UpdateState();
	void InitWidget();
};


// Class Squad.SQInventoryWidget
// 0x0048 (0x0250 - 0x0208)
class USQInventoryWidget : public USQUserWidget
{
public:
	TArray<class USQInventoryGroupWidget*>             GroupsArray;                                              // 0x0208(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	class ASQPlayerController*                         OwningController;                                         // 0x0218(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQPawnInventoryComponent*                   RenderedInventory;                                        // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0228(0x000C) MISSED OFFSET
	float                                              MaxTranslucencyAlpha;                                     // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemSelectedAlpha;                                        // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemUnselectedAlpha;                                      // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeoutDuration;                                          // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeoutDelay;                                             // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ItemScrollSound;                                          // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQInventoryWidget");
		return ptr;
	}


	void UpdateInventoryWidgets();
	void UpdateElements();
	void SetupInventoryWidgets();
	void InitWidget();
};


// Class Squad.SQItemAnimInstance
// 0x0010 (0x0390 - 0x0380)
class USQItemAnimInstance : public USQAnimInstance
{
public:
	bool                                               bPlay1PAnimNotifiesWhenInFirstPerson;                     // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlay3PAnimNotifiesWhenInFirstPerson;                     // 0x0381(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x0382(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQItemAnimInstance");
		return ptr;
	}

};


// Class Squad.SQJoinBeaconClient
// 0x0028 (0x03D0 - 0x03A8)
class ASQJoinBeaconClient : public AOnlineBeaconClient
{
public:
	int                                                PlayerCount;                                              // 0x03A8(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                QueuePosition;                                            // 0x03AC(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                ReservedQueueCount;                                       // 0x03B0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                PublicQueueCount;                                         // 0x03B4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsReservedMember;                                        // 0x03B8(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHasReplicated;                                           // 0x03B9(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x03BA(0x0006) MISSED OFFSET
	class USQServerListItemWidget*                     ServerWidget;                                             // 0x03C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	double                                             SecondsToKeepAttemptingReconnect;                         // 0x03C8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQJoinBeaconClient");
		return ptr;
	}


	void RequestClientJoin();
	void LeaveQueue();
	void InitConnection(const struct FString& ServerURL);
	void HostTravelRequestReconnect(int TimeLeftInMatch, float SecondsPerRetry);
};


// Class Squad.SQJoinBeaconHost
// 0x0048 (0x03A0 - 0x0358)
class ASQJoinBeaconHost : public AOnlineBeaconHostObject
{
public:
	TArray<struct FSQServerSlot>                       PublicQueue;                                              // 0x0358(0x0010) (ZeroConstructor)
	TArray<struct FSQServerSlot>                       ReservedQueue;                                            // 0x0368(0x0010) (ZeroConstructor)
	TArray<struct FSQServerSlot>                       JoiningServerSlots;                                       // 0x0378(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0388(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQJoinBeaconHost");
		return ptr;
	}

};


// Class Squad.SQJoinBeaconState
// 0x0030 (0x0058 - 0x0028)
class USQJoinBeaconState : public UObject
{
public:
	TArray<struct FSQServerSlot>                       PublicQueue;                                              // 0x0028(0x0010) (ZeroConstructor)
	TArray<struct FSQServerSlot>                       ReservedQueue;                                            // 0x0038(0x0010) (ZeroConstructor)
	TArray<struct FSQServerSlot>                       JoiningServerSlots;                                       // 0x0048(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQJoinBeaconState");
		return ptr;
	}

};


// Class Squad.SQJoinSessionCallbackProxy
// 0x0100 (0x0128 - 0x0028)
class USQJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0048(0x00D8) MISSED OFFSET
	class UObject*                                     WorldContextObject;                                       // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQJoinSessionCallbackProxy");
		return ptr;
	}


	class USQJoinSessionCallbackProxy* STATIC_JoinSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FBlueprintSessionResult& SearchResult);
	bool STATIC_IsServerModded(const struct FBlueprintSessionResult& SearchResult, bool* bIsWhitelisted);
};


// Class Squad.SQKickBanComponent
// 0x0000 (0x00F0 - 0x00F0)
class USQKickBanComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQKickBanComponent");
		return ptr;
	}


	void KickPlayer(class ASQPlayerController* ToKickPC, const struct FString& KickReason);
	void BanPlayer(class ASQPlayerController* ToBanPC, int BanSeconds, const struct FString& BanReason);
};


// Class Squad.SQKillDeathRuleset
// 0x0108 (0x0460 - 0x0358)
class ASQKillDeathRuleset : public ASQGameRuleSet
{
public:
	struct FSQKillDeathSettings                        TeamOneSettings;                                          // 0x0358(0x0050) (Edit, BlueprintVisible)
	struct FSQKillDeathSettings                        TeamTwoSettings;                                          // 0x03A8(0x0050) (Edit, BlueprintVisible)
	float                                              SpawnDelayPenaltyForSuicide;                              // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpawnDelayPenaltyForTeamKill;                             // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQHealSettings                             TeamOneHealSettings;                                      // 0x0400(0x0024) (Edit, BlueprintVisible)
	struct FSQHealSettings                             TeamTwoHealSettings;                                      // 0x0424(0x0024) (Edit, BlueprintVisible)
	int                                                TeamkillsBeforeKick;                                      // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultPointsForVehicleDestroy;                           // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDefaultShouldDelayScoreForVehicleDestroy;                // 0x0450(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0451(0x0003) MISSED OFFSET
	int                                                DefaultTicketsLostForVehicleDestroy;                      // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTKAutoKickEnabled;                                       // 0x0458(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0459(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQKillDeathRuleset");
		return ptr;
	}

};


// Class Squad.SQLastingEffect
// 0x0058 (0x0388 - 0x0330)
class ASQLastingEffect : public AActor
{
public:
	class UParticleSystemComponent*                    ParticleSystem;                                           // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             Audio;                                                    // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      ShockwaveEffect;                                          // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToFireTriggerLastingEffectEventAfterBeginPlay;        // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToLiveAfterBeginPlay;                                 // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToLiveAfterTriggerLastingEffect;                      // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bListenForOnActorHitEvents;                               // 0x0354(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bListenForOnDestroyedEvents;                              // 0x0355(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateParticleSystemUponBeginPlay;                     // 0x0356(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateParticleSystemUponTriggerLastingEffect;          // 0x0357(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateAudioUponBeginPlay;                              // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateAudioUponTriggerLastingEffect;                   // 0x0359(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateShockwaveUponBeginPlay;                          // 0x035A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateShockwaveUponTriggerLastingEffect;               // 0x035B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDetachFromActorUponTriggerLastingEffect;                 // 0x035C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired;// 0x035D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDeactivateAudioUponTriggerLastingEffectTimerExpired;     // 0x035E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyUponTriggerLastingEffectTimerExpired;             // 0x035F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebugSphere;                                         // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	float                                              DebugSphereRadius;                                        // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DebugSphereSegments;                                      // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      DebugSphereColor;                                         // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0370(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQLastingEffect");
		return ptr;
	}


	void OnTriggerLastingEffectTimerExpired();
	void OnTriggerLastingEffectEvent();
	void OnDestroyedEvent(class AActor* DestroyedActor);
	void OnBeginPlayTimerExpired();
	void OnActorHitEvent(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Deactivate();
	void Activate();
};


// Class Squad.SQLicensedServerManager
// 0x00C8 (0x01B8 - 0x00F0)
class USQLicensedServerManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0xC8];                                      // 0x00F0(0x00C8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQLicensedServerManager");
		return ptr;
	}

};


// Class Squad.SQLocalPlayer
// 0x0020 (0x01E8 - 0x01C8)
class USQLocalPlayer : public ULocalPlayer
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x01C8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQLocalPlayer");
		return ptr;
	}

};


// Class Squad.SQLockButtonWidget
// 0x0000 (0x0208 - 0x0208)
class USQLockButtonWidget : public USQUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQLockButtonWidget");
		return ptr;
	}


	void OnPressed();
};


// Class Squad.SQLoginCallbackProxy
// 0x0068 (0x0090 - 0x0028)
class USQLoginCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0048(0x0040) MISSED OFFSET
	class UObject*                                     WorldContextObject;                                       // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQLoginCallbackProxy");
		return ptr;
	}


	class USQLoginCallbackProxy* STATIC_Login(class UObject* InWorldContextObject, class APlayerController* InPlayerController, const struct FString& InLoginName, const struct FString& InPassword);
	struct FString STATIC_GetLoginResult(const struct FSQBlueprintLoginResult& Result);
};


// Class Squad.SQLogisticsRuleSet
// 0x0010 (0x0368 - 0x0358)
class ASQLogisticsRuleSet : public ASQGameRuleSet
{
public:
	struct FSQLogisticsSettings                        RuleSettings;                                             // 0x0358(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQLogisticsRuleSet");
		return ptr;
	}

};


// Class Squad.SQMagazineGroupWidget
// 0x0010 (0x0218 - 0x0208)
class USQMagazineGroupWidget : public USQUserWidget
{
public:
	TArray<class USQMagazineWidget*>                   MagazineWidgets;                                          // 0x0208(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMagazineGroupWidget");
		return ptr;
	}


	void InitWidget();
};


// Class Squad.SQMagazineWidget
// 0x0010 (0x0218 - 0x0208)
class USQMagazineWidget : public USQUserWidget
{
public:
	class UImage*                                      SelectedImage;                                            // 0x0208(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      AmmoImage;                                                // 0x0210(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMagazineWidget");
		return ptr;
	}


	void InitWidget();
};


// Class Squad.SQMap
// 0x0090 (0x0298 - 0x0208)
class USQMap : public USQUserWidget
{
public:
	float                                              PositionUpdateRate;                                       // 0x0208(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PositionUpdateTimer;                                      // 0x020C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMapFollowing;                                          // 0x0210(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMapFollowToggle;                                         // 0x0211(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMapFollowPlayerOnByDefault;                              // 0x0212(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0213(0x0001) MISSED OFFSET
	struct FVector2D                                   MapCurrentCoord;                                          // 0x0214(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MapCenterCoord;                                           // 0x021C(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRunCameraPP;                                             // 0x0224(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRunCameraPPForward;                                      // 0x0225(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0226(0x0002) MISSED OFFSET
	float                                              PPBlendMultiplier;                                        // 0x0228(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PPBlendValue;                                             // 0x022C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PPBlendFarDistance;                                       // 0x0230(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapDrawX;                                                 // 0x0234(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapDrawY;                                                 // 0x0238(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapWidth;                                                 // 0x023C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MapHeight;                                                // 0x0240(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WorldTR;                                                  // 0x0244(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WorldBL;                                                  // 0x024C(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MajorGridSpacing;                                         // 0x0254(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MapLastClickPosition;                                     // 0x0258(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LastMapZoomPos;                                           // 0x0260(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MapZoomLevels;                                            // 0x0268(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              ZoomFloatCurrent;                                         // 0x0278(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZoomStep;                                                 // 0x027C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZoomStepMax;                                              // 0x0280(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZoomStepMin;                                              // 0x0284(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZoomAlpha;                                                // 0x0288(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsZooming;                                               // 0x028C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMapIsClosing;                                            // 0x028D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMapIsOpening;                                            // 0x028E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSpawnScreen;                                           // 0x028F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMapOn;                                                 // 0x0290(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0291(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMap");
		return ptr;
	}


	void ZoomSwitch();
	void UpdateTickZoom(float DeltaTime, struct FVector2D* MapCoords);
	struct FVector2D TranslateWorldToMapZoom(const struct FVector& InWorldCoords, bool* OutbIsInRange);
	struct FVector2D TranslateWorldToMapAnchorsDirect(const struct FVector& InWorldCoords);
	struct FVector TranslateMapToWorldRayTrace(const struct FVector2D& InCoords);
	struct FVector TranslateMapToWorld(const struct FVector2D& InCoords);
	struct FVector2D TranslateMapPathBorderClamp(const struct FVector2D& InCoords, bool* OutbIsClamped);
	struct FVector2D TranslateMapCoordsIsInRange(const struct FVector2D& InCoords, bool* OutbIsInRange);
	struct FVector2D TranslateMapCoords(const struct FVector2D& InCoords);
	struct FVector2D TranslateInverseMapCoords(const struct FVector2D& InCoords);
	void SetWorldCoords();
	bool IsSquadLeader();
	bool IsInCameraMan(class ASQPlayerController* SQPlayerController);
	struct FVector2D IsCursorOverMapPos(bool* OutbIsOverMap);
	struct FText GetMapDisplayName();
	float GetMajorGridSpacingInCM();
	struct FVector2D GetCursorPos();
	struct FVector2D GetCursorNormalizedPos();
	int GetCurrentTeam();
	void CalculatePathDistanceAndAngle(const struct FVector2D& PointStart, const struct FVector2D& PointEnd, float* distance, float* Angle);
};


// Class Squad.SQMapBoundarySettings
// 0x0058 (0x0088 - 0x0030)
class USQMapBoundarySettings : public UDataAsset
{
public:
	float                                              DefaultKillTime;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TMap<class UClass*, float>                         ClassKillTimes;                                           // 0x0038(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapBoundarySettings");
		return ptr;
	}

};


// Class Squad.SQMapBoundary
// 0x0060 (0x0450 - 0x03F0)
class ASQMapBoundary : public ASQBoundary
{
public:
	class USQMapBoundarySettings*                      CommonSettings;                                           // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideDefaultKillTime;                                 // 0x03F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03F9(0x0003) MISSED OFFSET
	float                                              DefaultKillTime;                                          // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<class UClass*, float>                         ClassKillTimes;                                           // 0x0400(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapBoundary");
		return ptr;
	}


	float FindKillTime(class UClass* Class);
	float CalcKillTimestamp(class UClass* Class);
};


// Class Squad.SQMapGrid
// 0x00F0 (0x02F8 - 0x0208)
class USQMapGrid : public USQUserWidget
{
public:
	struct FLinearColor                                MajorGridColor;                                           // 0x0208(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MinorGridColor;                                           // 0x0218(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TinyGridColor;                                            // 0x0228(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MajorGridOpacityCurve;                                    // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MinorGridOpacityCurve;                                    // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TinyGridOpacityCurve;                                     // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MajorGridWidth;                                           // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MinorGridWidth;                                           // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TinyGridWidth;                                            // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LegendPercentageLocation;                                 // 0x025C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LegendTextOffset;                                         // 0x0264(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxLegendPercentageSize;                                  // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSlateFontInfo                              LegendScaleFontInfo;                                      // 0x0270(0x0058) (Edit, BlueprintVisible)
	class USQMap*                                      OwnerMap;                                                 // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bDrawGridMarkers;                                         // 0x02D0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02D1(0x0003) MISSED OFFSET
	struct FVector2D                                   RealMapSize;                                              // 0x02D4(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RealToPixel;                                              // 0x02DC(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PixelSize;                                                // 0x02E4(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LinesNeeded;                                              // 0x02EC(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapGrid");
		return ptr;
	}


	void InitWidget();
	void STATIC_DrawWidget(class USQMapGrid* MapGrid, struct FPaintContext* Context);
	void STATIC_DrawLegendLine(class USQMapGrid* MapGrid, const struct FVector2D& StepSize, const struct FLinearColor& Color, float Width, const struct FText& LegendText, float YOffset, struct FPaintContext* Context);
	void STATIC_DrawGridMarkers(class USQMapGrid* MapGrid, const struct FVector2D& Offset, const struct FVector2D& StepSize, const struct FVector2D& GridLinesNeeded, const struct FLinearColor& Color, struct FPaintContext* Context);
	void STATIC_DrawGrid(class USQMapGrid* MapGrid, const struct FVector2D& Offset, const struct FVector2D& StepSize, const struct FVector2D& GridLinesNeeded, int SkipNumber, const struct FLinearColor& Color, float Width, struct FPaintContext* Context);
};


// Class Squad.SQMapItemComponent
// 0x0058 (0x0148 - 0x00F0)
class USQMapItemComponent : public UActorComponent
{
public:
	struct FLinearColor                                Tint;                                                     // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CustomWorldPosition;                                      // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomWorldPosition;                                  // 0x0108(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWorldRotation;                                        // 0x0109(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x010A(0x0002) MISSED OFFSET
	float                                              Rotation;                                                 // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RotPivot;                                                 // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Offset;                                                   // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQMapItemDrawMode                                 DrawModeX;                                                // 0x0128(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQMapItemDrawMode                                 DrawModeY;                                                // 0x0129(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsVisible;                                               // 0x012A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x012B(0x0001) MISSED OFFSET
	int                                                TeamIndex;                                                // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SquadId;                                                  // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQMapMarkerType                                   MapMarkerType;                                            // 0x0134(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQMapMarkerVisibleTo                              MapMarkerVisibleTo;                                       // 0x0135(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQMapItemType                                     Type;                                                     // 0x0136(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0137(0x0001) MISSED OFFSET
	class UClass*                                      CustomMapWidget;                                          // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0140(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapItemComponent");
		return ptr;
	}

};


// Class Squad.SQMapIconComponent
// 0x0058 (0x01A0 - 0x0148)
class USQMapIconComponent : public USQMapItemComponent
{
public:
	class UTexture*                                    Texture;                                                  // 0x0148(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQMapIconSelectionGroup                           SelectionGroup;                                           // 0x0150(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UTexture*                                    SelectedTexture;                                          // 0x0158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SelectedTint;                                             // 0x0160(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0170(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapIconComponent");
		return ptr;
	}

};


// Class Squad.SQMapIconWidget
// 0x0020 (0x0228 - 0x0208)
class USQMapIconWidget : public UUserWidget
{
public:
	class USQMapItemComponent*                         RefItem;                                                  // 0x0208(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                MapZOrder;                                                // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	class UClass*                                      TooltipType;                                              // 0x0218(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQMap*                                      ParentMap;                                                // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapIconWidget");
		return ptr;
	}


	bool ShouldMarkerUpdate();
	bool IsMarkerVisible();
	struct FLinearColor GetSquadColor();
	struct FLinearColor GetNeutralColor();
	struct FLinearColor GetFriendlyColor();
	struct FLinearColor GetEnemyColor();
};


// Class Squad.SQMapList
// 0x0060 (0x0090 - 0x0030)
class USQMapList : public UPrimaryDataAsset
{
public:
	struct FPrimaryAssetRules                          Rules;                                                    // 0x0030(0x0010) (Edit)
	struct FString                                     ListName;                                                 // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               Randomizer;                                               // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0051(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Squad.SQMapList.Loadingscreen
	TArray<struct FSQMapListItem>                      MapList;                                                  // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapList");
		return ptr;
	}

};


// Class Squad.SQTeamActor
// 0x0010 (0x0340 - 0x0330)
class ASQTeamActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	ESQTeam                                            Team;                                                     // 0x0338(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0339(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamActor");
		return ptr;
	}


	void SetTeam(ESQTeam Team);
	void OnRep_Team();
	ESQTeam GetTeam();
};


// Class Squad.SQMapMarker
// 0x0028 (0x0368 - 0x0340)
class ASQMapMarker : public ASQTeamActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	class USQMapIconComponent*                         MapIcon;                                                  // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQCoreStateComponent*                       StateObject;                                              // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	int                                                Squad;                                                    // 0x0358(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                FireteamID;                                               // 0x035C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	ESQEmotes                                          PlacementEmote;                                           // 0x0360(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0361(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapMarker");
		return ptr;
	}


	void SetSquad(int Squad);
	void SetMarkerVisibleTo(ESQMapMarkerVisibleTo VisibleTo);
	void SetMarkerType(ESQMapMarkerType MarkerType);
	void SetFireteamId(int FireteamID);
	void OnRep_Squad();
	int GetSquad();
	ESQMapMarkerType GetMarkerType();
	int GetFireteamId();
};


// Class Squad.SQMapMK2
// 0x0030 (0x02C8 - 0x0298)
class USQMapMK2 : public USQMap
{
public:
	class USQGridMarkerBase*                           TopGrid;                                                  // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQGridMarkerBase*                           BottomGrid;                                               // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQGridMarkerBase*                           LeftGrid;                                                 // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQGridMarkerBase*                           RightGrid;                                                // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                MapCanvas;                                                // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                RootMapPanel;                                             // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapMK2");
		return ptr;
	}


	void UpdatePosition(const struct FVector2D& NewMapCoord);
	void UpdateDrawOffsets();
	void MapFollowPlayer();
	void MapCalculateOffsets();
};


// Class Squad.SQMapPawnIconWidget
// 0x0018 (0x0240 - 0x0228)
class USQMapPawnIconWidget : public USQMapIconWidget
{
public:
	bool                                               bIsSL;                                                    // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInSameSquad;                                           // 0x0229(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInSameTeam;                                            // 0x022A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x022B(0x0005) MISSED OFFSET
	class ASQTeamState*                                CurrentTeam;                                              // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSelf;                                                  // 0x0238(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0239(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapPawnIconWidget");
		return ptr;
	}


	void UpdateTeam();
	void UpdateIsSl();
	void UpdateIsSelf();
	void UpdateIsInSameTeam();
	void UpdateIsInSameSquad();
	class ASQPlayerState* GetWidgetPlayerState();
};


// Class Squad.SQMapSoldierIconWidget
// 0x0010 (0x0250 - 0x0240)
class USQMapSoldierIconWidget : public USQMapPawnIconWidget
{
public:
	bool                                               bIsSelfMedic;                                             // 0x0240(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWithinMedicRange;                                      // 0x0241(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0242(0x0002) MISSED OFFSET
	float                                              MedicRange;                                               // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMedic;                                                 // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsAlive;                                                 // 0x0249(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBleeding;                                              // 0x024A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInVehicle;                                             // 0x024B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x024C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapSoldierIconWidget");
		return ptr;
	}


	void UpdateIsWithinMedicRange();
	void UpdateIsSelfMedic();
	void UpdateIsMedic();
	void UpdateIsInVehicle();
	void UpdateIsBleeding();
	void UpdateIsAlive();
};


// Class Squad.SQMapTextComponent
// 0x0018 (0x0160 - 0x0148)
class USQMapTextComponent : public USQMapItemComponent
{
public:
	struct FText                                       Text;                                                     // 0x0148(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapTextComponent");
		return ptr;
	}

};


// Class Squad.SQMapVehicleIconWidget
// 0x0000 (0x0240 - 0x0240)
class USQMapVehicleIconWidget : public USQMapPawnIconWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapVehicleIconWidget");
		return ptr;
	}

};


// Class Squad.SQMapWidget
// 0x0030 (0x0278 - 0x0248)
class USQMapWidget : public USQCoreStateMapWidget
{
public:
	float                                              Angle;                                                    // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x024C(0x0004) MISSED OFFSET
	class USQColorsDataAsset*                          ColorsDataAsset;                                          // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAngleEvent;                                           // 0x0258(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	float                                              AngleTolerance;                                           // 0x025C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LocationTolerance;                                        // 0x0260(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x0264(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidget");
		return ptr;
	}


	void OnTintValueChanged();
	void OnAngleChanged();
	TEnumAsByte<ESQMapWidgetTint> GetTintValue();
	struct FLinearColor GetTintColor();
};


// Class Squad.SQMapWidgetDeployable
// 0x0008 (0x0280 - 0x0278)
class USQMapWidgetDeployable : public USQMapWidget
{
public:
	ESQBuildState                                      BuildState;                                               // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0279(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetDeployable");
		return ptr;
	}


	void OnBuildStateChanged();
};


// Class Squad.SQMapWidgetAmmoCrate
// 0x0000 (0x0280 - 0x0280)
class USQMapWidgetAmmoCrate : public USQMapWidgetDeployable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetAmmoCrate");
		return ptr;
	}

};


// Class Squad.SQMapWidgetPawn
// 0x0010 (0x0288 - 0x0278)
class USQMapWidgetPawn : public USQMapWidget
{
public:
	unsigned char                                      bIsOwned : 1;                                             // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsOwnedBySelf : 1;                                       // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsInSelfTeam : 1;                                        // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsInSelfSquad : 1;                                       // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0279(0x0003) MISSED OFFSET
	int                                                FireTeamIndex;                                            // 0x027C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CameraRotationYaw;                                        // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IsSelfZOrder;                                             // 0x0284(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetPawn");
		return ptr;
	}


	void OnIsOwnedChanged();
	void OnIsOwnedBySelfChanged();
	void OnIsInSelfTeam();
	void OnIsInSelfSquad();
	void OnFireTeamIndexChanged();
	void OnCameraRotationYawChanged();
};


// Class Squad.SQMapWidgetCameraman
// 0x0000 (0x0288 - 0x0288)
class USQMapWidgetCameraman : public USQMapWidgetPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetCameraman");
		return ptr;
	}

};


// Class Squad.SQMapWidgetCaptureZone
// 0x0038 (0x02B0 - 0x0278)
class USQMapWidgetCaptureZone : public USQMapWidget
{
public:
	struct FText                                       FlagName;                                                 // 0x0278(0x0018) (BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  FlagTexture;                                              // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultFlag;                                              // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bUncappable : 1;                                          // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02A1(0x0003) MISSED OFFSET
	ESQContestingState                                 ContestingState;                                          // 0x02A4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      OwningTeam;                                               // 0x02A5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CapturingTeam;                                            // 0x02A6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x02A7(0x0001) MISSED OFFSET
	float                                              CapturePercent;                                           // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetCaptureZone");
		return ptr;
	}


	void OnUncappableChanged();
	void OnOwningTeamChanged();
	void OnFlagTextureChanged();
	void OnFlagNameChanged();
	void OnContestingChanged();
	void OnCapturingTeamChanged();
	void OnCapturePercentChanged();
};


// Class Squad.SQMapWidgetDeployableExplosive
// 0x0008 (0x0288 - 0x0280)
class USQMapWidgetDeployableExplosive : public USQMapWidgetDeployable
{
public:
	ESQExplosiveType                                   ExplosiveType;                                            // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0281(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetDeployableExplosive");
		return ptr;
	}


	void OnExplosiveTypeChanged();
};


// Class Squad.SQMapWidgetSQPawn
// 0x0000 (0x0288 - 0x0288)
class USQMapWidgetSQPawn : public USQMapWidgetPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetSQPawn");
		return ptr;
	}

};


// Class Squad.SQMapWidgetVehicleSeat
// 0x0000 (0x0288 - 0x0288)
class USQMapWidgetVehicleSeat : public USQMapWidgetSQPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetVehicleSeat");
		return ptr;
	}

};


// Class Squad.SQMapWidgetVehicle
// 0x0058 (0x02E0 - 0x0288)
class USQMapWidgetVehicle : public USQMapWidgetVehicleSeat
{
public:
	class UTexture2D*                                  DefaultIcon;                                              // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultIconRotation;                                      // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0294(0x0004) MISSED OFFSET
	class USQVehicleUIStaticDataAsset*                 StaticUIData;                                             // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHoldsOccupant;                                           // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHoldsSquadLeader;                                        // 0x02A1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x02A2(0x0002) MISSED OFFSET
	int                                                ClaimingSquadID;                                          // 0x02A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsInClaimingSquad : 1;                                   // 0x02A8(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x7];                                       // 0x02A9(0x0007) MISSED OFFSET
	TArray<struct FSQVehicleOccupantInfo>              VehicleOccupants;                                         // 0x02B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SelfInVehicleSeat;                                        // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1C];                                      // 0x02C4(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetVehicle");
		return ptr;
	}


	void OnVehicleOccupantInfoChanged(int AtIndex);
	void OnStaticUIDataChanged();
	void OnSelfInVehicleSeatChanged();
	void OnIsInClaimingSquadChanged();
	void OnHoldsSquadLeaderChanged();
	void OnHoldsOccupantChanged();
	void OnClaimingSquadIDChanged();
	bool IsSelfInVehicle();
};


// Class Squad.SQMapWidgetEmplacement
// 0x0020 (0x0300 - 0x02E0)
class USQMapWidgetEmplacement : public USQMapWidgetVehicle
{
public:
	int                                                TeamID;                                                   // 0x02E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02E4(0x0004) MISSED OFFSET
	TArray<class UClass*>                              AdminTypes;                                               // 0x02E8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetEmplacement");
		return ptr;
	}


	void OnTeamIDChanged();
};


// Class Squad.SQMapWidgetForwardBase
// 0x0018 (0x0298 - 0x0280)
class USQMapWidgetForwardBase : public USQMapWidgetDeployable
{
public:
	unsigned char                                      bCanSpawn : 1;                                            // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSieged : 1;                                              // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0281(0x0003) MISSED OFFSET
	float                                              ExclusionRadius;                                          // 0x0284(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ConstructionRadius;                                       // 0x0288(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AmmoPoints;                                               // 0x028C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ConstructionPoints;                                       // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0294(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetForwardBase");
		return ptr;
	}


	void OnSiegedChanged();
	void OnExclusionRadiusChanged();
	void OnConstructionRadiusChanged();
	void OnConstructionPointsChanged();
	void OnCanSpawnChanged();
	void OnAmmoPointsChanged();
};


// Class Squad.SQMapWidgetHAB
// 0x0000 (0x0280 - 0x0280)
class USQMapWidgetHAB : public USQMapWidgetDeployable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetHAB");
		return ptr;
	}

};


// Class Squad.SQMapWidgetMapMarker
// 0x0020 (0x0298 - 0x0278)
class USQMapWidgetMapMarker : public USQMapWidget
{
public:
	class UTexture2D*                                  Texture;                                                  // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Tint;                                                     // 0x0280(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SquadId;                                                  // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FireteamID;                                               // 0x0294(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetMapMarker");
		return ptr;
	}


	void OnTintChanged();
	void OnTextureChanged();
	void OnSquadIdChanged();
	void OnFireteamIdChanged();
};


// Class Squad.SQMapWidgetMapMarkerObjective
// 0x0000 (0x0298 - 0x0298)
class USQMapWidgetMapMarkerObjective : public USQMapWidgetMapMarker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetMapMarkerObjective");
		return ptr;
	}

};


// Class Squad.SQMapWidgetMapMarkerSelectable
// 0x0008 (0x02A0 - 0x0298)
class USQMapWidgetMapMarkerSelectable : public USQMapWidgetMapMarker
{
public:
	class USQMapIconComponent*                         MapIcon;                                                  // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetMapMarkerSelectable");
		return ptr;
	}


	void OnRightClicked();
};


// Class Squad.SQMapWidgetMapMarkerSpotted
// 0x0000 (0x02A0 - 0x02A0)
class USQMapWidgetMapMarkerSpotted : public USQMapWidgetMapMarkerSelectable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetMapMarkerSpotted");
		return ptr;
	}

};


// Class Squad.SQMapWidgetMapMarkerWaypoint
// 0x0000 (0x02A0 - 0x02A0)
class USQMapWidgetMapMarkerWaypoint : public USQMapWidgetMapMarkerSelectable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetMapMarkerWaypoint");
		return ptr;
	}

};


// Class Squad.SQMapWidgetSpawnPoint
// 0x0020 (0x0298 - 0x0278)
class USQMapWidgetSpawnPoint : public USQMapWidget
{
public:
	bool                                               bSpawnOnSingleClick;                                      // 0x0278(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpawnOnDoubleClick;                                      // 0x0279(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x027A(0x0002) MISSED OFFSET
	unsigned char                                      bIsSelected : 1;                                          // 0x027C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSieged : 1;                                              // 0x027C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSpawningEnabled : 1;                                     // 0x027C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x027D(0x0003) MISSED OFFSET
	ESQSpawnPointType                                  SpawnPointType;                                           // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0281(0x0007) MISSED OFFSET
	class ASQGameSpawn*                                OwningGameSpawn;                                          // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0290(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetSpawnPoint");
		return ptr;
	}


	void OnSpawnPointTypeChanged();
	void OnSpawningEnabledChanged();
	void OnSiegedChanged();
	void OnIsSelectedChanged();
};


// Class Squad.SQMapWidgetRallyPoint
// 0x0018 (0x02B0 - 0x0298)
class USQMapWidgetRallyPoint : public USQMapWidgetSpawnPoint
{
public:
	int                                                NumberOfSpawns;                                           // 0x0298(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SquadId;                                                  // 0x029C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsInSelfSquad : 1;                                       // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02A1(0x0007) MISSED OFFSET
	class ASQSquadState*                               SquadState;                                               // 0x02A8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetRallyPoint");
		return ptr;
	}


	void OnSquadIdChanged();
	void OnNumberOfSpawnsChanged();
	void OnIsInSelfSquadChanged();
	void OnEventSquadStateChanged(class ASQSquadState* NewSquad, class ASQSquadState* OldSquad, class ASQPlayerState* Player);
};


// Class Squad.SQMapWidgetRepairStation
// 0x0000 (0x0280 - 0x0280)
class USQMapWidgetRepairStation : public USQMapWidgetDeployable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetRepairStation");
		return ptr;
	}

};


// Class Squad.SQMapWidgetSoldier
// 0x0070 (0x02F8 - 0x0288)
class USQMapWidgetSoldier : public USQMapWidgetPawn
{
public:
	unsigned char                                      bIsWounded : 1;                                           // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsBleeding : 1;                                          // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsAlive : 1;                                             // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsInVehicle : 1;                                         // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsUsingFreeLook : 1;                                     // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsSquadLeader : 1;                                       // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsFireTeamLeader : 1;                                    // 0x0288(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0289(0x0003) MISSED OFFSET
	int                                                SquadId;                                                  // 0x028C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FireteamID;                                               // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsMedic : 1;                                             // 0x0294(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsWithinCanSelfSeeHealthSatusRange : 1;                  // 0x0294(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanSelfSeeHealthStatus : 1;                              // 0x0294(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0295(0x0003) MISSED OFFSET
	float                                              HealthStatusRange;                                        // 0x0298(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SoldierLocation;                                          // 0x029C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQRoleSettings*                             CurrentRole;                                              // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSQSoldierInfo                              SoldierInfo;                                              // 0x02B0(0x0028) (BlueprintVisible, BlueprintReadOnly)
	float                                              SquadLeaderZOrder;                                        // 0x02D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MedicZOrder;                                              // 0x02DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleViewConeZOrder;                                    // 0x02E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x02E4(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMapWidgetSoldier");
		return ptr;
	}


	void OnSquadIdChanged();
	void OnSoldierLocationChanged();
	void OnSoldierInfoChanged();
	void OnShowIncapChanged();
	void OnShowBleedingChanged();
	void OnIsWoundedChanged();
	void OnIsWithinCanSelfSeeHealthSatusRangeChanged();
	void OnIsUsingFreeLookChanged();
	void OnIsSquadLeaderChanged();
	void OnIsMedicChanged();
	void OnIsInVehicleChanged();
	void OnIsFireTeamLeaderChanged();
	void OnIsBleedingChanged();
	void OnIsAliveChanged();
	void OnHealthStatusRangeChanged();
	void OnFireteamIdChanged();
	void OnCurrentRoleChanged();
	void OnCanSelfSeeHealthStatusChanged();
	bool GetShowIncap();
	bool GetShowBleeding();
};


// Class Squad.SQMarker
// 0x0000 (0x0330 - 0x0330)
class ASQMarker : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMarker");
		return ptr;
	}

};


// Class Squad.SQMedicBag
// 0x0088 (0x0638 - 0x05B0)
class ASQMedicBag : public ASQHealingEquipableItem
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x05B0(0x0078) MISSED OFFSET
	class USQMedicBagStaticInfo*                       MedicBagStaticInfo;                                       // 0x0628(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                TimerHandle;                                              // 0x0630(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMedicBag");
		return ptr;
	}


	void IncreaseHealth();
};


// Class Squad.SQMedicBagStaticInfo
// 0x0038 (0x0510 - 0x04D8)
class USQMedicBagStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                Healing1pBeginUseMontage;                                 // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Healing3pBeginUseMontage;                                 // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Healing1pEndUseMontage;                                   // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Healing3pEndUseMontage;                                   // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   HealSelfSound;                                            // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   HealOtherSound;                                           // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HealingDelay;                                             // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HealingAmount;                                            // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMedicBagStaticInfo");
		return ptr;
	}

};


// Class Squad.SQMenuItemWidgetStyle
// 0x01A0 (0x01D0 - 0x0030)
class USQMenuItemWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FSQMenuItemStyle                            MenuItemStyle;                                            // 0x0030(0x01A0) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMenuItemWidgetStyle");
		return ptr;
	}

};


// Class Squad.SQMenuSoundsWidgetStyle
// 0x0038 (0x0068 - 0x0030)
class USQMenuSoundsWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FSQMenuSoundsStyle                          SoundsStyle;                                              // 0x0030(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMenuSoundsWidgetStyle");
		return ptr;
	}

};


// Class Squad.SQMenuWidgetStyle
// 0x0200 (0x0230 - 0x0030)
class USQMenuWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FSQMenuStyle                                MenuStyle;                                                // 0x0030(0x0200) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMenuWidgetStyle");
		return ptr;
	}

};


// Class Squad.SQMeshOwnerInterface
// 0x0000 (0x0028 - 0x0028)
class USQMeshOwnerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMeshOwnerInterface");
		return ptr;
	}

};


// Class Squad.SQMortarProjectile
// 0x0090 (0x05F8 - 0x0568)
class ASQMortarProjectile : public ASQProjectile
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0568(0x0010) MISSED OFFSET
	class UParticleSystem*                             SmokeParticleEffect;                                      // 0x0578(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SmokeSoundCue;                                            // 0x0580(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SmokeColor;                                               // 0x0588(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NearGroundTriggerDistance;                                // 0x0598(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinFlightTime;                                            // 0x059C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bWatchFlightTime;                                         // 0x05A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldDestroyByLifespan;                                 // 0x05A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x05A2(0x0006) MISSED OFFSET
	class UClass*                                      LastingEffectClass;                                       // 0x05A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x05B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ImpactDamageToApply;                                      // 0x05B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3C];                                      // 0x05BC(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMortarProjectile");
		return ptr;
	}


	void STATIC_SpawnArtilleryProjectile(class UClass* ProjectileClass, class AActor* ProjectileOwner, const struct FVector& Location, const struct FRotator& Rotation, float InitialVelocity);
	void CreateSmoke();
	void BPOnNearGroundDistanceReached();
};


// Class Squad.SQVehicleViewWidget
// 0x0030 (0x0238 - 0x0208)
class USQVehicleViewWidget : public USQUserWidget
{
public:
	TArray<class UImage*>                              ZoomImages;                                               // 0x0208(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	int                                                CurrentZoomIndex;                                         // 0x0218(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x021C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              IgnoredShakeClasses;                                      // 0x0220(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0230(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleViewWidget");
		return ptr;
	}


	void Unzoom();
	void InitWidget();
	void IncreaseZoomLevel();
	void DecreaseZoomLevel();
};


// Class Squad.SQMortarViewWidget
// 0x0000 (0x0238 - 0x0238)
class USQMortarViewWidget : public USQVehicleViewWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMortarViewWidget");
		return ptr;
	}

};


// Class Squad.SQMovementAdjustmentComponent
// 0x0010 (0x05A0 - 0x0590)
class USQMovementAdjustmentComponent : public UBoxComponent
{
public:
	float                                              SoldierMovementSpeedMultiplayer;                          // 0x0590(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0594(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMovementAdjustmentComponent");
		return ptr;
	}


	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class Squad.SQMovementComponentInterface
// 0x0000 (0x0028 - 0x0028)
class USQMovementComponentInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMovementComponentInterface");
		return ptr;
	}

};


// Class Squad.SQMovementComponentManager
// 0x0020 (0x0198 - 0x0178)
class USQMovementComponentManager : public UPawnMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0178(0x0010) MISSED OFFSET
	TArray<class USQMovementComponentBase*>            ManagedMovementComponents;                                // 0x0188(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, DuplicateTransient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQMovementComponentManager");
		return ptr;
	}


	void UnRegisterComponent(class USQMovementComponentBase* MovementComponent);
	void RegisterComponent(class USQMovementComponentBase* MovementComponent);
};


// Class Squad.SQNoDeployZone
// 0x0028 (0x0360 - 0x0338)
class ASQNoDeployZone : public ATriggerBox
{
public:
	bool                                               UseBlacklisting;                                          // 0x0338(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	TArray<class UClass*>                              AllowedDeployableClasses;                                 // 0x0340(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                              DisallowedDeployableClasses;                              // 0x0350(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQNoDeployZone");
		return ptr;
	}

};


// Class Squad.SQNotificationData
// 0x0210 (0x0240 - 0x0030)
class USQNotificationData : public UDataAsset
{
public:
	struct FSQNotificationLayout                       NotificationLayouts[0xB];                                 // 0x0030(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQNotificationData");
		return ptr;
	}


	struct FSQNotificationLayout GetNotificationLayout(ESQNotificationTypes NotificationType);
};


// Class Squad.SQWheeledVehicleBase
// 0x0000 (0x0AE0 - 0x0AE0)
class ASQWheeledVehicleBase : public ASQGroundVehicle
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWheeledVehicleBase");
		return ptr;
	}


	void DestroyWheel(class USQDriveTrainComponent* DriveTrainComponent, bool bReverseDamage);
};


// Class Squad.SQNWheeledVehicle
// 0x0000 (0x0AE0 - 0x0AE0)
class ASQNWheeledVehicle : public ASQWheeledVehicleBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQNWheeledVehicle");
		return ptr;
	}

};


// Class Squad.SQNWheeledVehicleMovementComponent
// 0x0058 (0x0498 - 0x0440)
class USQNWheeledVehicleMovementComponent : public UWheeledVehicleMovementComponentNW
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0440(0x0018) MISSED OFFSET
	TArray<int>                                        WheelShaderCounts;                                        // 0x0458(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bEnableTurboBoost;                                        // 0x0468(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	float                                              MaxSpeedAllowedForEngineBoosting;                         // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeedToAssistWheels;                                   // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WheelLongForceAssistMultiplier;                           // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WheelTorqueAssistMultiplier;                              // 0x0478(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWheelRPMDuringWheelAssist;                             // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0480(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQNWheeledVehicleMovementComponent");
		return ptr;
	}

};


// Class Squad.SQObjective
// 0x00E8 (0x0428 - 0x0340)
class ASQObjective : public ASQTeamActor
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0340(0x0048) MISSED OFFSET
	int                                                TicketAdjustmentByObjectiveMeetingTeamUponObjectiveBeingMet;// 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TicketAdjustmentByOwningTeamUponObjectiveBeingMet;        // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TicketAdjustmentByOpposingTeamUponObjectiveBeingMet;      // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasObjectiveBeenMet;                                     // 0x0394(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0395(0x0003) MISSED OFFSET
	struct FText                                       ObjectiveMetOwningTeamMessage;                            // 0x0398(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ObjectiveMetOpposingTeamMessage;                          // 0x03B0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ObjectiveShownOwningTeamMessage;                          // 0x03C8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ObjectiveShownOpposingTeamMessage;                        // 0x03E0(0x0018) (Edit, BlueprintVisible)
	bool                                               bIsKnownToEveryone;                                       // 0x03F8(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWaitingToBeShown;                                      // 0x03F9(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHiddenUponSpawn;                                         // 0x03FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x03FB(0x0001) MISSED OFFSET
	struct FVector2D                                   DistanceRangeForAttackMarker;                             // 0x03FC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DistanceRangeForDefendMarker;                             // 0x0404(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TeamOneLocationZeroBased;                                 // 0x040C(0x000C) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TeamTwoLocationZeroBased;                                 // 0x0418(0x000C) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	ESQTeam                                            ObjectiveMetByTeam;                                       // 0x0424(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0425(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQObjective");
		return ptr;
	}


	void SetWaitingToBeShown(bool bInIsWaitingToBeShown);
	void SetObjectiveMet(bool bObjectiveMet, ESQTeam InTeam);
	void SetKnownToEveryone(bool bInIsKnownToEveryone);
	void OnRep_HasObjectiveBeenMet();
	void OnMet();
	bool IsWaitingToBeShown();
	bool IsKnownToEveryone();
	bool HasObjectiveBeenMet();
	struct FText GetObjectiveShownMessage(class ASQGameRuleSet* RuleSet, ESQTeam InTeam);
	struct FText GetObjectiveMetMessage(class ASQGameRuleSet* RuleSet, ESQTeam InTeam);
	ESQTeam GetObjectiveMetByTeam();
	struct FVector GetLocationForTeam(ESQTeam InTeam);
};


// Class Squad.SQObjective_Destroyable
// 0x00F0 (0x0518 - 0x0428)
class ASQObjective_Destroyable : public ASQObjective
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0428(0x0008) MISSED OFFSET
	struct FText                                       WorldText;                                                // 0x0430(0x0018) (Edit, BlueprintVisible)
	struct FLinearColor                                WorldTextColor;                                           // 0x0448(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQUsableData                               UsableData;                                               // 0x0458(0x0040) (Edit, BlueprintVisible)
	bool                                               bHasBeenDestroyed;                                        // 0x0498(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0499(0x0003) MISSED OFFSET
	float                                              Health;                                                   // 0x049C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              AllowableDamageTypes;                                     // 0x04A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UParticleSystem*                             DestroyedParticleEffect;                                  // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DestroyedShockwaveEffect;                                 // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DestroyedSound;                                           // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DestroyedDebrisSound;                                     // 0x04C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQDamageTypeEffects                        DamageEffects;                                            // 0x04D0(0x0028) (Edit, BlueprintVisible)
	class UClass*                                      SpawnClass;                                               // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQGameSpawn*                                SpawnPoint;                                               // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpawnLocationZOffset;                                     // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	class UClass*                                      DefaultEffectsClass;                                      // 0x0510(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQObjective_Destroyable");
		return ptr;
	}


	void OnRep_HasBeenDestroyed();
	void ObjectiveDestroyed(float damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void MulticastPlayDamageEffects(class UClass* DamageTypeClass);
	void BPClientObjectiveDestroyed();
};


// Class Squad.SQObjectiveSpawnLocation
// 0x0000 (0x0330 - 0x0330)
class ASQObjectiveSpawnLocation : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQObjectiveSpawnLocation");
		return ptr;
	}

};


// Class Squad.SQOnlineHelpers
// 0x0000 (0x0028 - 0x0028)
class USQOnlineHelpers : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQOnlineHelpers");
		return ptr;
	}


	bool STATIC_IsUserInSession(const struct FSQBlueprintFriend& User, const struct FBlueprintSessionResult& Session);
	int STATIC_GetUsersSessionIndex(const struct FSQBlueprintFriend& User, TArray<struct FBlueprintSessionResult> Sessions);
	TArray<struct FSQBlueprintFriend> STATIC_GetUsersInSession(TArray<struct FSQBlueprintFriend> Results, const struct FBlueprintSessionResult& Session);
};


// Class Squad.SQOptionsWidgetStyle
// 0x0038 (0x0068 - 0x0030)
class USQOptionsWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FSQOptionsStyle                             OptionsStyle;                                             // 0x0030(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQOptionsWidgetStyle");
		return ptr;
	}

};


// Class Squad.SQOrderLines
// 0x0018 (0x0238 - 0x0220)
class USQOrderLines : public USQMapLattice
{
public:
	bool                                               bShowTeamOrderLines;                                      // 0x0220(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0221(0x0003) MISSED OFFSET
	float                                              SelfSquadLineThickness;                                   // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OtherSquadLineThickness;                                  // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x022C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQOrderLines");
		return ptr;
	}

};


// Class Squad.SQPainCausingVolumeComponent
// 0x0030 (0x05C0 - 0x0590)
class USQPainCausingVolumeComponent : public UBoxComponent
{
public:
	unsigned char                                      bPainCausing : 1;                                         // 0x0590(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0591(0x0003) MISSED OFFSET
	float                                              DamagePerSec;                                             // 0x0594(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PainInterval;                                             // 0x05A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEntryPain : 1;                                           // 0x05A4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x05A5(0x0003) MISSED OFFSET
	class AController*                                 DamageInstigator;                                         // 0x05A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x05B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPainCausingVolumeComponent");
		return ptr;
	}


	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class Squad.SQPawnInventoryComponent
// 0x01B0 (0x02A0 - 0x00F0)
class USQPawnInventoryComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    EquippedNewItemEvent;                                     // 0x00F0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    PlayAnimationEvent;                                       // 0x0100(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    PauseAnimationEvent;                                      // 0x0110(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    ResumeAnimationEvent;                                     // 0x0120(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    SetAnimationPlayRateEvent;                                // 0x0130(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    EndLoopAnimationEvent;                                    // 0x0140(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    StopAnimationEvent;                                       // 0x0150(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    AmmoChangedEvent;                                         // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USQItemStaticInfo*                           CurrentItemStaticInfo;                                    // 0x0170(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultStaticInfoClass;                                   // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQEquipableItem*                            CurrentWeapon;                                            // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0188(0x0018) MISSED OFFSET
	bool                                               bIsInteracting;                                           // 0x01A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTimingOut;                                             // 0x01A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x01A2(0x0002) MISSED OFFSET
	float                                              CurrentFadeOut;                                           // 0x01A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeoutDuration;                                          // 0x01A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeoutDelay;                                             // 0x01AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bClickInventoryToggle : 1;                                // 0x01B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Config)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01B1(0x0003) MISSED OFFSET
	int                                                NextItemSlot;                                             // 0x01B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NextItemOffset;                                           // 0x01B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurrentWeaponSlot;                                        // 0x01BC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurrentWeaponOffset;                                      // 0x01C0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET
	TArray<struct FSQWeaponGroupData>                  Inventory;                                                // 0x01C8(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	struct FSQWeaponGroupDataArray                     RepInventory;                                             // 0x01D8(0x00C0) (Net, Transient)
	class ASQEquipableItem*                            PendingWeapon;                                            // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPawnInventoryComponent");
		return ptr;
	}


	void UpdateStaticItemInfo(class USQItemStaticInfo* InfoObject);
	void UpdateInventorySwitch(int NewSlot, int NewOffset, bool bInteracting);
	bool SwitchWeaponDirectly(int NewWeaponSlot, int NewWeaponOffset, bool bInstant);
	bool SwitchWeapon(int NewItemSlot);
	bool SwitchItem(int ItemSlot);
	void StopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float blendOutTime, bool bStopAllWeaponAnims);
	class ASQEquipableItem* SpawnEquipableItem(const struct FSQInventoryData& ItemClass, bool bSpawnMaxAmmo, const struct FSQPersistedAmmoCount& StartingAmmo);
	void SetupStaticInfoBindings(class ASQEquipableItem* Item);
	void SetAnimationPlayRateHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float NewPlayRate);
	void ServerSwitchWeapon2(class ASQEquipableItem* NewWeapon);
	void ServerSwitchWeapon(int NewWeaponSlot);
	void ResumeAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage);
	void ResetInventorySwitch();
	void ReplaceItemInInventory(int Slot, const struct FSQInventoryData& ItemClass, int Offset);
	class ASQEquipableItem* RemoveWithoutDestroyingItem(int Slot, int Offset);
	void RemoveItemFromInventory(int Slot, int Offset);
	void RemoveItemClassFromInventory(class UClass* EquipableItemToRemove);
	bool RemoveGroupFromInventory(int Slot);
	void PlayAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage);
	void PauseAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage);
	void OnRep_RepInventory();
	void OnRep_PendingWeapon(class ASQEquipableItem* PreviousPendingWeapon);
	void OnPrevItem();
	void OnPendingWeaponPawnOwnerChanged(class APawn* NewPawnOwner);
	void OnNextItem();
	void OnAmmoChanged();
	class ASQEquipableItem* InsertItemIntoInventory(int Slot, const struct FSQInventoryData& ItemClass, int Offset, bool bSpawnMaxAmmo);
	bool InsertExistingItemIntoInventory(class ASQEquipableItem* Item, int Slot, int Offset);
	TArray<struct FSQWeaponGroupData> GetInventoryItemGroups();
	class ASQEquipableItem* FindValidWeaponInGroup(int WeaponSlot, int* WeaponOffset);
	class ASQEquipableItem* FindValidWeaponByClass(class UClass* WeaponClass);
	void EndLoopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, const struct FSQMontageSectionNames& SectionNames);
	bool CalculateRearmCost(const TScriptInterface<class USQRearmSource>& RearmSource, TArray<struct FSQRearmWeaponRequest> RearmRequest, float* OutCost);
	float CalculateMissingAmmoCost();
	int AddGroupToInventory(int Slot);
};


// Class Squad.SQPhysicalMaterial
// 0x0030 (0x00B0 - 0x0080)
class USQPhysicalMaterial : public UPhysicalMaterial
{
public:
	bool                                               bConsiderForPenetration;                                  // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowPenetration;                                        // 0x0081(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0082(0x0002) MISSED OFFSET
	float                                              DamageAbsorbed;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDamageParentActor;                                       // 0x008C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	float                                              WheelDampingRateMultiplier;                               // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	TArray<struct FSQSecondaryExplosionDesc>           SecondaryExplosionDescs;                                  // 0x0098(0x0010) (ZeroConstructor, Deprecated)
	int                                                ArmorThicknessMillimeters;                                // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPhysicalMaterial");
		return ptr;
	}


	class USQShockwave* GetShockwave(const struct FSQProjectileImpactEffect& InImpactEffect, class USQShockwave* DefaultShockwave);
	class UParticleSystem* GetParticle(const struct FSQProjectileImpactEffect& InImpactEffect, class UParticleSystem* DefaultParticle);
	class UMaterialInterface* GetDecal(const struct FSQProjectileImpactEffect& InImpactEffect, class UMaterialInterface* DefaultDecal);
};


// Class Squad.SQPhysicalMaterialEffects
// 0x0050 (0x0078 - 0x0028)
class USQPhysicalMaterialEffects : public UObject
{
public:
	TMap<class USQPhysicalMaterial*, struct FSQEffectsSet> Effects;                                                  // 0x0028(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPhysicalMaterialEffects");
		return ptr;
	}


	struct FSQProjectileImpactEffect GetThrowableEffect(class USQPhysicalMaterial* Material);
	struct FSQProjectileImpactEffect GetImpactEffect(class USQPhysicalMaterial* Material);
	struct FSQExplosionEffect GetExplosionEffect(class USQPhysicalMaterial* Material);
	struct FSQEffectsSet GetEffect(class USQPhysicalMaterial* Material);
	struct FSQProjectileImpactEffect GetBlastEffect(class USQPhysicalMaterial* Material);
};


// Class Squad.SQPhysicalMaterialVehiclesEffects
// 0x0050 (0x0078 - 0x0028)
class USQPhysicalMaterialVehiclesEffects : public UObject
{
public:
	TMap<class USQPhysicalMaterial*, struct FSQVehicleEffect> Effects;                                                  // 0x0028(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPhysicalMaterialVehiclesEffects");
		return ptr;
	}

};


// Class Squad.SQPhysicalMaterialSoldiersEffects
// 0x0050 (0x0078 - 0x0028)
class USQPhysicalMaterialSoldiersEffects : public UObject
{
public:
	TMap<class USQPhysicalMaterial*, struct FSQSoldierEffect> Effects;                                                  // 0x0028(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPhysicalMaterialSoldiersEffects");
		return ptr;
	}

};


// Class Squad.SQPhysicsVolume
// 0x0000 (0x0378 - 0x0378)
class ASQPhysicsVolume : public APhysicsVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPhysicsVolume");
		return ptr;
	}


	void BPActorLeavingVolume(class AActor* Other);
	void BPActorEnteredVolume(class AActor* Other);
};


// Class Squad.SQPlayerCameraManager
// 0x0030 (0x24A0 - 0x2470)
class ASQPlayerCameraManager : public APlayerCameraManager
{
public:
	TArray<class UClass*>                              IgnoredShakeClasses;                                      // 0x2470(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bDrawStencils;                                            // 0x2480(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreInactiveEffects;                                   // 0x2481(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x2482(0x0006) MISSED OFFSET
	class UMaterialInterface*                          StencilPostProcessMaterial;                               // 0x2488(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x2490(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPlayerCameraManager");
		return ptr;
	}


	void CalcScreenCenterRay(float Range, struct FVector* OutStart, struct FVector* OutEnd);
};


// Class Squad.SQPlayerController_Menu
// 0x0000 (0x0680 - 0x0680)
class ASQPlayerController_Menu : public APlayerController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPlayerController_Menu");
		return ptr;
	}

};


// Class Squad.SQPlayerState
// 0x03B8 (0x07B0 - 0x03F8)
class ASQPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData00[0x34];                                      // 0x03F8(0x0034) MISSED OFFSET
	float                                              TimeBetweenPlayerCacheChecking;                           // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0430(0x0030) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTeamStateChangedEvent;                                  // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0470(0x0018) MISSED OFFSET
	TArray<class ASQMapMarker*>                        RelevantMapMarkers;                                       // 0x0488(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	class ASQTeamState*                                OldTeamState;                                             // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                TeamID;                                                   // 0x04A0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastTeamChangeTime;                                       // 0x04A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x04A8(0x0010) MISSED OFFSET
	TArray<class ASQSoldier*>                          SoldiersOnScreenSortedByNearestDistanceCache;             // 0x04B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class ASQSoldier*>                          SoldiersHaveLineOfSightCache;                             // 0x04C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class ASQSoldier*>                          EnemiesHaveLineOfSightCache;                              // 0x04D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class ASQSoldier*>                          FriendliesHaveLineOfSightCache;                           // 0x04E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class ASQSoldier*>                          AllSoldiersCache;                                         // 0x04F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class ASQSoldier*>                          EnemiesCache;                                             // 0x0508(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class ASQSoldier*>                          FriendliesCache;                                          // 0x0518(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class ASQSoldier*>                          AllSoldiersSortedByNearestDistanceCache;                  // 0x0528(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               PawnsOnScreenSortedByNearestDistanceCache;                // 0x0538(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               PawnsHaveLineOfSightCache;                                // 0x0548(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               EnemyPawnsHaveLineOfSightCache;                           // 0x0558(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               FriendlyPawnsHaveLineOfSightCache;                        // 0x0568(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               AllPawnsCache;                                            // 0x0578(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               EnemyPawnsCache;                                          // 0x0588(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               FriendlyPawnsCache;                                       // 0x0598(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class APawn*>                               AllPawnsSortedByNearestDistanceCache;                     // 0x05A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class USQVehicleClaim*>                     AuthorityVehicleClaimsNotExpired;                         // 0x05B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst)
	struct FDeployableItemsArray                       PlacedDeployablesArray;                                   // 0x05C8(0x00C0) (Net)
	struct FPlayerStateDataObject                      PlayerStateData;                                          // 0x0688(0x0060) (BlueprintVisible, BlueprintReadOnly, Net)
	class USQVehicleSeatComponent*                     CurrentSeat;                                              // 0x06E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQTeamState*                                TeamState;                                                // 0x06F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class ASQSquadState*                               SquadState;                                               // 0x06F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class ASQSoldier*                                  Soldier;                                                  // 0x0700(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	class APawn*                                       CurrentPawn;                                              // 0x0708(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class USQRoleSettings*                             CurrentRole;                                              // 0x0710(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class USQRoleSettings*                             DeployRole;                                               // 0x0718(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               DeployRoleAvaliable;                                      // 0x0720(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1F];                                      // 0x0721(0x001F) MISSED OFFSET
	struct FSQPersistedAmmoState                       PersistedAmmoState;                                       // 0x0740(0x0018)
	TMap<class UClass*, class UClass*>                 ReplacementClassesMap;                                    // 0x0758(0x0050) (ZeroConstructor)
	class USQCoreStateComponent*                       StateObject;                                              // 0x07A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQPlayerState");
		return ptr;
	}


	void SetTeamWorkScore(float InTeamWorkScore);
	void SetTeamState(class ASQTeamState* NewTeamState);
	void SetSupporterPatch(class UTexture* InSupporterPatch);
	void SetSquadState(class ASQSquadState* NewSquadState);
	void SetSoldier(class ASQSoldier* InSoldier);
	void SetRevivedPoints(float InRevivedPoints);
	void SetPlayerNamePrefix(const struct FString& NewPlayerNamePrefix);
	void SetObjectiveScore(float InObjectiveScore);
	void SetNumWounds(int InWounds);
	void SetNumWounded(int InWounded);
	void SetNumTeamKills(int InNumTeamkills);
	void SetNumKills(int InNumKill);
	void SetNumDeaths(int InNumDeaths);
	void SetLives(int InLives);
	void SetIsQA(bool bInIsQA);
	void SetIsMember(bool bInIsMember);
	void SetIsDev(bool bInIsDev);
	void SetIsAdmin(bool bInIsAdmin);
	void SetHealPoints(float InHealPoints);
	void SetDeployRoleAvaliable(bool InDeployRoleAvaliable);
	void SetDeployRole(class USQRoleSettings* InDeployRole);
	void SetCurrentSeat(class USQVehicleSeatComponent* InCurrentSeat);
	void SetCurrentRole(class USQRoleSettings* InCurrentRole);
	void SetCurrentPawn(class APawn* InPawn);
	void ServerSetPlayerNamePrefix(const struct FString& NewPlayerNamePrefix);
	void ServerSendSerializedInventoryItems(TArray<unsigned char> SerializedData);
	void ServerRequestTeamChange(int NewTeam);
	void ScorePointsDelayed(int Points, const struct FString& Reason);
	void ScorePoints(int Points, const struct FString& Reason);
	bool RemovedPlacedDeployableItemAt(int Index);
	void OnRep_TeamState();
	void OnRep_SquadState(class ASQSquadState* OldSquadState);
	void OnRep_PlayerNamePrefix(const struct FString& OldPlayerNamePrefix);
	void OnRep_FireTeamPosition();
	void OnRep_FireTeamIndex();
	void OnRep_DeployRole();
	void OnRep_CurrentSeat(class USQVehicleSeatComponent* LastSeat);
	void OnRep_CurrentRole(class USQRoleSettings* OldPlayerCurrentRole);
	void OnRep_CurrentPawn();
	bool IsSquadLeader();
	bool IsQA();
	bool IsMember();
	bool IsFireTeamLeader();
	bool IsDev();
	bool IsCommander();
	bool IsAdmin();
	struct FUniqueNetIdRepl GetUniqueNetID();
	float GetTeamWorkScore();
	class ASQTeamState* GetTeamState();
	class UTexture* GetSupporterPatch();
	class ASQSquadState* GetSquadState();
	class ASQSoldier* GetSoldier();
	struct FString GetShortPlayerName();
	float GetRevivedPoints();
	struct FString GetPlayerOnlineID();
	struct FString GetPlayerNamePrefix();
	int GetPlacedDeployableItemsCount();
	class ASQDeployable* GetPlacedDeployableAt(int Index);
	float GetObjectiveScore();
	int GetNumWounds();
	int GetNumWounded();
	int GetNumTeamKills();
	int GetNumKills();
	int GetNumDeaths();
	int GetLives();
	float GetHealPoints();
	struct FString GetFullPlayerName();
	int GetFireTeamPosition();
	int GetFireTeamIndex();
	bool GetDeployRoleAvaliable();
	class USQRoleSettings* GetDeployRole();
	class ASQVehicle* GetCurrentVehicle();
	class ASQVehicleSeat* GetCurrentSeatPawn();
	class USQVehicleSeatComponent* GetCurrentSeat();
	class USQRoleSettings* GetCurrentRole();
	class APawn* GetCurrentPawn();
	void BPOnRep_PlayerNamePrefix(const struct FString& OldPlayerNamePrefix, const struct FString& NewPlayerNamePrefix);
	void AddPlacedDeployableItem(class ASQDeployable* Deployable);
};


// Class Squad.SQProceduralTextureRenderer
// 0x0010 (0x0038 - 0x0028)
class USQProceduralTextureRenderer : public UObject
{
public:
	bool                                               bRenderNow;                                               // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRenderOnSettingsChange;                                  // 0x0029(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x002A(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQProceduralTextureRenderer");
		return ptr;
	}


	void OnRenderNowPressed();
	void OnDrawTexture(class UCanvas* Canvas, class UTextureRenderTarget2D* Texture, int Width, int Height);
	void DrawTexture(class UTextureRenderTarget2D* RenderTarget);
};


// Class Squad.SQProjectileMovement
// 0x0020 (0x0210 - 0x01F0)
class USQProjectileMovement : public UProjectileMovementComponent
{
public:
	struct FVector                                     ConstantAcceleration;                                     // 0x01F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ConstantAccelerationTimeout;                              // 0x01FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreGravityDuringConstantAcceleration;                 // 0x0200(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreGravity;                                           // 0x0201(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x0202(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQProjectileMovement");
		return ptr;
	}


	void SetFlightToPosition(const struct FVector& LookatPos, float AngularSpeed, float DeltaTime);
};


// Class Squad.SQProjectileRootComponent
// 0x0000 (0x0570 - 0x0570)
class USQProjectileRootComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQProjectileRootComponent");
		return ptr;
	}

};


// Class Squad.SQProjectileSpawnerComponent
// 0x00B0 (0x0300 - 0x0250)
class USQProjectileSpawnerComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0250(0x0020) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0250(0x0028) UNKNOWN PROPERTY: SoftClassProperty Squad.SQProjectileSpawnerComponent.TracerProjectileClass
	float                                              MuzzleVelocity;                                           // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDamageToApply;                                         // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenShots;                                         // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RoundsBetweenTracer;                                      // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShotDeviation;                                            // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ShotCounter;                                              // 0x02AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFiring;                                                // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x02B1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFired;                                                  // 0x02B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartFiring;                                            // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopFiring;                                             // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x18];                                      // 0x02E8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQProjectileSpawnerComponent");
		return ptr;
	}


	void StopFiring();
	void StartFiring();
	void OnRep_IsFiring(bool OldValue);
	void OnProjectileImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnFireEvent__DelegateSignature();
};


// Class Squad.SQProtectionZone
// 0x00A0 (0x03D0 - 0x0330)
class ASQProtectionZone : public AActor
{
public:
	class UBoxComponent*                               DummyPresetCollisionCPP;                                  // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              KillHostileInSeconds;                                     // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2C];                                      // 0x033C(0x002C) MISSED OFFSET
	unsigned char                                      TeamID;                                                   // 0x0368(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0369(0x0007) MISSED OFFSET
	struct FText                                       DeployableDestroyedText;                                  // 0x0370(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       ProjectileDestroyedText;                                  // 0x0388(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       AccessDeniedText;                                         // 0x03A0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       EnemyProtectionZoneText;                                  // 0x03B8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQProtectionZone");
		return ptr;
	}


	void OnCompExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnCompBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CheckOverlap();
};


// Class Squad.SQRadialButton
// 0x0010 (0x02D0 - 0x02C0)
class USQRadialButton : public USQBaseButton
{
public:
	ESQRadialWidgetSizeEnum                            RadialWidgetSize;                                         // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02C1(0x0003) MISSED OFFSET
	float                                              RadialWidgetAngle;                                        // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   MouseEnterSoundCue;                                       // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRadialButton");
		return ptr;
	}


	void UpdateRadialAngle(float UpdatedAngle);
	void OnHoverEnd();
	void OnHoverBegin();
};


// Class Squad.SQRadialIconButton
// 0x0118 (0x03E8 - 0x02D0)
class USQRadialIconButton : public USQRadialButton
{
public:
	struct FVector2D                                   SmallOuterRimDistOffset;                                  // 0x02D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MediumOuterRimDistOffset;                                 // 0x02D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LargeOuterRimDistOffset;                                  // 0x02E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SmallIconDistOffset;                                      // 0x02E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MediumIconDistOffset;                                     // 0x02F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LargeIconDistOffset;                                      // 0x02F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UImage*                                      InnerHoverImage;                                          // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      IconImage;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      OuterRimImage;                                            // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture2D*                                  IconImageTexture;                                         // 0x0318(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconImageActiveColor;                                     // 0x0320(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconImageInactiveColor;                                   // 0x0330(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconImageHoveredColor;                                    // 0x0340(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconImagePressedColor;                                    // 0x0350(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  InnerHoverSmallImageTexture;                              // 0x0360(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  InnerHoverMediumImageTexture;                             // 0x0368(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  InnerHoverLargeImageTexture;                              // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                InnerHoverInactiveColor;                                  // 0x0378(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                InnerHoverHoveredColor;                                   // 0x0388(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                InnerHoverPressedColor;                                   // 0x0398(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  OuterRimSmallImageTexture;                                // 0x03A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  OuterRimMediumImageTexture;                               // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  OuterRimLargeImageTexture;                                // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                OuterRimActiveColor;                                      // 0x03C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                OuterRimInactiveColor;                                    // 0x03D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IconSize;                                                 // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRadialIconButton");
		return ptr;
	}


	void UpdateOuterRimImage();
	void UpdateInnerHoverImage();
	void UpdateIconImage();
};


// Class Squad.SQRadialCenterRoleButton
// 0x0010 (0x03F8 - 0x03E8)
class USQRadialCenterRoleButton : public USQRadialIconButton
{
public:
	bool                                               bIsUnavailable;                                           // 0x03E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03E9(0x0007) MISSED OFFSET
	class USQRoleSettings*                             ReferenceRole;                                            // 0x03F0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRadialCenterRoleButton");
		return ptr;
	}

};


// Class Squad.SQRadialDeployableButton
// 0x0088 (0x0470 - 0x03E8)
class USQRadialDeployableButton : public USQRadialIconButton
{
public:
	bool                                               bIsUnavailable;                                           // 0x03E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03E9(0x0003) MISSED OFFSET
	int                                                DeployableLimit;                                          // 0x03EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PlacedDeployables;                                        // 0x03F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PlacementCost;                                            // 0x03F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurrentConstructionPoints;                                // 0x03F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	class ASQForwardBase*                              CurrentFob;                                               // 0x0400(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextUnAvailableColor;                                     // 0x0408(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextAvailableColor;                                       // 0x0418(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RimAvailableColor;                                        // 0x0428(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RimUnAvailableColor;                                      // 0x0438(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconUnavailableColor;                                     // 0x0448(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                InnerHoverUnavailableColor;                               // 0x0458(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RelatedDeployable;                                        // 0x0468(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRadialDeployableButton");
		return ptr;
	}


	void UpdateLimitText();
	void UpdateDeployableLimit();
};


// Class Squad.SQRadialIconToggleButton
// 0x0018 (0x0400 - 0x03E8)
class USQRadialIconToggleButton : public USQRadialIconButton
{
public:
	bool                                               bToggled;                                                 // 0x03E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03E9(0x0003) MISSED OFFSET
	struct FLinearColor                                InnerHoverToggledColor;                                   // 0x03EC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRadialIconToggleButton");
		return ptr;
	}


	void Toggle();
	void OnToggleChanged();
};


// Class Squad.SQRadialRoleIconButton
// 0x0050 (0x0438 - 0x03E8)
class USQRadialRoleIconButton : public USQRadialIconButton
{
public:
	bool                                               bIsUnavailable;                                           // 0x03E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03E9(0x0003) MISSED OFFSET
	struct FLinearColor                                RimAvailableColor;                                        // 0x03EC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RimUnAvailableColor;                                      // 0x03FC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconUnavailableColor;                                     // 0x040C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                InnerHoverUnavailableColor;                               // 0x041C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	class USQRoleSettings*                             ReferenceRole;                                            // 0x0430(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRadialRoleIconButton");
		return ptr;
	}


	void UpdateLimit();
};


// Class Squad.SQRandomizer
// 0x0018 (0x0348 - 0x0330)
class ASQRandomizer : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	int                                                RandomSeed;                                               // 0x0338(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x033C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRandomizer");
		return ptr;
	}


	void OnRep_RandomSeed();
	int BPRandRange(int Min, int Max);
	struct FLinearColor BPRandHSVColor(const struct FLinearColor& BaseColor, bool bRandomizeHue, float MinHue, float MaxHue, bool bRandomizeSaturation, float MinSaturation, float MaxSaturation, bool bRandomizeValue, float MinValue, float MaxValue, bool bRandomizeAlpha, float MinAlpha, float MaxAlpha);
	struct FLinearColor BPRandColor(const struct FLinearColor& BaseColor, bool bRandomizeRed, float MinRed, float MaxRed, bool bRandomizeGreen, float MinGreen, float MaxGreen, bool bRandomizeBlue, float MinBlue, float MaxBlue, bool bRandomizeAlpha, float MinAlpha, float MaxAlpha);
	float BPFRandRange(float Min, float Max);
	void BPBeginSeededPlay();
};


// Class Squad.SQRandomizer_SceneComponent
// 0x0000 (0x0348 - 0x0348)
class ASQRandomizer_SceneComponent : public ASQRandomizer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRandomizer_SceneComponent");
		return ptr;
	}


	void ShowRandomComponent();
	void DisableAllComponents();
};


// Class Squad.SQRandomizer_StaticMesh
// 0x0018 (0x0360 - 0x0348)
class ASQRandomizer_StaticMesh : public ASQRandomizer
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UStaticMesh*>                         Meshes;                                                   // 0x0350(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRandomizer_StaticMesh");
		return ptr;
	}


	void SetMesh(int Index);
};


// Class Squad.SQRearmSource
// 0x0000 (0x0028 - 0x0028)
class USQRearmSource : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRearmSource");
		return ptr;
	}


	bool UnbindEventToAmmoUpdated(const struct FScriptDelegate& Delegate);
	ESQRearmType GetRearmType();
	struct FString GetRearmSuccessString();
	struct FString GetRearmNoAmmoString();
	float GetAmmo();
	bool ConsumeAmmo(float AmmoRequired);
	bool CanRearmWeapon(class ASQEquipableItem* Weapon);
	bool CanRearmPawn(class APawn* Rearmer);
	bool BindEventToAmmoUpdated(const struct FScriptDelegate& Delegate);
};


// Class Squad.SQRepairEquipable
// 0x0018 (0x0598 - 0x0580)
class ASQRepairEquipable : public ASQEquipableItem
{
public:
	float                                              TraceLengthCentimeters;                                   // 0x0580(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0584(0x0004) MISSED OFFSET
	class ASQVehicle*                                  RepairTarget;                                             // 0x0588(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // 0x0590(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRepairEquipable");
		return ptr;
	}


	void OnRep_RepairedTarget(class ASQVehicle* PreviousRepairedTarget);
};


// Class Squad.SQRepairTool
// 0x0018 (0x05B0 - 0x0598)
class ASQRepairTool : public ASQRepairEquipable
{
public:
	class USQRepairToolStaticInfo*                     RepairToolStaticInfo;                                     // 0x0598(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                TimerHandle;                                              // 0x05A0(0x0008)
	bool                                               bUseHammer;                                               // 0x05A8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x05A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRepairTool");
		return ptr;
	}


	void ServerStopRepairing();
	void ServerStartRepairing(class ASQVehicle* RepairedVehicle);
};


// Class Squad.SQRepairToolStaticInfo
// 0x0070 (0x0548 - 0x04D8)
class USQRepairToolStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                RepairingWeaponBeginUseMontage;                           // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Repairing1pBeginUseMontage;                               // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Repairing3pBeginUseMontage;                               // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RepairingWeaponEndUseMontage;                             // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Repairing1pEndUseMontage;                                 // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Repairing3pEndUseMontage;                                 // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                AltRepairingWeaponBeginUseMontage;                        // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                AltRepairing1pBeginUseMontage;                            // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                AltRepairing3pBeginUseMontage;                            // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                AltRepairingWeaponEndUseMontage;                          // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                AltRepairing1pEndUseMontage;                              // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                AltRepairing3pEndUseMontage;                              // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   RepairingSound;                                           // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RepairingInterval;                                        // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RepairAmount;                                             // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRepairToolStaticInfo");
		return ptr;
	}

};


// Class Squad.SQReplicationGraph
// 0x0278 (0x0568 - 0x02F0)
class USQReplicationGraph : public UReplicationGraph
{
public:
	TArray<class UClass*>                              SpatializedClasses;                                       // 0x02F0(0x0010) (ZeroConstructor)
	TArray<class UClass*>                              NonSpatializedChildClasses;                               // 0x0300(0x0010) (ZeroConstructor)
	TArray<class UClass*>                              AlwaysRelevantClasses;                                    // 0x0310(0x0010) (ZeroConstructor)
	class UReplicationGraphNode_ActorList*             AlwaysRelevantNode;                                       // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReplicationGraphNode_GridSpatialization2D*  GridNode;                                                 // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData)
	TMap<int, class USQReplicationGraphNode_GridSpatialization2DEx*> TeamGridNodes;                                            // 0x0330(0x0050) (ZeroConstructor)
	TMap<int, class UReplicationGraphNode_ActorList*>  TeamAlwaysRelevantNodes;                                  // 0x0380(0x0050) (ZeroConstructor)
	TMap<struct FTeamSquadId, class UReplicationGraphNode_ActorList*> TeamSquadsAlwaysRelevantNodes;                            // 0x03D0(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x148];                                     // 0x0420(0x0148) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQReplicationGraph");
		return ptr;
	}

};


// Class Squad.SQReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0238 (0x0288 - 0x0050)
class USQReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x228];                                     // 0x0050(0x0228) MISSED OFFSET
	class AActor*                                      LastPawn;                                                 // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0280(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQReplicationGraphNode_AlwaysRelevant_ForConnection");
		return ptr;
	}

};


// Class Squad.SQReplicationGraphNode_PlayerStateFrequencyLimiter
// 0x0030 (0x0080 - 0x0050)
class USQReplicationGraphNode_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0050(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQReplicationGraphNode_PlayerStateFrequencyLimiter");
		return ptr;
	}

};


// Class Squad.SQReplicationGraphNode_GridSpatialization2DEx
// 0x0060 (0x0220 - 0x01C0)
class USQReplicationGraphNode_GridSpatialization2DEx : public UReplicationGraphNode_GridSpatialization2D
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET
	unsigned char                                      UnknownData01[0x50];                                      // 0x01C0(0x0050) UNKNOWN PROPERTY: SetProperty Squad.SQReplicationGraphNode_GridSpatialization2DEx.AvoidCullingConnections

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQReplicationGraphNode_GridSpatialization2DEx");
		return ptr;
	}

};


// Class Squad.SQRichTextBlock
// 0x09A8 (0x0AA8 - 0x0100)
class USQRichTextBlock : public UWidget
{
public:
	struct FText                                       Text;                                                     // 0x0100(0x0018) (Edit)
	struct FScriptDelegate                             TextDelegate;                                             // 0x0118(0x0014) (ZeroConstructor, InstancedReference)
	struct FSlateFontInfo                              Font;                                                     // 0x0128(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FLinearColor                                Color;                                                    // 0x0180(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlateFontInfo                              HyperlinkFont;                                            // 0x0190(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FLinearColor                                HyperlinkColor;                                           // 0x01E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextJustify>                          Justification;                                            // 0x01F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AutoWrapText;                                             // 0x01F9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x01FA(0x0002) MISSED OFFSET
	float                                              WrapTextAt;                                               // 0x01FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FMargin                                     Margin;                                                   // 0x0200(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LineHeightPercentage;                                     // 0x0210(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	struct FText                                       TextWithMarkup;                                           // 0x0218(0x0018)
	unsigned char                                      UnknownData02[0x878];                                     // 0x0230(0x0878) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRichTextBlock");
		return ptr;
	}

};


// Class Squad.SQRoleList
// 0x0098 (0x02A0 - 0x0208)
class USQRoleList : public USQUserWidget
{
public:
	bool                                               bCanRunTick;                                              // 0x0208(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	TArray<class USQRoleListGroup*>                    RoleGroupWidgets;                                         // 0x0210(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<class USQRoleListUnit*>                     RoleUnitWidgets;                                          // 0x0220(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	int                                                GridColumns;                                              // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	class ASQPlayerState*                              OwnerPlayerState;                                         // 0x0238(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerController*                         OwnerController;                                          // 0x0240(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0248(0x0050) UNKNOWN PROPERTY: SetProperty Squad.SQRoleList.CachedRoles
	class UClass*                                      RoleWidgetType;                                           // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRoleList");
		return ptr;
	}


	void InitWidget();
	void DoTick();
	void DisableAllRoleTicks();
};


// Class Squad.SQRoleListGroup
// 0x0038 (0x0240 - 0x0208)
class USQRoleListGroup : public USQUserWidget
{
public:
	ESQRoleTypeEnum                                    RoleType;                                                 // 0x0208(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	struct FText                                       GroupHeaderText;                                          // 0x0210(0x0018) (Edit, BlueprintVisible)
	class UCanvasPanel*                                GroupHeader;                                              // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUniformGridPanel*                           RoleGrid;                                                 // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQPlayerState*                              OwnerPlayerState;                                         // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRoleListGroup");
		return ptr;
	}


	void InitWidget();
	struct FText GroupAvailabilityText();
};


// Class Squad.SQRoleListUnit
// 0x00D0 (0x02D8 - 0x0208)
class USQRoleListUnit : public USQUserWidget
{
public:
	bool                                               bCanTick;                                                 // 0x0208(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	class UCanvasPanel*                                SizeCanvas;                                               // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      MainBgImage;                                              // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      KitNameBgImage;                                           // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      KitIcon;                                                  // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      SpecialIcon;                                              // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  KitNameTextBlock;                                         // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  KitCountTeamTextBlock;                                    // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  KitCountTextBlock;                                        // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      RoleToolTipWidgetClass;                                   // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                BgColorSelectedRole;                                      // 0x0258(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                BgColorNotAvaliable;                                      // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                BgColorNotSelectedRole;                                   // 0x0278(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                ColorKitIconAvailable;                                    // 0x0288(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                ColorKitIconUnavailable;                                  // 0x0298(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  SquadLeaderAbilityIcon;                                   // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  MedicAbilityIcon;                                         // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USQRoleSettings*                             RoleReference;                                            // 0x02B8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              OwnerPlayerState;                                         // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWidgetAnimation*                            OpenAnimation;                                            // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundCue*                                   MouseEnterSoundCue;                                       // 0x02D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRoleListUnit");
		return ptr;
	}


	void SelfTick();
	void InitWidget();
};


// Class Squad.SQRoleSettings
// 0x00C0 (0x00F0 - 0x0030)
class USQRoleSettings : public UDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  UiIcon;                                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  SpecialWeaponIcon;                                        // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       Role_Details;                                             // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Role_Specifics;                                           // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       Role_Specifics_ActionName;                                // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Role_Specifics_ActionName1;                               // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSQRoleLimit                                DefaultLimit;                                             // 0x0098(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly)
	ESQRoleTypeEnum                                    RoleType;                                                 // 0x00BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	class UClass*                                      SoldierClass;                                             // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	class UAnimMontage*                                SoldierMenuAnimMontage;                                   // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bLeavingSquadChangesRole;                                 // 0x00D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	TArray<struct FSQInventoryWeaponGroupData>         TestInventory;                                            // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	ESQVehicleRoleAbility                              VehicleAbility;                                           // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanBuild;                                                // 0x00E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanPlaceRallyPoint;                                      // 0x00EA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanSeeHealthStatus;                                      // 0x00EB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLeader;                                                // 0x00EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMedic;                                                 // 0x00ED(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsRecruit;                                               // 0x00EE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x00EF(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRoleSettings");
		return ptr;
	}

};


// Class Squad.SQRotatingMovementComponent
// 0x00A0 (0x0270 - 0x01D0)
class USQRotatingMovementComponent : public USQMovementComponentBase
{
public:
	class USceneComponent*                             UpdatedComponent;                                         // 0x01D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	float                                              InputMultiplier;                                          // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              ErrorTolerance;                                           // 0x01DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              AngularDeltaCombineThreshold;                             // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FSQRotationConstraints                      RotationConstraints;                                      // 0x01E4(0x001C) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0200(0x0030) MISSED OFFSET
	struct FSQRotationRepMovement                      RotationReplicatedMovement;                               // 0x0230(0x0040) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRotatingMovementComponent");
		return ptr;
	}


	void OnRep_RotationReplicatedMovement();
	struct FRotator GetCurrentRotationVelocity();
	void ClientAdjustRotation(float Timestamp, const struct FVector& InRotation);
	void AddRotationInput(const struct FRotator& InRotationInput);
};


// Class Squad.SQRotationMovementAudioComponent
// 0x0070 (0x06D0 - 0x0660)
class USQRotationMovementAudioComponent : public UAudioComponent
{
public:
	class USQMovementComponentBase*                    PitchMovementComponent;                                   // 0x0660(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQMovementComponentBase*                    YawMovementComponent;                                     // 0x0668(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	ESQRotationMovementState                           RotationMovementState;                                    // 0x0670(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0671(0x0007) MISSED OFFSET
	class USoundBase*                                  StartingSound;                                            // 0x0678(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  MovingSound;                                              // 0x0680(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  StoppingSound;                                            // 0x0688(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SlowIdleDuration;                                         // 0x0690(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SlowIdleTickInterval;                                     // 0x0694(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IdleFadeOutDuration;                                      // 0x0698(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartingDuration;                                         // 0x069C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MovingToStoppingDuration;                                 // 0x06A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StoppingDuration;                                         // 0x06A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x06A8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRotationMovementAudioComponent");
		return ptr;
	}

};


// Class Squad.SQRotorSetup
// 0x00A8 (0x00D8 - 0x0030)
class USQRotorSetup : public UDataAsset
{
public:
	struct FName                                       RotorName;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RotorClass;                                               // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Mass;                                                     // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ThrustAxis;                                               // 0x0048(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ThrustVectoring;                                          // 0x0054(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThrustCoefficient;                                        // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FName                                       ThrustSocketName;                                         // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TorqueMultiplier;                                         // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationalTorqueMultiplier;                               // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThrustMultiplier;                                         // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FName                                       AnimatedSocketName;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimationSpeedMultiplier;                                 // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ESQAxis                                            AnimationAxis;                                            // 0x008C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	class UCurveFloat*                                 StartupAcceleration;                                      // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartupAccelerationFactor;                                // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 StoppingDeceleration;                                     // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StoppingDecelerationFactor;                               // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 NoInputDeceleration;                                      // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DecelerationMultiplier;                                   // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 InputAcceleration;                                        // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InputFactor;                                              // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRPM;                                                   // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IdleRPM;                                                  // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ESQRotorType                                       RotorType;                                                // 0x00D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRotorSetup");
		return ptr;
	}

};


// Class Squad.SQRotor
// 0x0038 (0x0060 - 0x0028)
class USQRotor : public UObject
{
public:
	class USQRotorSetup*                               RotorSetup;                                               // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) MISSED OFFSET
	class UObject*                                     WorldContextObject;                                       // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRotor");
		return ptr;
	}

};


// Class Squad.SQVehicleEngine
// 0x0000 (0x06D0 - 0x06D0)
class USQVehicleEngine : public USQVehicleComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleEngine");
		return ptr;
	}


	bool IsEngineToggleActive();
	bool IsEngineActive();
	float GetCurrentEngineToggleRequiredDuration();
	float GetCurrentEngineTogglePercentage();
};


// Class Squad.SQVehicleEngineComponent
// 0x00B0 (0x0780 - 0x06D0)
class USQVehicleEngineComponent : public USQVehicleEngine
{
public:
	struct FScriptMulticastDelegate                    OnEngineActiveEvent;                                      // 0x06D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USoundCue*                                   EngineStartSound;                                         // 0x06E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   EngineStopSound;                                          // 0x06E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   EngineRPMSound;                                           // 0x06F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   EngineExhaustSound;                                       // 0x06F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   LandingSound;                                             // 0x0700(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EngineIdleFadeInAfterEngineStartTime;                     // 0x0708(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EngineIdleFadeOutAfterEngineStopTime;                     // 0x070C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GearChangingAlphaLerpSpeed;                               // 0x0710(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0714(0x0004) MISSED OFFSET
	TArray<struct FSQEngineMovementSoundObject>        EngineMovementSounds;                                     // 0x0718(0x0010) (Edit, ZeroConstructor)
	class UAudioComponent*                             EngineExhaustStartAC;                                     // 0x0728(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineRPMAC;                                              // 0x0730(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineExhaustAC;                                          // 0x0738(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineExhaustStopAC;                                      // 0x0740(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineStartAC;                                            // 0x0748(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineStopAC;                                             // 0x0750(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             EngineSpeedAC;                                            // 0x0758(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ExhaustPSC;                                               // 0x0760(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bIsEngineActive;                                          // 0x0768(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEngineToggleActive;                                    // 0x0769(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x076A(0x0002) MISSED OFFSET
	float                                              ActivateEngineDelay;                                      // 0x076C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeActivateEngineDelay;                                    // 0x0770(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0774(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleEngineComponent");
		return ptr;
	}


	void ServerSetEngineToggleActiveInput(bool bInIsEngineToggleActive);
	void ServerSetEngineActiveInput(bool bNewEngineActive);
	void OnRep_EngineToggleActive();
	void OnRep_EngineActive();
};


// Class Squad.SQRotorComponent
// 0x0000 (0x0780 - 0x0780)
class USQRotorComponent : public USQVehicleEngineComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRotorComponent");
		return ptr;
	}

};


// Class Squad.SQRotorVehicleMovementComponent
// 0x0030 (0x0310 - 0x02E0)
class USQRotorVehicleMovementComponent : public USQForceNetMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02E0(0x0008) MISSED OFFSET
	TArray<class USQRotor*>                            Rotors;                                                   // 0x02E8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x18];                                      // 0x02F8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRotorVehicleMovementComponent");
		return ptr;
	}


	void ToggleRotorLockByType(ESQRotorType RotorType);
	void AddThrustByType(ESQRotorType RotorType, float Thrust);
	void AddThrust(int RotorIdx, float Thrust);
};


// Class Squad.SQRulesetState
// 0x0000 (0x0330 - 0x0330)
class ASQRulesetState : public AInfo
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQRulesetState");
		return ptr;
	}

};


// Class Squad.SQSaveGameWrapper
// 0x0030 (0x0058 - 0x0028)
class USQSaveGameWrapper : public UObject
{
public:
	class UClass*                                      SaveGameClass;                                            // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     SlotName;                                                 // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bClientOnly;                                              // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class USaveGame*                                   SaveGame;                                                 // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSaveGameWrapper");
		return ptr;
	}


	void SetSavedGame(class USaveGame* NewSaveGame);
	void Save();
	class USaveGame* GetSavedGame();
};


// Class Squad.SQScoreboard
// 0x00B0 (0x02B8 - 0x0208)
class USQScoreboard : public USQUserWidget
{
public:
	class USQScoreboardTeam*                           ScoreboardFriendly;                                       // 0x0208(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQScoreboardTeam*                           ScoreboardEnemy;                                          // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQPlayerController*                         SQPC;                                                     // 0x0218(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQGameState*                                SQGameState;                                              // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                UpdateStateTimerHandle;                                   // 0x0228(0x0008) (BlueprintVisible)
	class UClass*                                      ScoreboardTeamType;                                       // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       WinningTeamText;                                          // 0x0238(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       TicketsRemainingText;                                     // 0x0250(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       DrawText;                                                 // 0x0268(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UImage*                                      GameTimeClockImage;                                       // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  RemainingGameTimeText;                                    // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ScoreboardFlairFlag1;                                     // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ScoreboardFlairFlag2;                                     // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  GameResultText;                                           // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  GameResultTicketsRemaining;                               // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                GameResultCanvas;                                         // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQScoreboard");
		return ptr;
	}


	void UpdateState();
	void InitWidget();
};


// Class Squad.SQScoreboardPlayer
// 0x0198 (0x03A0 - 0x0208)
class USQScoreboardPlayer : public USQUserWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0208(0x0010) MISSED OFFSET
	class USQStatefulButton*                           TalkingButton;                                            // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQPlayerController*                         SQPC;                                                     // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              SQPlayerState;                                            // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              OwnerSQPlayerState;                                       // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0238(0x0018) MISSED OFFSET
	struct FLinearColor                                SelfColor;                                                // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OtherColor;                                               // 0x0260(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                BleedingColor;                                            // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IncapColor;                                               // 0x0280(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                DeadColor;                                                // 0x0290(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  BleedingTexture;                                          // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  IncapTexture;                                             // 0x02A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  DeadTexture;                                              // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       HealthTooltipDead;                                        // 0x02B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       HealthTooltipIncap;                                       // 0x02D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       HealthTooltipBleeding;                                    // 0x02E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bShowAllStats;                                            // 0x0300(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFriendlyScoreboard;                                    // 0x0301(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0302(0x0006) MISSED OFFSET
	class UCanvasPanel*                                LeaderPanel;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              EndOfRoundPanel;                                          // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpacer*                                     NotEndOfRoundSpacer;                                      // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  LeaderText;                                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  PlayerNameText;                                           // 0x0328(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  KillsText;                                                // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  IncapsText;                                               // 0x0338(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DeathsText;                                               // 0x0340(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  RevivesText;                                              // 0x0348(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  HealsText;                                                // 0x0350(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TeamworkText;                                             // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ObjectivesText;                                           // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ScoreText;                                                // 0x0368(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  PingText;                                                 // 0x0370(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      LeaderTypeImage;                                          // 0x0378(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      FireteamImage;                                            // 0x0380(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      HealthStateImage;                                         // 0x0388(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      VehicleImage;                                             // 0x0390(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      RoleImage;                                                // 0x0398(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQScoreboardPlayer");
		return ptr;
	}


	void UpdateState();
	void OnMutePlayer(int CurrentState);
	void InitWidget();
	void ChangeVoipColor(ESQRemoteTalkerDisplayChannel Channel);
};


// Class Squad.SQScoreboardSquad
// 0x00D8 (0x02E0 - 0x0208)
class USQScoreboardSquad : public USQUserWidget
{
public:
	class ASQPlayerController*                         SQPC;                                                     // 0x0208(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQSquadState*                               SquadState;                                               // 0x0210(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FPlayerWidgetPair>                   DisplayedPlayers;                                         // 0x0218(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bShowAllStats;                                            // 0x0228(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAccumulativeLifetimeScores;                           // 0x0229(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x022A(0x0002) MISSED OFFSET
	struct FLinearColor                                OwnSquadColor;                                            // 0x022C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FriendlySquadColor;                                       // 0x023C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                EnemySquadColor;                                          // 0x024C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFriendlyScoreboard;                                    // 0x025C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x025D(0x0003) MISSED OFFSET
	class UClass*                                      ScoreboardPlayerType;                                     // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UHorizontalBox*                              EndOfRoundHorizontalBox;                                  // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  PlayersGrid;                                              // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpacer*                                     NotEndOfRoundSpacer;                                      // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadNumberText;                                          // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadNameText;                                            // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadKillsText;                                           // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadIncapsText;                                          // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadDeathsText;                                          // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadRevivesText;                                         // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadHealsText;                                           // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadTeamworkText;                                        // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadObjectiveText;                                       // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadScoreText;                                           // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      SquadColorImage;                                          // 0x02D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      SquadTalkingImage;                                        // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQScoreboardSquad");
		return ptr;
	}


	void UpdateState();
	void InitWidget();
};


// Class Squad.SQScoreboardTeam
// 0x0178 (0x0380 - 0x0208)
class USQScoreboardTeam : public USQUserWidget
{
public:
	class USQScoreboardTeamScore*                      ScoreboardTeamScore;                                      // 0x0208(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              EndOfRoundHorizontalBox;                                  // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                TopVerticalBox;                                           // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpacer*                                     NotEndOfRoundSpacer;                                      // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpacer*                                     EnemyTeamPingAligner;                                     // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHorizontalBox*                              TeamHorizontalBox;                                        // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  SquadsGrid;                                               // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                NonSquadPlayersCanvasPanel;                               // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGridPanel*                                  PlayersGrid;                                              // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ColoredHeaderTabImage;                                    // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      RemainingTicketsImage;                                    // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ColoredHeaderBarImage;                                    // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      FlagImage;                                                // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  PlayerNumberText;                                         // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  RemainingTicketsText;                                     // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TeamNameText;                                             // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQPlayerController*                         SQPC;                                                     // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              SQPlayerState;                                            // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQTeamState*                                SQTeamState;                                              // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQGameState*                                SQGameState;                                              // 0x02A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQScoreboardPlayer*                         OwnerPlayerWidget;                                        // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQScoreboardSquad*                          OwnerPlayerSquadWidget;                                   // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                TeamKills;                                                // 0x02B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamDeaths;                                               // 0x02BC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamIncaps;                                               // 0x02C0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamWounds;                                               // 0x02C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamRevives;                                              // 0x02C8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamHeals;                                                // 0x02CC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamTeamKills;                                            // 0x02D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamTeamwork;                                             // 0x02D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamObjective;                                            // 0x02D8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamScore;                                                // 0x02DC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FriendlyTeamColor;                                        // 0x02E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                EnemyTeamColor;                                           // 0x02F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFriendlyScoreboard;                                    // 0x0300(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowAllStats;                                            // 0x0301(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0302(0x0002) MISSED OFFSET
	float                                              EndOfRoundEnemyWidth;                                     // 0x0304(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DuringRoundEnemyWidth;                                    // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x030C(0x0004) MISSED OFFSET
	struct FText                                       RemainingTicketsTextString;                               // 0x0310(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PlayersText;                                              // 0x0328(0x0018) (Edit, BlueprintVisible)
	TArray<struct FSquadWidgetPair>                    DisplayedSquads;                                          // 0x0340(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FPlayerWidgetPair>                   DisplayedPlayers;                                         // 0x0350(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FSQRemoteTalkerDisplayInfo>          FormerTalkers;                                            // 0x0360(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      ScoreboardSquadType;                                      // 0x0370(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ScoreboardPlayerType;                                     // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQScoreboardTeam");
		return ptr;
	}


	void UpdateState();
	void UpdateSquads();
	void UpdatePlayers();
	void UpdatePlayerJoinedSquad(class ASQPlayerState* Player);
	void UpdateAllSpeakers(TArray<struct FSQRemoteTalkerDisplayInfo> CurrentTalkers);
	void ToggleShowAllStats();
	void SortSquads();
	void InitWidget();
	void CreateNewSquad(class ASQSquadState* NewSquad);
	void CreateNewPlayer(class ASQTeamState* Team, class ASQPlayerState* Player);
	void CleanDataForWidget();
};


// Class Squad.SQScoreboardTeamScore
// 0x0050 (0x0258 - 0x0208)
class USQScoreboardTeamScore : public USQUserWidget
{
public:
	class UHorizontalBox*                              EndOfRoundPanel;                                          // 0x0208(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpacer*                                     NotEndOfRoundSpacer;                                      // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  KillsText;                                                // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  IncapsText;                                               // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DeathsText;                                               // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  RevivesText;                                              // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  HealsText;                                                // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TeamworkText;                                             // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ObjectivesText;                                           // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ScoreText;                                                // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQScoreboardTeamScore");
		return ptr;
	}


	void InitWidget();
};


// Class Squad.SQScoreboardWidgetStyle
// 0x0108 (0x0138 - 0x0030)
class USQScoreboardWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct FSQScoreboardStyle                          ScoreboardStyle;                                          // 0x0030(0x0108) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQScoreboardWidgetStyle");
		return ptr;
	}

};


// Class Squad.SQSeatProgressWidget
// 0x0018 (0x0220 - 0x0208)
class USQSeatProgressWidget : public UUserWidget
{
public:
	float                                              TotalTime;                                                // 0x0208(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x020C(0x0004) MISSED OFFSET
	class ASQVehicle*                                  WithVehicle;                                              // 0x0210(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESeatProgressMenuMode                              MenuMode;                                                 // 0x0218(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0219(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSeatProgressWidget");
		return ptr;
	}


	void FinishOnServer();
	void BPOnTimerStarted();
	void BPOnTimerCanceled();
	void BPOnShowVehicleInventory();
};


// Class Squad.SQServerBrowserWidget
// 0x0038 (0x0240 - 0x0208)
class USQServerBrowserWidget : public USQUserWidget
{
public:
	ESQSortStates                                      ServerNameSortedState;                                    // 0x0208(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQSortStates                                      MapNameSortedState;                                       // 0x0209(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQSortStates                                      GameModeSortedState;                                      // 0x020A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQSortStates                                      NumPlayersSortedState;                                    // 0x020B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQSortStates                                      PingSortedState;                                          // 0x020C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x020D(0x0003) MISSED OFFSET
	TArray<class USQServerListItemWidget*>             SessionList;                                              // 0x0210(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<class UUserWidget*>                         SessionSortList;                                          // 0x0220(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	bool                                               bCanStartNewFindSessions;                                 // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	class USQFindSessionsCallbackProxy*                CurrentCallback;                                          // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQServerBrowserWidget");
		return ptr;
	}


	void UpdateSortedState(ESQSortLevels SortLevel);
	void UpdateIndexes();
	void StartFindSessions();
	void SortServerName(bool bIsAscending);
	void SortPing(bool bIsAscending);
	void SortNumPlayers(bool bIsAscending);
	void SortMapName(bool bIsAscending);
	void SortGameMode(bool bIsAscending);
	void SortByName(ESQSortLevels SortByColumn, bool bIsAscending);
	void ResetSortedState();
	void OnUpdateSession(TArray<struct FBlueprintSessionResult> Results);
	void OnSuccess(TArray<struct FBlueprintSessionResult> Results);
	void OnFindSessionsNewSessionUpdate(const struct FBlueprintSessionResult& SessionResult);
	void OnFindSessionsCompleted(TArray<struct FBlueprintSessionResult> Results, bool bSuccess);
	void OnFindSessionsCancelled();
	void OnFailure();
};


// Class Squad.SQServerListItemWidget
// 0x0168 (0x0370 - 0x0208)
class USQServerListItemWidget : public UUserWidget
{
public:
	int                                                ItemIndex;                                                // 0x0208(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x020C(0x0004) MISSED OFFSET
	struct FBlueprintSessionResult                     SessionResult;                                            // 0x0210(0x00B8) (BlueprintVisible)
	struct FString                                     ServerName;                                               // 0x02C8(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bAnticheatProtected;                                      // 0x02D8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsModded;                                                // 0x02D9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWhitelisted;                                           // 0x02DA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x02DB(0x0005) MISSED OFFSET
	struct FString                                     GameVersion;                                              // 0x02E0(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FSQSessionFlagStruct                        SessionFlagStruct;                                        // 0x02F0(0x0008) (BlueprintVisible)
	int                                                ServerHealth;                                             // 0x02F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLicensedServer;                                          // 0x02FC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02FD(0x0003) MISSED OFFSET
	int                                                MatchTimeout;                                             // 0x0300(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPasswordProtected;                                       // 0x0304(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0305(0x0003) MISSED OFFSET
	struct FString                                     MapName;                                                  // 0x0308(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     GameMode;                                                 // 0x0318(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                Ping;                                                     // 0x0328(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumPlayers;                                               // 0x032C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumPlayers;                                            // 0x0330(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumReservedSlots;                                         // 0x0334(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumQueuedTotal;                                           // 0x0338(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumQueuedPublic;                                          // 0x033C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumQueuedReservedMembers;                                 // 0x0340(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	struct FSQModInfoRequest                           ModDetailsRequest;                                        // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FSQModLoadProgress>                  ModLoadProgressArray;                                     // 0x0360(0x0010) (BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQServerListItemWidget");
		return ptr;
	}


	void SetSession(const struct FBlueprintSessionResult& Result);
	void ServerConnectionCheckUpdate(const struct FSQConnectionCheckResponse& UpdateResponse);
	struct FString GetServerURL();
	void ClientJoinAccepted();
	TArray<struct FSQModLoadProgress> CheckMissingMods();
};


// Class Squad.SQShockwave
// 0x00A8 (0x00D0 - 0x0028)
class USQShockwave : public UObject
{
public:
	ESQShockwaveEffectType                             ShockwaveEffectType;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              Strength;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSQShockwaveQualitySetting>          ShockwaveQualitySettings;                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FSQCameraShake                              CameraShake;                                              // 0x0040(0x0020) (Edit, BlueprintVisible)
	struct FSQCameraShake                              SecondaryCameraShake;                                     // 0x0060(0x0020) (Edit, BlueprintVisible)
	int                                                VerticalSteps;                                            // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HorizontalSteps;                                          // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    DefaultRotation;                                          // 0x0088(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DefaultLocationOffset;                                    // 0x0094(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PitchRange;                                               // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              YawRange;                                                 // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CullingDistance;                                          // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NearbyExplosionEventRadius;                               // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxSoundsToSpawn;                                         // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxDecalsToSpawn;                                         // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugLines;                                              // 0x00BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugSpheres;                                            // 0x00BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00BE(0x0002) MISSED OFFSET
	class UParticleSystem*                             Emitter;                                                  // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultEffectsClass;                                      // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQShockwave");
		return ptr;
	}


	void NearbyExplosionEvent(class AActor* ProjectileActor, const struct FVector& Location, float DistanceFromEffect);
	struct FSQShockwaveQualitySetting GetShockwaveSetting();
	void Explode(class UWorld* World, class AActor* ProjectileActor, const struct FVector& Location);
};


// Class Squad.SQShockwaveDirected
// 0x0008 (0x00D8 - 0x00D0)
class USQShockwaveDirected : public USQShockwave
{
public:
	bool                                               bFractionalOffsettingForHorizontalSteps;                  // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQShockwaveDirected");
		return ptr;
	}

};


// Class Squad.SQShovelStaticInfo
// 0x0030 (0x0508 - 0x04D8)
class USQShovelStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                DigWeaponMontage;                                         // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Dig1pMontage;                                             // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Dig3pMontage;                                             // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                DestroyWeaponMontage;                                     // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Destroy1pMontage;                                         // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Destroy3pMontage;                                         // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQShovelStaticInfo");
		return ptr;
	}

};


// Class Squad.SQSimpleMovementComponent
// 0x0040 (0x0210 - 0x01D0)
class USQSimpleMovementComponent : public USQMovementComponentBase
{
public:
	TScriptInterface<class USQMeshOwnerInterface>      UpdatedMeshOwner;                                         // 0x01D0(0x0030) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x01E0(0x0024) MISSED OFFSET
	float                                              LocationInputAcceleration;                                // 0x0204(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationInputAcceleration;                                // 0x0208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x020C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSimpleMovementComponent");
		return ptr;
	}


	void AddRotationInput(const struct FRotator& InRotationInput);
	void AddMoveInput(const struct FVector& InMoveInput);
};


// Class Squad.SQSoldierStaticInfo
// 0x0010 (0x0040 - 0x0030)
class USQSoldierStaticInfo : public UDataAsset
{
public:
	float                                              MaximumReviveTime;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReviveRecoveryPerSecond;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DamageRevivePenaltyCurve;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoldierStaticInfo");
		return ptr;
	}

};


// Class Squad.SQSoldierAnimInstance
// 0x03D0 (0x0730 - 0x0360)
class USQSoldierAnimInstance : public UAnimInstance
{
public:
	class ASQSoldier*                                  Soldier;                                                  // 0x0360(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSoldierAlive;                                          // 0x0368(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0369(0x0003) MISSED OFFSET
	struct FVector                                     LeftHandIKLocation;                                       // 0x036C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftHandIKAlpha;                                          // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightHandIKLocation;                                      // 0x037C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightHandIKAlpha;                                         // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CustomWeaponAimOffset;                                    // 0x038C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CustomWeaponOffset;                                       // 0x0398(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CustomWeaponRotOffset;                                    // 0x03A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Sway;                                                     // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeedPercentage;                                       // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeed;                                                 // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Direction;                                                // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    SmoothWorldDirection;                                     // 0x03C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SmoothVelocity;                                           // 0x03D4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AccelRateClamp;                                           // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Aim;                                                      // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                AimOffsetCurve;                                           // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponOffsetFromAim;                                      // 0x03F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInVehicle;                                             // 0x03FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03FD(0x0003) MISSED OFFSET
	float                                              VehiclePitch;                                             // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleYaw;                                               // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FireAnimTime;                                             // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FireAnimTime2;                                            // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FireAnimStartTime;                                        // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FireAnimStartTime2;                                       // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bOutOfAmmo;                                               // 0x0418(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0419(0x0003) MISSED OFFSET
	float                                              TriggerPullDuration;                                      // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TriggerTime;                                              // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bReloading;                                               // 0x0424(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0425(0x0003) MISSED OFFSET
	struct FSQDynamicEasingStruct                      LeaningEasing;                                            // 0x0428(0x0014) (Edit, BlueprintVisible)
	bool                                               bADS;                                                     // 0x043C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInThirdPersonView;                                     // 0x043D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bProne;                                                   // 0x043E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCrouching;                                               // 0x043F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGrenadeUnderhand;                                        // 0x0440(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGrenadeOverhand;                                         // 0x0441(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0442(0x0002) MISSED OFFSET
	float                                              AimMovement;                                              // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimSpeed;                                                 // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimSpeedPercentage;                                       // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQDynamicEasingStruct                      AimMovementEasing;                                        // 0x0450(0x0014) (Edit, BlueprintVisible)
	float                                              AimMovementEasingPosition;                                // 0x0464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimMovementEasingPositionMinus1ABS;                       // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQDynamicEasingStruct                      ProneEasing;                                              // 0x046C(0x0014) (Edit, BlueprintVisible)
	float                                              PronePct;                                                 // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneSpeed;                                               // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneSpeedPercentage;                                     // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQDynamicEasingStruct                      ProneMovementEasing;                                      // 0x048C(0x0014) (Edit, BlueprintVisible)
	struct FSQDynamicEasingStruct                      CrouchEasing;                                             // 0x04A0(0x0014) (Edit, BlueprintVisible)
	float                                              CrouchPct;                                                // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchSpeed;                                              // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchSpeedPercentage;                                    // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQDynamicEasingStruct                      CrouchMovementEasing;                                     // 0x04C0(0x0014) (Edit, BlueprintVisible)
	float                                              SprintSpeed;                                              // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedPercentage;                                          // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSQDynamicEasingStruct                      SprintEasing;                                             // 0x04DC(0x0014) (Edit, BlueprintVisible)
	float                                              PinPullAlpha;                                             // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PouchReachAlpha;                                          // 0x04F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimNegRollRotation;                                       // 0x04F8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimDivNeg4RollRotation;                                   // 0x0504(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimNegBool;                                               // 0x0510(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimDiv80ABS;                                              // 0x0514(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    SwayRotator;                                              // 0x0518(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0524(0x0004) MISSED OFFSET
	class UAnimSequence*                               TriggerAnim;                                              // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TriggerAnimAlpha;                                         // 0x0530(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0534(0x0004) MISSED OFFSET
	class UAnimSequence*                               RecoilAnim;                                               // 0x0538(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoilAnimAlpha;                                          // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SprintEasingPosition;                                     // 0x0544(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneMovementEasingPosition;                              // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneEasingPosition;                                      // 0x054C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchMovementEasingPosition;                             // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchEasingPosition;                                     // 0x0554(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Aim3pAlpha;                                               // 0x0558(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Aim3pClampedAlpha;                                        // 0x055C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneAimAlpha;                                            // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneAimAlpha2;                                           // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneSpeedPlayRate;                                       // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunAimAlpha;                                              // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimOffsetLeanRotation;                                    // 0x0570(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AimOffsetLeanLocation;                                    // 0x057C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneSpeedInterpolation;                                  // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchSpeedInterpolation;                                 // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneSpeedClamp;                                          // 0x0590(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchSpeedClamp;                                         // 0x0594(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeedClampInterpolation;                               // 0x0598(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DirectionRotateVectorAroundAxis;                          // 0x059C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimLeanRotationHalf;                                      // 0x05A8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimLeanRotationFull;                                      // 0x05B4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AimLeanRotationFullAndAHalf;                              // 0x05C0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GrenadeWalkAlpha;                                         // 0x05CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               BoltAnim;                                                 // 0x05D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BoltAnimReloadingAlpha;                                   // 0x05D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BoltAnimNotReloadingAlpha;                                // 0x05DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldLockBolt;                                          // 0x05E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x05E1(0x0003) MISSED OFFSET
	float                                              BoltAnimExplicitTime;                                     // 0x05E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQGrenadeState                                    GrenadeState;                                             // 0x05E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGrenadeStateIsIdle;                                      // 0x05E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGrenadeStateIsReloading;                                 // 0x05EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGrenadeStateIsPreparing;                                 // 0x05EB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGrenadeStateIsThrowing;                                  // 0x05EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x05ED(0x0003) MISSED OFFSET
	class ASQEquipableItem*                            EquippableItem;                                           // 0x05F0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQEquipableItem*                            CachedEquippableItem;                                     // 0x05F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               DefaultSprintBlendSpace;                                  // 0x0600(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               DefaultWalkForwardAnim;                                   // 0x0608(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               DefaultUseAnim;                                           // 0x0610(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               DefaultStandAnim;                                         // 0x0618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               DefaultEquipAnim;                                         // 0x0620(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               DefaultUnequipAnim;                                       // 0x0628(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               SprintBlendspace;                                         // 0x0630(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WalkForwardAnim;                                          // 0x0638(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               IdleAnim;                                                 // 0x0640(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               UseAnim;                                                  // 0x0648(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               StandAnim;                                                // 0x0650(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               EquipAnim;                                                // 0x0658(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               UnequipAnim;                                              // 0x0660(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AltUseAnim;                                               // 0x0668(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Custom1Anim;                                              // 0x0670(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Custom2Anim;                                              // 0x0678(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Custom3Anim;                                              // 0x0680(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PreUseAnim;                                               // 0x0688(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PostUseAnim;                                              // 0x0690(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PreAltUseAnim;                                            // 0x0698(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PostAltUseAnim;                                           // 0x06A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IdleAnimValidAlpha;                                       // 0x06A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AltUseAnimValidAlpha;                                     // 0x06AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Custom1AnimValidAlpha;                                    // 0x06B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Custom2AnimValidAlpha;                                    // 0x06B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Custom3AnimValidAlpha;                                    // 0x06B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PreUseAnimValidAlpha;                                     // 0x06BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PostUseAnimValidAlpha;                                    // 0x06C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PreAltUseAnimValidAlpha;                                  // 0x06C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PostAltUseAnimValidAlpha;                                 // 0x06C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESQWeaponAnimType                                  WeaponAnimType;                                           // 0x06CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQWeaponAnimType                                  CachedWeaponAnimType;                                     // 0x06CD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWeaponAnimTypeIsRifle;                                   // 0x06CE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWeaponAnimTypeIsGrenade;                                 // 0x06CF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWeaponAnimTypeIsEquippable;                              // 0x06D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESQEquippableState                                 EquippableState;                                          // 0x06D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQEquippableState                                 CachedEquippableState;                                    // 0x06D2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEquippableStateEquipped;                                 // 0x06D3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEquippableStateEquipping;                                // 0x06D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEquippableStateUnequipped;                               // 0x06D5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEquippableStateUnequipping;                              // 0x06D6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESQEquippableActionState                           ActionState;                                              // 0x06D7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQEquippableActionState                           CachedActionState;                                        // 0x06D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStateIdle;                                         // 0x06D9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStateUse;                                          // 0x06DA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStateAltUse;                                       // 0x06DB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStateCustom1;                                      // 0x06DC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStateCustom2;                                      // 0x06DD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStateCustom3;                                      // 0x06DE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStatePreUse;                                       // 0x06DF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStatePostUse;                                      // 0x06E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStatePreAltUse;                                    // 0x06E1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bActionStatePostAltUse;                                   // 0x06E2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x5];                                       // 0x06E3(0x0005) MISSED OFFSET
	class UAnimSequence*                               VehicleBaseAnim;                                          // 0x06E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 VehicleAimOffsets;                                        // 0x06F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWheelBlendSpace1D;                                    // 0x06F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x06F9(0x0007) MISSED OFFSET
	class UBlendSpace1D*                               VehicleWheelBlendSpace1D;                                 // 0x0700(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VehicleWheel;                                             // 0x0708(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CustomVehicleWheel1;                                      // 0x070C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // 0x0710(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomSteeringWheelAnimExplTime;                          // 0x0714(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHandIKAlphaEnabled;                                      // 0x0718(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0719(0x0003) MISSED OFFSET
	float                                              SteeringWheelAnimExplTime;                                // 0x071C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightHandAlpha;                                           // 0x0720(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftHandAlpha;                                            // 0x0724(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastVehicleWheelAbs;                                      // 0x0728(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleWheelAbsRate;                                      // 0x072C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoldierAnimInstance");
		return ptr;
	}


	void UpdateWeaponAnimTypes(float DeltaSeconds);
	void UpdateVehicle(float DeltaSeconds);
	void UpdateSteeringWheelVariables(float DeltaSeconds);
	void UpdateSpeed(float DeltaTime);
	void UpdateSmoothVelocity(const struct FVector& NewVelocity, float DeltaTime);
	void UpdateLeaning(float DeltaTime);
	void UpdateInvalidOrNotAlive(float DeltaTime);
	void UpdateFire(float DeltaTime);
	void UpdateFastPathVariables(float DeltaTime);
	void UpdateEquippableState(float DeltaSeconds);
	void UpdateEquippableAnimVariables(float DeltaTime);
	void UpdateDirection(float DeltaTime);
	void UpdateAim(float DeltaTime);
	void UpdateADS(float DeltaTime);
	void UpdateActionState(float DeltaSeconds);
	void PlayFire();
};


// Class Squad.SQSoldierMedicalComponent
// 0x0010 (0x0260 - 0x0250)
class USQSoldierMedicalComponent : public USceneComponent
{
public:
	float                                              AmmoPointsPerSecondHealth;                                // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0254(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoldierMedicalComponent");
		return ptr;
	}

};


// Class Squad.SQSoldierMovement
// 0x0150 (0x0870 - 0x0720)
class USQSoldierMovement : public UCharacterMovementComponent
{
public:
	class UCurveFloat*                                 SoldierDefaultInclineMovementSpeedCurve;                  // 0x0720(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WalkSpeedMultiplier;                                      // 0x0728(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StrafeSpeedMultiplier;                                    // 0x072C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BackwardsWalkSpeedMultiplier;                             // 0x0730(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OutsidePhysicsSpeedMultiplier;                            // 0x0734(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnimationSpeedLimiter;                                    // 0x0738(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SprintSpeedMultiplier;                                    // 0x073C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSprintAcceleration;                                    // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               WasRunning;                                               // 0x0744(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0745(0x0003) MISSED OFFSET
	float                                              MaxWalkSpeedProne;                                        // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProneHalfHeight;                                          // 0x074C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCanWalkOffLedgesWhenProne : 1;                           // 0x0750(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanSprintWhenCrouched : 1;                               // 0x0750(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bWantsToProne : 1;                                        // 0x0750(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bProneMaintainsBaseLocation : 1;                          // 0x0750(0x0001) (Edit, BlueprintVisible, DisableEditOnTemplate, EditConst)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0751(0x0003) MISSED OFFSET
	float                                              StickyGroundMultiplier;                                   // 0x0754(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Stamina;                                                  // 0x0758(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              StaminaMax;                                               // 0x075C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TiredThreshold;                                           // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExhaustedThreshold;                                       // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExhaustedPenalty;                                         // 0x0768(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStaminaExhausted;                                        // 0x076C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x076D(0x0003) MISSED OFFSET
	float                                              StaminaRegenRate;                                         // 0x0770(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HurtStaminaRegenRate;                                     // 0x0774(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHurt;                                                  // 0x0778(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0779(0x0003) MISSED OFFSET
	float                                              UpdateStaminaFrequency;                                   // 0x077C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                StaminaUpdateTimerHandle;                                 // 0x0780(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	float                                              WalkPenalty;                                              // 0x0788(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ClimbingPenalty;                                          // 0x078C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MovePenalty;                                              // 0x0790(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SprintPenalty;                                            // 0x0794(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CrouchPenalty;                                            // 0x0798(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CrouchSprintPenalty;                                      // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PronePenalty;                                             // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProneSprintPenalty;                                       // 0x07A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLimitConsecutiveJumping : 1;                             // 0x07A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData04[0x3];                                       // 0x07A9(0x0003) MISSED OFFSET
	float                                              ConsecutiveJumpingPenaltyReductionTime;                   // 0x07AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      ConsecutiveJumpingVelocityMultipliers;                    // 0x07B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                ConsecutiveJumpingArrayIndex;                             // 0x07C0(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              LastJumpPenaltyChangeTime;                                // 0x07C4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bStaminaLimitsRunning : 1;                                // 0x07C8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStaminaLimitsJumping : 1;                                // 0x07C8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData05[0x3];                                       // 0x07C9(0x0003) MISSED OFFSET
	float                                              StaminaUseThreshold;                                      // 0x07CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bJumpingUsesStamina : 1;                                  // 0x07D0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData06[0x3];                                       // 0x07D1(0x0003) MISSED OFFSET
	float                                              StaminaLossPerJump;                                       // 0x07D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x07D8(0x0008) MISSED OFFSET
	TArray<struct FVector>                             ClimbMovePath;                                            // 0x07E0(0x0010) (ZeroConstructor)
	TArray<float>                                      ClimbInterpolationTimes;                                  // 0x07F0(0x0010) (ZeroConstructor)
	float                                              BipodMaxAnglePerIteration;                                // 0x0800(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x14];                                      // 0x0804(0x0014) MISSED OFFSET
	class ASQSoldier*                                  SquadCharacterOwner;                                      // 0x0818(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                ServerUpdateRate;                                         // 0x0820(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                NonRenderedUpdateRate;                                    // 0x0824(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                NearByNonRenderedUpdateRate;                              // 0x0828(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                NearByNonRenderedUpdateRateDistance;                      // 0x082C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TArray<float>                                      DistanceFactorThesholds;                                  // 0x0830(0x0010) (ZeroConstructor, Config)
	TArray<class USkinnedMeshComponent*>               SkinnedComponents;                                        // 0x0840(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0850(0x0008) MISSED OFFSET
	unsigned char                                      UnknownData10 : 2;                                        // 0x0858(0x0001)
	unsigned char                                      bAimDownSights : 1;                                       // 0x0858(0x0001) (Net)
	unsigned char                                      UnknownData11[0x17];                                      // 0x0859(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoldierMovement");
		return ptr;
	}


	void UpdateStamina();
	void SetIsHurt(bool bHurt);
	bool IsWalkPressed();
	bool IsStaminaOverThreshold();
	bool IsSprintPressed();
	bool IsSprinting();
	bool IsProne();
	bool IsLeaningRight();
	bool IsLeaningLeft();
	bool IsAimingDownSights();
	float GetProneWeight();
	float GetJumpVelocity();
	float GetCrouchWeight();
	bool CanSprint();
	bool CanRun();
	bool CanJump();
	bool CanCrouchInCurrentState();
	float CalculateStamina(float Penalty);
};


// Class Squad.SQSoldierNew
// 0x0540 (0x1AD0 - 0x1590)
class ASQSoldierNew : public ASQSoldier
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x1590(0x0030) MISSED OFFSET
	class UAnimMontage*                                IdleMontage;                                              // 0x15C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSQClimbData                                ClimbData;                                                // 0x15C8(0x0178) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bClimbingEnabled;                                         // 0x1740(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x1741(0x0007) MISSED OFFSET
	struct FSQClimbInfo                                ClimbInfo;                                                // 0x1748(0x0030) (Net)
	unsigned char                                      UnknownData02[0x88];                                      // 0x1778(0x0088) MISSED OFFSET
	class USQBoundaryListener*                         BoundaryListener;                                         // 0x1800(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x1808(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      UpperMesh1P;                                              // 0x1810(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         SpringArm1P;                                              // 0x1818(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USQItemStaticInfo*                           CurrentItemStaticInfo;                                    // 0x1820(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQBotComponent*                             BotComponent;                                             // 0x1828(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FRotator                                    ControlRotation;                                          // 0x1830(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    AimRotation1P;                                            // 0x183C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RequiredProneTransitionTime;                              // 0x1848(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsUsingItem;                                       // 0x184C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsUsingGrenade;                                    // 0x184D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedLeanLeft;                                          // 0x184E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedLeanRight;                                         // 0x184F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedFwdPct;                                             // 0x1850(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedStrafePct;                                          // 0x1854(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShot;                                                    // 0x1858(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bWasCrouchedBeforeProne;                                  // 0x1859(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCameraRecoilActive;                                    // 0x185A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x185B(0x0001) MISSED OFFSET
	float                                              SpringArmTargetHeight1p;                                  // 0x185C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SpringArmHeight1pInterpSpeed;                             // 0x1860(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TempSpringArmHeight1p;                                    // 0x1864(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentSpringArmHeight1p;                                 // 0x1868(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Base1pOffset;                                             // 0x186C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RawBase1pOffset;                                          // 0x1878(0x000C) (ZeroConstructor, IsPlainOldData)
	bool                                               bSwitchedSoldierStance;                                   // 0x1884(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x1885(0x0003) MISSED OFFSET
	class UAudioComponent*                             BreathingAC;                                              // 0x1888(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  CalmBreathing;                                            // 0x1890(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  MediumBreathing;                                          // 0x1898(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  HeavyBreathing;                                           // 0x18A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ExhaustedBreathing;                                       // 0x18A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ViewMode3p;                                               // 0x18B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ViewPos3p;                                                // 0x18B4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ViewDistance3p;                                           // 0x18C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ViewOrientation3p;                                        // 0x18C4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ViewScrollDistance3p;                                     // 0x18D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ViewAdjustingDelta3p;                                     // 0x18D4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ViewTogglePressTime;                                      // 0x18E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAdjustingView3p;                                         // 0x18E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLastInThirdPersonView;                                   // 0x18E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x18E6(0x0002) MISSED OFFSET
	struct FTimerHandle                                UpdateBreathingTimerHandle;                               // 0x18E8(0x0008) (Edit, BlueprintVisible)
	float                                              UpdateBreathingTimerDuration;                             // 0x18F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x18F4(0x0004) MISSED OFFSET
	class UAnimMontage*                                StartCrouch_1P_Montage;                                   // 0x18F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                EndCrouch_1P_Montage;                                     // 0x1900(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQFreeLookComponent*                        FreeLookComponent;                                        // 0x1908(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FRotator                                    VaultClimbAo;                                             // 0x1910(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CachedVaultClimbAo2;                                      // 0x191C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedVaultClimbAoYawInterpSpeed;                         // 0x1928(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedVaultClimbAoPitchInterpSpeed;                       // 0x192C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQEquipableItem*                            PreviousWeapon;                                           // 0x1930(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPreviousWeaponMagHasAmmo;                                // 0x1938(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCachedIsSprinting;                                       // 0x1939(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x6];                                       // 0x193A(0x0006) MISSED OFFSET
	class USceneComponent*                             WeaponDeviationRot;                                       // 0x1940(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bAccuracyDebugVisible;                                    // 0x1948(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x1949(0x0007) MISSED OFFSET
	class USQAnimInstanceSoldier3P*                    CachedAnimInstance3p;                                     // 0x1950(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQAnimInstanceSoldier1P*                    CachedAnimInstance1p;                                     // 0x1958(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SoldierPlayTime1p;                                        // 0x1960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SoldierPlayTime3p;                                        // 0x1964(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bipod3pSkelMeshOffset;                                    // 0x1968(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BeginBipod3pSkelMeshOffset;                               // 0x196C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CachedBipodTransitionAlpha;                               // 0x1970(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsBipodDeployed;                                         // 0x1974(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x1975(0x0003) MISSED OFFSET
	struct FVector                                     BipodHitLocZeroBased;                                     // 0x1978(0x000C) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x1984(0x0004) MISSED OFFSET
	class USceneComponent*                             BipodObject;                                              // 0x1988(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData12[0xC];                                       // 0x1990(0x000C) MISSED OFFSET
	struct FVector                                     CachedDeployed1pBipodLocation;                            // 0x199C(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              BipodHitLocSpringArm1PHeight;                             // 0x19A8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BipodNonDeployedSpringArm1pRelativeHeight;                // 0x19AC(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x74];                                      // 0x19B0(0x0074) MISSED OFFSET
	float                                              BipodSpringArmFloorTraceLength;                           // 0x1A24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DeployedBipodCapsuleRadius;                               // 0x1A28(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodClientServerAcceptableRange;                         // 0x1A2C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodObjectMaxDelta;                                      // 0x1A30(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodDepth;                                               // 0x1A34(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodStandingMinDeployHeight;                             // 0x1A38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodStandingMaxDeployHeight;                             // 0x1A3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodCrouchingMinDeployHeight;                            // 0x1A40(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodCrouchingMaxDeployHeight;                            // 0x1A44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodProneMinDeployHeight;                                // 0x1A48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodProneMaxDeployHeight;                                // 0x1A4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodCameraProbeSize;                                     // 0x1A50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x1A54(0x0004) MISSED OFFSET
	bool                                               bWeaponLowered;                                           // 0x1A58(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x1A59(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPawnPossessedEvent;                                     // 0x1A60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPawnUnPossessedEvent;                                   // 0x1A70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USQAnimDataEmotes*                           EmoteData;                                                // 0x1A80(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSQVoipAnim                                 MouthAnim;                                                // 0x1A88(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSQVoipAnim                                 HandActionRadioAnim;                                      // 0x1AA8(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsPlayingVoipHandAnim;                                   // 0x1AC8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x7];                                       // 0x1AC9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoldierNew");
		return ptr;
	}


	bool WeaponMagazineHasAmmo();
	void UpdateToProneCapsuleMotion(float DeltaSeconds);
	void UpdateStaticItemInfo(class USQItemStaticInfo* InfoObject);
	void UpdateCachedAnimInstance3p();
	void UpdateBreathingSound();
	void Update1pRelativeLocation();
	void Update1pCamStanceHeight(float DeltaSeconds);
	void ToggleViewReleased();
	void ToggleViewPressed();
	void ToggleThirdPersonView();
	void ToggleBipod();
	void TickUpdateThirdPersonView(float DeltaTime);
	void ServerRetractBipod();
	void ServerLowerWeapon(bool bValue);
	void ServerDeployBipod(const struct FVector& RemoteBipodDeploymentLocationZeroBased, const struct FVector& RemoteActorLocationZeroBased);
	void ServerClimb(const struct FTransform& ClientTransformZeroBased, const struct FSQClimbInfo& ClientInfo);
	void PlayOrStopMontage(class UAnimInstance* AnimInstance, class UAnimMontage* Montage, bool bStopAnimation, float blendOutTime);
	void PlayOrStopAnimations(class UAnimMontage* FirstPersonAnim, class UAnimMontage* ThirdPersonAnim, bool bStopAnimation, float blendOutTime);
	void OutOfBoundsKillCallback();
	void OnRep_WeaponLoweredChanged(bool bVal);
	void OnRep_ClimbInfo(const struct FSQClimbInfo& PrevClimbInfo);
	void OnRep_Bipod(bool bBipodWasDeployed);
	void OnPossessionChanged__DelegateSignature();
	void OnExitBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary);
	void OnEquip__DelegateSignature(class USQItemStaticInfo* StaticInfo);
	void OnEnterBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary);
	void On_RepIsPlayingVoipHandAnim();
	void MulticastPlayEmoteAnim(ESQEmotes Emote);
	void MulticastPlayCustomEmote(const struct FName& CustomName);
	bool IsWeaponLowered();
	bool IsPullingTriggerOnWeapon();
	bool IsOutOfMapBounds();
	bool IsMontagePlaying(class UAnimMontage* FirstPersonAnim, class UAnimMontage* ThirdPersonAnim);
	bool IsClimbing(bool bRequiredOnly);
	void InputClimb();
	void IncreaseCameraDistance();
	void DecreaseCameraDistance();
	void ClientRejectClimb();
	void ClientRejectBipod();
	bool CheckItemCollision();
	bool CanZoom();
	void CalcCamera_BP(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV);
};


// Class Squad.SQSoldierRagdollComponent
// 0x00A0 (0x0190 - 0x00F0)
class USQSoldierRagdollComponent : public UActorComponent
{
public:
	float                                              TimeTillAutoGetUp;                                        // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoGetUpRetryFrequency;                                  // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoveryBlendSeconds;                                     // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FreezeBodyCheckFrequency;                                 // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PelvisBoneName;                                           // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicsAsset*                               RagdollPhysicsAsset;                                      // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CorrectionBaseRatio;                                      // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CorrectionMaxAddedRatio;                                  // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ErrorStateSecondsToMaxRatio;                              // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LinearErrorThreshold;                                     // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LinearVelocitySleepThreshold;                             // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BulletImpactMultiplier;                                   // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExplosionImpactMultiplier;                                // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SecondsWithVehicleCollision;                              // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESQSoldierRagdollReason                            RagdollState;                                             // 0x0130(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	struct FVector_NetQuantize100                      ServerPelvisLocationZeroBased;                            // 0x0134(0x000C) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FVector                                     UnragdolLocationOffset;                                   // 0x0140(0x000C) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x014C(0x0014) MISSED OFFSET
	unsigned char                                      bBodyHasSettled : 1;                                      // 0x0160(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0161(0x0007) MISSED OFFSET
	class ASQEquipableItem*                            DroppedWeapon;                                            // 0x0168(0x0008) (ZeroConstructor, IsPlainOldData)
	class ASQSoldierNew*                               OwnerSoldier;                                             // 0x0170(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0178(0x0010) MISSED OFFSET
	class UPhysicsHandleComponent*                     FreezeBodyConstraintHandle;                               // 0x0188(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoldierRagdollComponent");
		return ptr;
	}


	void SetRagdollState(ESQSoldierRagdollReason NewRagdollState);
	void ServerSetRagdollState(ESQSoldierRagdollReason NewRagdollState);
	void OnRep_RagdollState();
	bool IsInRagdoll();
	ESQSoldierRagdollReason GetRagdollState();
};


// Class Squad.SQSoundNodeDistanceDelay
// 0x0010 (0x0048 - 0x0038)
class USQSoundNodeDistanceDelay : public USoundNode
{
public:
	float                                              SpeedOfSound;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelayMax;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TestDistance;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeDistanceDelay");
		return ptr;
	}

};


// Class Squad.SQSoundNodeFixedDistanceCrossFade
// 0x0018 (0x0050 - 0x0038)
class USQSoundNodeFixedDistanceCrossFade : public USoundNode
{
public:
	TArray<struct FSQDistanceDatum>                    CrossFadeInput;                                           // 0x0038(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor)
	float                                              TestDistance;                                             // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeFixedDistanceCrossFade");
		return ptr;
	}

};


// Class Squad.SQSoundNodeFixedDistanceSwitch
// 0x0028 (0x0060 - 0x0038)
class USQSoundNodeFixedDistanceSwitch : public USoundNode
{
public:
	TArray<float>                                      TransitionDistancesInMeters;                              // 0x0038(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor)
	TArray<float>                                      InputVolumes;                                             // 0x0048(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor)
	float                                              TestDistance;                                             // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeFixedDistanceSwitch");
		return ptr;
	}

};


// Class Squad.SQSoundNodeFlyBy
// 0x0018 (0x0050 - 0x0038)
class USQSoundNodeFlyBy : public USoundNode
{
public:
	float                                              SpeedOfSound;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MidpointTime;                                             // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DopplerIntensity;                                         // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseListenerLocationForSoundSource;                       // 0x0044(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideSpatialization;                                  // 0x0045(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseSpatialization;                                       // 0x0046(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	float                                              TestPitchRelativeVelocityInMeters;                        // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TestStartTime;                                            // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeFlyBy");
		return ptr;
	}

};


// Class Squad.SQSoundNodeEmitterListenerAudioVolumeSwitch
// 0x0008 (0x0040 - 0x0038)
class USQSoundNodeEmitterListenerAudioVolumeSwitch : public USoundNode
{
public:
	ESQAudioVolumeType                                 TestAudioVolumeType;                                      // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsListener;                                              // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeEmitterListenerAudioVolumeSwitch");
		return ptr;
	}

};


// Class Squad.SQSoundNodeListenerType
// 0x0008 (0x0040 - 0x0038)
class USQSoundNodeListenerType : public USoundNode
{
public:
	bool                                               bLooping;                                                 // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRestartSoundWaveWhenListenerTypeChanges;                 // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	float                                              ListenerTypeCheckFrequency;                               // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeListenerType");
		return ptr;
	}

};


// Class Squad.SQSoundNodeLooping
// 0x0070 (0x00A8 - 0x0038)
class USQSoundNodeLooping : public USoundNode
{
public:
	bool                                               bIgnoreStartingBufferRequests;                            // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FName                                       StoppingBoolParameterName;                                // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ContinueFiringBoolParameterName;                          // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       QueuedSoundMaxLimitParameterName;                         // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class USoundWave*>                          StartingSounds;                                           // 0x0058(0x0010) (Edit, ZeroConstructor)
	TArray<class USoundWave*>                          LoopingSounds;                                            // 0x0068(0x0010) (Edit, ZeroConstructor)
	TArray<class USoundWave*>                          FinishingSounds;                                          // 0x0078(0x0010) (Edit, ZeroConstructor)
	int                                                MinSamplesToInject;                                       // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxSamplesToInject;                                       // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SampleRate;                                               // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCreateStereoSoundWave;                                   // 0x0094(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	class USoundConcurrency*                           SoundConcurrencySettings;                                 // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDuration;                                              // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TestShotCount;                                            // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeLooping");
		return ptr;
	}

};


// Class Squad.SQSoundNodePhysMatSwitch
// 0x0018 (0x0050 - 0x0038)
class USQSoundNodePhysMatSwitch : public USoundNode
{
public:
	int                                                TestPhysMatIndex;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayDefaultSoundIfPinIsEmpty;                            // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	TArray<class UPhysicalMaterial*>                   PhysMatInputs;                                            // 0x0040(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodePhysMatSwitch");
		return ptr;
	}

};


// Class Squad.SQSoundNodeRandom
// 0x0040 (0x0078 - 0x0038)
class USQSoundNodeRandom : public USoundNode
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty Squad.SQSoundNodeRandom.Sounds
	TArray<float>                                      Weights;                                                  // 0x0048(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	int                                                PreselectAtLevelLoad;                                     // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRandomizeWithoutReplacement : 1;                         // 0x005C(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	TArray<struct FSQSoundWeight>                      RuntimeSounds;                                            // 0x0060(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	int                                                RuntimeNumRandomSoundsUsed;                               // 0x0070(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeRandom");
		return ptr;
	}

};


// Class Squad.SQSoundNodeWavePlayer
// 0x0018 (0x0050 - 0x0038)
class USQSoundNodeWavePlayer : public USoundNode
{
public:
	class USoundWave*                                  SoundWave;                                                // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLooping : 1;                                             // 0x0040(0x0001) (Edit)
	unsigned char                                      bRandomizeStartTime : 1;                                  // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              StartMin;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartMax;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeWavePlayer");
		return ptr;
	}

};


// Class Squad.SQSoundSplineActor
// 0x0028 (0x0358 - 0x0330)
class ASQSoundSplineActor : public AActor
{
public:
	class USplineComponent*                            Spline;                                                   // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USphereComponent*                            Sphere;                                                   // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bDrawDebugSphere;                                         // 0x0340(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebugPoints;                                         // 0x0341(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0342(0x0002) MISSED OFFSET
	float                                              DistanceAccuracy;                                         // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             Sound;                                                    // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class APlayerCameraManager*                        CachedPlayerCameraManager;                                // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundSplineActor");
		return ptr;
	}

};


// Class Squad.SQSoundWaveLooping
// 0x0048 (0x0250 - 0x0208)
class USQSoundWaveLooping : public USoundWave
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0208(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundWaveLooping");
		return ptr;
	}

};


// Class Squad.SQSoundNodeRandomStart
// 0x0008 (0x0040 - 0x0038)
class USQSoundNodeRandomStart : public USoundNode
{
public:
	float                                              StartMin;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartMax;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSoundNodeRandomStart");
		return ptr;
	}

};


// Class Squad.SQSquad
// 0x0468 (0x0798 - 0x0330)
class ASQSquad : public AInfo
{
public:
	TArray<class ASQMapMarker*>                        LatestSpotMarkers;                                        // 0x0330(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	TArray<class ASQMapMarker*>                        LatestActionMarkers;                                      // 0x0340(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	TArray<class ASQMapMarker*>                        LatestPOIMarkers;                                         // 0x0350(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	TArray<class ASQMapMarker*>                        LatestFireteamMarkers;                                    // 0x0360(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	TArray<class ASQMapMarker*>                        LatestRequestMarkers;                                     // 0x0370(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	class ASQTeam*                                     Team;                                                     // 0x0380(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      SquadStateClass;                                          // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class UClass*                                      TeamPrivateSquadStateClass;                               // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class UClass*                                      SquadRallyPointClass;                                     // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class ASQSquadState*                               SquadState;                                               // 0x03A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ASQSquadStatePrivateToTeam*                  TeamPrivateSquadState;                                    // 0x03A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ASQPlayerController*                         Leader;                                                   // 0x03B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RejoinSquadDelayAfterKick;                                // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	class ASQSquadRallyPoint*                          rallypoint;                                               // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RpMembersToPlaceRadius;                                   // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RpEnemiesNearCheckRadius;                                 // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RpNeededMembersToPlace;                                   // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RpNonSLMemberPunishment;                                  // 0x03D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       RpMembersErrorMessage;                                    // 0x03D8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RpMembersNonSlErrorMessage;                               // 0x03F0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RpTimerErrorMessage;                                      // 0x0408(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RpEnemiesNearErrorMessage;                                // 0x0420(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PlayerJoinedMessage;                                      // 0x0438(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PlayerLeftMessage;                                        // 0x0450(0x0018) (Edit, BlueprintVisible)
	struct FText                                       LeaderChangedMessage;                                     // 0x0468(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RpLeaderChangedTimeMessage;                               // 0x0480(0x0018) (Edit, BlueprintVisible)
	float                                              RpLastPlacementTime;                                      // 0x0498(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RpTimeToReset;                                            // 0x049C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RpEnemiesNearbyTimeSubtract;                              // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RpLeaderChangedResetTime;                                 // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRpUsesLeaderChangeResetTime;                             // 0x04A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               RpUsesResetTimer;                                         // 0x04A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x04AA(0x0002) MISSED OFFSET
	int                                                ClaimingTotalNumMembersNeededTogether;                    // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClaimingMembersTogetherRadius;                            // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClaimingNumMembersInSquadForOne;                          // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClaimingNumMembersInSquadForTwo;                          // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClaimingNumMembersInSquadForThree;                        // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClaimingNumMembersInSquadForFour;                         // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClaimingTimeToExpire;                                     // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfMembersWithVehicleClaimToMakeSquadPartyToClaim;   // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	TArray<class USQVehicleClaim*>                     VehicleClaims;                                            // 0x04D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst)
	struct FText                                       ActiveVehicleClaimDroppedNearMainBaseMessage;             // 0x04E0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ActiveVehicleClaimDroppedNearFireBaseMessage;             // 0x04F8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ActiveVehicleClaimDroppedOnBattlefieldMessage;            // 0x0510(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ActiveVehicleClaimDestroyedMessage;                       // 0x0528(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ActiveVehicleClaimPickedUpMessage;                        // 0x0540(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NeedLeaderRoleToClaimVehicleMessage;                      // 0x0558(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OverVehicleClaimingLimitMessage;                          // 0x0570(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OverVehicleClaimingLimitActiveUseDetailsMessage;          // 0x0588(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OverVehicleClaimingLimitDestroyedDetailsMessage;          // 0x05A0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OverVehicleClaimingLimitLeftDetailsMessage;               // 0x05B8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OverVehicleClaimingLimitDestroyedOrLeftDetailsMessage;    // 0x05D0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OverVehicleClaimingLimitDestroyedOrLeftTimerMessage;      // 0x05E8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NotEnoughMembersForClaimingSingleVehicleMessage;          // 0x0600(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NotEnoughMembersNearToClaimVehicleMessage;                // 0x0618(0x0018) (Edit, BlueprintVisible)
	struct FText                                       VehicleClaimSuccessMessage;                               // 0x0630(0x0018) (Edit, BlueprintVisible)
	struct FText                                       UnableToReleaseOlderVehicleClaimMessage;                  // 0x0648(0x0018) (Edit, BlueprintVisible)
	struct FText                                       AnotherSquadClaimedOurVehicleMessage;                     // 0x0660(0x0018) (Edit, BlueprintVisible)
	struct FText                                       UnableToApproveVehicleClaimMessage;                       // 0x0678(0x0018) (Edit, BlueprintVisible)
	struct FText                                       KickedFromSquadMessage;                                   // 0x0690(0x0018) (Edit, BlueprintVisible)
	struct FText                                       LeftSquadMessage;                                         // 0x06A8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ForceRecruitKitMessage;                                   // 0x06C0(0x0018) (Edit, BlueprintVisible)
	TArray<struct FSQFireTeam>                         FireTeams;                                                // 0x06D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class USQConfig*                                   SquadConfig;                                              // 0x06E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ASQVehicle*                                  LastVehicleMemberFailedToEnter;                           // 0x06F0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x50];                                      // 0x06F8(0x0050) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerJoinSquad;                                        // 0x0748(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerPartSquad;                                        // 0x0758(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerBecomeSquadLeader;                                // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFireteamDisbanded;                                      // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFireteamUpdated;                                        // 0x0788(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquad");
		return ptr;
	}


	bool TryClaimVehicle(class ASQVehicle* Vehicle);
	void TryApproveVehicleClaim();
	void OnPlayerJoinPartSquadEvent__DelegateSignature(class ASQSquad* Squad, class ASQPlayerController* Player);
	void OnFireteamChangedEvent__DelegateSignature(class ASQSquad* Squad, int FireteamID);
	bool GiveSquadLeader(class ASQPlayerState* PlayerState);
	TArray<class USQVehicleClaim*> GetBlockingPartyVehicleClaims();
	TArray<class USQVehicleClaim*> GetBlockingDirectVehicleClaims();
};


// Class Squad.SQSquadList
// 0x0018 (0x0220 - 0x0208)
class USQSquadList : public USQUserWidget
{
public:
	bool                                               bIsOpening;                                               // 0x0208(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsClosing;                                               // 0x0209(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x020A(0x0006) MISSED OFFSET
	class ASQPlayerState*                              OwnerPlayerState;                                         // 0x0210(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASQPlayerController*                         OwnerPlayerController;                                    // 0x0218(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadList");
		return ptr;
	}


	void InitWidget();
};


// Class Squad.SQSquadMemberList
// 0x0078 (0x0280 - 0x0208)
class USQSquadMemberList : public USQUserWidget
{
public:
	class UClass*                                      SquadMemberListItemClass;                                 // 0x0208(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UImage*                                      BG_IMGCPP;                                                // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      IconImageCPP;                                             // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     InviteButtonCPP;                                          // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  InviteButtonTextCPP;                                      // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MemberCountCPP;                                           // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     LockButtonCPP;                                            // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadNameCPP;                                             // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  SquadNumberCPP;                                           // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVerticalBox*                                MemberListBoxCPP;                                         // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQPlayerController*                         ParentPC;                                                 // 0x0258(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0260(0x0018) MISSED OFFSET
	class ASQPlayerState*                              CurrentlyOpenedItemPS;                                    // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadMemberList");
		return ptr;
	}


	void RefreshSquadInfo();
	void RefreshList();
	void OnLockButtonClicked();
	void OnInviteButtonClicked();
	void Init();
};


// Class Squad.SQSpectatorMan
// 0x0050 (0x0408 - 0x03B8)
class ASQSpectatorMan : public ASpectatorPawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B8(0x0008) MISSED OFFSET
	ESQListenerType                                    ListenerType;                                             // 0x03C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03C1(0x0007) MISSED OFFSET
	class USpringArmComponent*                         SpringArm;                                                // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            FirstPersonCameraComponent;                               // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture*                                    CameraManHUDIconTexture;                                  // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTryingToGainAltitude;                                  // 0x03E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTryingToLoseAltitude;                                  // 0x03E1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x26];                                      // 0x03E2(0x0026) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSpectatorMan");
		return ptr;
	}


	void ServerSetFlySpeedTarget(float InFlySpeedTarget);
	void ServerSetDecelerationTarget(float InDecelerationTarget);
	void DrawHUD(class ASQHUD* SquadHUD, class UCanvas* Canvas);
};


// Class Squad.SQSquadRallyPoint
// 0x0010 (0x0508 - 0x04F8)
class ASQSquadRallyPoint : public ASQGameRallyPoint
{
public:
	class ASQSquad*                                    AuthoritySquad;                                           // 0x04F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class ASQSquadState*                               SquadState;                                               // 0x0500(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadRallyPoint");
		return ptr;
	}


	void OnRep_SquadState();
};


// Class Squad.SQSquadMemberListItem
// 0x00B0 (0x02B8 - 0x0208)
class USQSquadMemberListItem : public USQUserWidget
{
public:
	TArray<class UTexture2D*>                          RankTextures;                                             // 0x0208(0x0010) (BlueprintVisible, ZeroConstructor)
	class UButton*                                     ActionMenuBtnCPP;                                         // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     PromoteToSLBtnCPP;                                        // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     KickBtnCPP;                                               // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UButton*                                     SLInviteBtnCPP;                                           // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UVerticalBox*>                        MenuPanelsCPP;                                            // 0x0238(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	class UImage*                                      KitBGCPP;                                                 // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      KitIconCPP;                                               // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  NamePCPP;                                                 // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      NameBGCPP;                                                // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      RankBGCPP;                                                // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      RankIconCPP;                                              // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      VehicleBGCPP;                                             // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      VehicleIconCPP;                                           // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      WeaponIconCPP;                                            // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  PlayerNameCPP;                                            // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQPlayerState*                              PlayerStateIdentifier;                                    // 0x0298(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02A0(0x0004) MISSED OFFSET
	bool                                               bIsHovering;                                              // 0x02A4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB];                                       // 0x02A5(0x000B) MISSED OFFSET
	class USQSquadMemberList*                          Manager;                                                  // 0x02B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadMemberListItem");
		return ptr;
	}


	void ShowActionMenu(int MenuIdx);
	void OnSLInvite();
	void OnPromoteToSL();
	void OnKick();
	void OnActionButton();
	void InitEventHandlers();
	void BPInitWidgetRefs();
};


// Class Squad.SQSquadSelection
// 0x0038 (0x0240 - 0x0208)
class USQSquadSelection : public USQUserWidget
{
public:
	class ASQPlayerController*                         OwnerPlayerController;                                    // 0x0208(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCanvasPanel*                                CreateSquadCanvas;                                        // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQCreateSquadButton*                        CreateSquadButton;                                        // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UEditableTextBox*                            SquadNameTextBox;                                         // 0x0220(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UScrollBox*                                  SquadsList;                                               // 0x0228(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnNewSquadCreated;                                        // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadSelection");
		return ptr;
	}


	void ShowSquadCreationWidgets();
	void SelfTick();
	void RethrowSquadCreated();
	void LeaveSquad();
	void InitWidget();
	void HideSquadCreationWidgets();
};


// Class Squad.SQSquadState
// 0x00E0 (0x0410 - 0x0330)
class ASQSquadState : public AInfo
{
public:
	class ASQSquad*                                    AuthoritySquad;                                           // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxSize;                                                  // 0x0338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	int                                                NumKills;                                                 // 0x033C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumDeaths;                                                // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumWoundeds;                                              // 0x0344(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumWounds;                                                // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumTeamkills;                                             // 0x034C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              Score;                                                    // 0x0350(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              TeamWorkScore;                                            // 0x0354(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              ObjectiveScore;                                           // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              HealPoints;                                               // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              RevivedPoints;                                            // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	TArray<int>                                        IndexedRoleUsage;                                         // 0x0368(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	class USQCoreStateComponent*                       StateObject;                                              // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bIsCommandSquad;                                          // 0x0380(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0381(0x0003) MISSED OFFSET
	int                                                ID;                                                       // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                TeamID;                                                   // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	TArray<class ASQPlayerState*>                      PlayerStates;                                             // 0x0390(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	class ASQPlayerState*                              LeaderState;                                              // 0x03A0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x03A8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	bool                                               bIsLocked;                                                // 0x03B8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x57];                                      // 0x03B9(0x0057) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadState");
		return ptr;
	}


	void ScorePointsDelayed(int Points, const struct FString& Reason);
	void ScorePoints(int Points, const struct FString& Reason);
	void RemovePlayerState(class ASQPlayerState* PlayerState);
	void OnRep_TeamId();
	void OnRep_PlayerStates();
	void OnRep_Name();
	void OnRep_LeaderState(class ASQPlayerState* LastLeaderState);
	void OnRep_IsLocked();
	void OnRep_Id();
	void BroadcastPlayerLeaveEvent(class ASQPlayerState* PlayerState);
	void BroadcastPlayerJoinEvent(class ASQPlayerState* PlayerState);
	void BroadcastLeaderChangeEvent(class ASQPlayerState* PlayerState);
	void AddPlayerState(class ASQPlayerState* PlayerState);
};


// Class Squad.SQSquadStateData
// 0x0048 (0x0118 - 0x00D0)
class USQSquadStateData : public USQCoreStateData
{
public:
	ESQMapMarkerVisibleTo                              Visibility;                                               // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	TArray<class UClass*>                              AdminTypes;                                               // 0x00D8(0x0010) (Edit, ZeroConstructor)
	bool                                               bVisibleWhenNeutral;                                      // 0x00E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET
	class ASQSquadState*                               SquadState;                                               // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                SquadId;                                                  // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                TeamID;                                                   // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0100(0x0008) MISSED OFFSET
	class ASQSquadState*                               CachedSquadState;                                         // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateData");
		return ptr;
	}

};


// Class Squad.SQSquadStateMapData
// 0x0068 (0x0180 - 0x0118)
class USQSquadStateMapData : public USQSquadStateData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0118(0x0008) MISSED OFFSET
	class UClass*                                      MapWidgetClass;                                           // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WorldLocationTolerance;                                   // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInterpolateWorldLocation;                                // 0x012C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseWorldRotation;                                        // 0x012D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x012E(0x0002) MISSED OFFSET
	float                                              YawTolerance;                                             // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInterpolateYaw;                                          // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	struct FVector                                     WorldLocation;                                            // 0x0138(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Yaw;                                                      // 0x0144(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PackedYaw;                                                // 0x0148(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xB];                                       // 0x0149(0x000B) MISSED OFFSET
	struct FVector_NetQuantize                         RepWorldLocation;                                         // 0x0154(0x000C) (Net)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0160(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateMapData");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataDeployable
// 0x0008 (0x0188 - 0x0180)
class USQSquadStateDataDeployable : public USQSquadStateMapData
{
public:
	ESQBuildState                                      BuildState;                                               // 0x0180(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0181(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataDeployable");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataAmmoCrate
// 0x0000 (0x0188 - 0x0188)
class USQSquadStateDataAmmoCrate : public USQSquadStateDataDeployable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataAmmoCrate");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataPawn
// 0x0028 (0x01A8 - 0x0180)
class USQSquadStateDataPawn : public USQSquadStateMapData
{
public:
	bool                                               bHiddenWhenUnpossessed;                                   // 0x0180(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHiddenWhenNotLocallyControlled;                          // 0x0181(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideWidgetWhenUnpossessed;                               // 0x0182(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0183(0x0001) MISSED OFFSET
	float                                              CameraRotaionYawTolerance;                                // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class ASQPlayerState*                              OwnerPlayerState;                                         // 0x0188(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLocallyControlled : 1;                                   // 0x0190(0x0001) (Net)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0191(0x0007) MISSED OFFSET
	int                                                CachedPlayerId;                                           // 0x0198(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                FireTeamIndex;                                            // 0x019C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              CachedOwnerPlayerState;                                   // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataPawn");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataCaptureZone
// 0x0040 (0x01C0 - 0x0180)
class USQSquadStateDataCaptureZone : public USQSquadStateMapData
{
public:
	struct FText                                       FlagName;                                                 // 0x0180(0x0018) (Net)
	unsigned char                                      bUncappable : 1;                                          // 0x0198(0x0001) (Net)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0199(0x0007) MISSED OFFSET
	class UTexture2D*                                  FlagTexture;                                              // 0x01A0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  NeutralFlag;                                              // 0x01A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      OwningTeam;                                               // 0x01B0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CapturingTeam;                                            // 0x01B1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x01B2(0x0002) MISSED OFFSET
	uint32_t                                           TeamCapturabilities;                                      // 0x01B4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              CapturePercent;                                           // 0x01B8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataCaptureZone");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataDeployableExplosive
// 0x0008 (0x0190 - 0x0188)
class USQSquadStateDataDeployableExplosive : public USQSquadStateDataDeployable
{
public:
	ESQExplosiveType                                   ExplosiveType;                                            // 0x0188(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0189(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataDeployableExplosive");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataSQPawn
// 0x0000 (0x01A8 - 0x01A8)
class USQSquadStateDataSQPawn : public USQSquadStateDataPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataSQPawn");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataVehicleSeat
// 0x0000 (0x01A8 - 0x01A8)
class USQSquadStateDataVehicleSeat : public USQSquadStateDataSQPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataVehicleSeat");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataVehicle
// 0x00D0 (0x0278 - 0x01A8)
class USQSquadStateDataVehicle : public USQSquadStateDataVehicleSeat
{
public:
	class USQVehicleUIStaticDataAsset*                 StaticUIData;                                             // 0x01A8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHoldsOccupant : 1;                                       // 0x01B0(0x0001) (Net)
	unsigned char                                      bHoldsSquadLeader : 1;                                    // 0x01B0(0x0001) (Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01B1(0x0003) MISSED OFFSET
	int                                                ClaimingSquadID;                                          // 0x01B4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FVehicleOccupantsArray                      VehicleOccupants;                                         // 0x01B8(0x00C0) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataVehicle");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataEmplacement
// 0x0000 (0x0278 - 0x0278)
class USQSquadStateDataEmplacement : public USQSquadStateDataVehicle
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataEmplacement");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataForwardBase
// 0x0018 (0x01A0 - 0x0188)
class USQSquadStateDataForwardBase : public USQSquadStateDataDeployable
{
public:
	unsigned char                                      bCanSpawn : 1;                                            // 0x0188(0x0001) (Net)
	unsigned char                                      bSieged : 1;                                              // 0x0188(0x0001) (Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0189(0x0003) MISSED OFFSET
	float                                              ExclusionRadius;                                          // 0x018C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              ConstructionRadius;                                       // 0x0190(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              AmmoPoints;                                               // 0x0194(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              ConstructionPoints;                                       // 0x0198(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x019C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataForwardBase");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataHAB
// 0x0000 (0x0188 - 0x0188)
class USQSquadStateDataHAB : public USQSquadStateDataDeployable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataHAB");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataMapMarker
// 0x0020 (0x01A0 - 0x0180)
class USQSquadStateDataMapMarker : public USQSquadStateMapData
{
public:
	class UTexture2D*                                  Texture;                                                  // 0x0180(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Tint;                                                     // 0x0188(0x0010) (Net, ZeroConstructor, IsPlainOldData)
	int                                                FireteamID;                                               // 0x0198(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x019C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataMapMarker");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataMapMarkerObjective
// 0x0000 (0x01A0 - 0x01A0)
class USQSquadStateDataMapMarkerObjective : public USQSquadStateDataMapMarker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataMapMarkerObjective");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataMapMarkerSelectable
// 0x0008 (0x01A8 - 0x01A0)
class USQSquadStateDataMapMarkerSelectable : public USQSquadStateDataMapMarker
{
public:
	class USQMapIconComponent*                         MapIcon;                                                  // 0x01A0(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataMapMarkerSelectable");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataMapMarkerSpotted
// 0x0000 (0x01A8 - 0x01A8)
class USQSquadStateDataMapMarkerSpotted : public USQSquadStateDataMapMarkerSelectable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataMapMarkerSpotted");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataMapMarkerWaypoint
// 0x0000 (0x01A8 - 0x01A8)
class USQSquadStateDataMapMarkerWaypoint : public USQSquadStateDataMapMarkerSelectable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataMapMarkerWaypoint");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataPlayerState
// 0x0070 (0x0188 - 0x0118)
class USQSquadStateDataPlayerState : public USQSquadStateData
{
public:
	unsigned char                                      bIsSquadLeader : 1;                                       // 0x0118(0x0001) (Net)
	unsigned char                                      bIsFireTeamLeader : 1;                                    // 0x0118(0x0001) (Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	int                                                FireTeamIndex;                                            // 0x011C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                FireTeamPosition;                                         // 0x0120(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class USQRoleSettings*                             DeployRole;                                               // 0x0128(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0130(0x0010) (Net, ZeroConstructor)
	class USQVehicleUIStaticDataAsset*                 CurrentVehicleData;                                       // 0x0140(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ASQPlayerState*                              PlayerState;                                              // 0x0148(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                PlayerId;                                                 // 0x0150(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FSQCoreStateId                              SelectionComponentId;                                     // 0x0154(0x0002) (Net)
	ESQRemoteTalkerDisplayChannel                      VoipChannel;                                              // 0x0156(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsMuted;                                                 // 0x0157(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0158(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataPlayerState");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataSpawnPoint
// 0x0010 (0x0190 - 0x0180)
class USQSquadStateDataSpawnPoint : public USQSquadStateMapData
{
public:
	class ASQGameSpawn*                                OwningGameSpawn;                                          // 0x0180(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	ESQSpawnPointType                                  SpawnPointType;                                           // 0x0188(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0189(0x0003) MISSED OFFSET
	unsigned char                                      bSieged : 1;                                              // 0x018C(0x0001) (Net)
	unsigned char                                      bSpawningEnabled : 1;                                     // 0x018C(0x0001) (Net)
	unsigned char                                      UnknownData01[0x3];                                       // 0x018D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataSpawnPoint");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataRallyPoint
// 0x0008 (0x0198 - 0x0190)
class USQSquadStateDataRallyPoint : public USQSquadStateDataSpawnPoint
{
public:
	int                                                NumberOfSpawns;                                           // 0x0190(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0194(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataRallyPoint");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataRepairStation
// 0x0000 (0x0188 - 0x0188)
class USQSquadStateDataRepairStation : public USQSquadStateDataDeployable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataRepairStation");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataSoldier
// 0x0030 (0x01D8 - 0x01A8)
class USQSquadStateDataSoldier : public USQSquadStateDataPawn
{
public:
	float                                              HealthStatusRange;                                        // 0x01A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bIsBleeding : 1;                                          // 0x01AC(0x0001) (Net)
	unsigned char                                      bIsWounded : 1;                                           // 0x01AC(0x0001) (Net)
	unsigned char                                      bIsAlive : 1;                                             // 0x01AC(0x0001) (Net)
	unsigned char                                      bIsInVehicle : 1;                                         // 0x01AC(0x0001) (Net)
	unsigned char                                      bIsUsingFreeLook : 1;                                     // 0x01AC(0x0001) (Net)
	unsigned char                                      bIsMedic : 1;                                             // 0x01AC(0x0001) (Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01AD(0x0003) MISSED OFFSET
	struct FSQSoldierInfo                              SoldierInfo;                                              // 0x01B0(0x0028) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataSoldier");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataSquadState
// 0x0028 (0x0140 - 0x0118)
class USQSquadStateDataSquadState : public USQSquadStateData
{
public:
	struct FString                                     SquadName;                                                // 0x0118(0x0010) (Net, ZeroConstructor)
	struct FString                                     LeaderName;                                               // 0x0128(0x0010) (Net, ZeroConstructor)
	unsigned char                                      MemberNum;                                                // 0x0138(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0139(0x0003) MISSED OFFSET
	unsigned char                                      bIsLocked : 1;                                            // 0x013C(0x0001) (Net)
	unsigned char                                      bIsCommandSquad : 1;                                      // 0x013C(0x0001) (Net)
	unsigned char                                      UnknownData01[0x3];                                       // 0x013D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataSquadState");
		return ptr;
	}

};


// Class Squad.SQSquadStatePrivateToTeam
// 0x0020 (0x0350 - 0x0330)
class ASQSquadStatePrivateToTeam : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class ASQSquad*                                    AuthoritySquad;                                           // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQTeamStatePrivate*                         PrivateTeamState;                                         // 0x0340(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASQSquadState*                               SquadState;                                               // 0x0348(0x0008) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStatePrivateToTeam");
		return ptr;
	}

};


// Class Squad.SQStagingTimerText
// 0x0038 (0x0240 - 0x0208)
class USQStagingTimerText : public UUserWidget
{
public:
	int                                                NearZeroThreshold;                                        // 0x0208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x020C(0x0004) MISSED OFFSET
	class ASQTeamPrep*                                 TeamPrepRef;                                              // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTextBlock*                                  TextBlockCPP;                                             // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FText                                       StagingPhaseText;                                         // 0x0220(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0238(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQStagingTimerText");
		return ptr;
	}


	void OnFellBelowThreshold();
};


// Class Squad.SQStatefulButton
// 0x0058 (0x0260 - 0x0208)
class USQStatefulButton : public USQUserWidget
{
public:
	TArray<class UTexture2D*>                          StateImages;                                              // 0x0208(0x0010) (Edit, ZeroConstructor)
	struct FLinearColor                                NormalTint;                                               // 0x0218(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HoveredTint;                                              // 0x0228(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	class UImage*                                      CurrentImage;                                             // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bIsHovering;                                              // 0x0240(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0241(0x0003) MISSED OFFSET
	float                                              HoveringColorBlend;                                       // 0x0244(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoverColorBlendSpeed;                                     // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x024C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQStatefulButton");
		return ptr;
	}


	void OnPressed();
	int GetCurrentState();
	void ChangeImage(int ImageIndex);
};


// Class Squad.SQStaticTurretMovementComponent
// 0x0020 (0x0280 - 0x0260)
class USQStaticTurretMovementComponent : public USQNetMoveComponent
{
public:
	bool                                               bApplyRotationToUpdatedComponent;                         // 0x0260(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	class USceneComponent*                             YawComponent;                                             // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	class USceneComponent*                             PitchComponent;                                           // 0x0270(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0278(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQStaticTurretMovementComponent");
		return ptr;
	}

};


// Class Squad.SQSuppressionInfo
// 0x0020 (0x0048 - 0x0028)
class USQSuppressionInfo : public UObject
{
public:
	float                                              SuppressSwayFactorRelease;                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddSuppressSway;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSuppressSwayFactor;                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSuppressSwayFactor;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LofSuppressRange;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LofSuppressInterpSpeed;                                   // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LofSuppressAlphaFactor;                                   // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LofSuppressRotationAlphaRelease;                          // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSuppressionInfo");
		return ptr;
	}

};


// Class Squad.SQSwitchTeamButton
// 0x0008 (0x02C8 - 0x02C0)
class USQSwitchTeamButton : public USQBaseButton
{
public:
	class ASQPlayerController*                         OwnerPlayerController;                                    // 0x02C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSwitchTeamButton");
		return ptr;
	}

};


// Class Squad.SQTabButton
// 0x0028 (0x02E8 - 0x02C0)
class USQTabButton : public USQBaseButton
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET
	class UWidgetSwitcher*                             ParentWidgetSwitcher;                                     // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      MainBgImage;                                              // 0x02D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TabTextBlock;                                             // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQPlayerState*                              OwnerPlayerState;                                         // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTabButton");
		return ptr;
	}

};


// Class Squad.SQTeamInfo
// 0x00C0 (0x00E8 - 0x0028)
class USQTeamInfo : public UObject
{
public:
	struct FString                                     ShortName;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NoClear)
	struct FString                                     Name;                                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NoClear)
	struct FText                                       Description;                                              // 0x0048(0x0018) (Edit, BlueprintVisible, NoClear)
	class UClass*                                      SoldierClass;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class UStaticMesh*                                 RallyPointMesh;                                           // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	TArray<class USQRoleSettings*>                     Roles;                                                    // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FSQRoleGroupLimit>                   GroupLimits;                                              // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FSQDeployableLimit>                  DeployableFOBLimits;                                      // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class USQRoleSettings*                             DefaultRole;                                              // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USQRoleSettings*                             LeaveSquadRole;                                           // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  MapFlag;                                                  // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HudFlag;                                                  // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HudBadge;                                                 // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TeamImage;                                                // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   WinningSound;                                             // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   LosingSound;                                              // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   JoinSound;                                                // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamInfo");
		return ptr;
	}

};


// Class Squad.SQTeamInterface
// 0x0000 (0x0028 - 0x0028)
class USQTeamInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamInterface");
		return ptr;
	}


	void OnTeamChange(int PreviousTeam);
	int GetTeamId();
};


// Class Squad.SQTeamSpawnGroup
// 0x0010 (0x04D8 - 0x04C8)
class ASQTeamSpawnGroup : public ASQGameSpawn
{
public:
	TArray<class ASQTeamSpawnPoint*>                   SpawnPoints;                                              // 0x04C8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamSpawnGroup");
		return ptr;
	}

};


// Class Squad.SQTeamPrep
// 0x0018 (0x0348 - 0x0330)
class ASQTeamPrep : public AActor
{
public:
	int                                                TeamID;                                                   // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StagingTimeInSeconds;                                     // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                ReplicatedRemainingTime;                                  // 0x0338(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	class ASQSoldier*                                  LocalSoldier;                                             // 0x0340(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamPrep");
		return ptr;
	}


	int GetStagingTimeRemaining();
};


// Class Squad.SQTeamState
// 0x01E0 (0x0510 - 0x0330)
class ASQTeamState : public AInfo
{
public:
	int                                                Tickets;                                                  // 0x0330(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class ASQTeam*                                     AuthorityTeam;                                            // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ID;                                                       // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              Score;                                                    // 0x0344(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TeamWorkScore;                                            // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ObjectiveScore;                                           // 0x034C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumKills;                                                 // 0x0350(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumDeaths;                                                // 0x0354(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumWoundeds;                                              // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumWounds;                                                // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumTeamkills;                                             // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              HealPoints;                                               // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              RevivedPoints;                                            // 0x0368(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x036C(0x0024) MISSED OFFSET
	class UClass*                                      InfoClass;                                                // 0x0390(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class USQTeamInfo*                                 Info;                                                     // 0x0398(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class ASQSquadState*>                       IndexedSquadStates;                                       // 0x03A0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	TArray<class ASQSquadState*>                       SquadStates;                                              // 0x03B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData02[0x40];                                      // 0x03C0(0x0040) MISSED OFFSET
	TArray<class ASQPlayerState*>                      PlayerStates;                                             // 0x0400(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FSQRoleLimitArray                           IndexedRoleLimits;                                        // 0x0410(0x00C0) (BlueprintVisible, Net)
	TArray<int>                                        IndexedRoleUsage;                                         // 0x04D0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	TArray<struct FSQRoleGroupLimit>                   IndexedRoleGroupLimits;                                   // 0x04E0(0x0010) (BlueprintVisible, Net, ZeroConstructor)
	TArray<int>                                        IndexedRoleGroupUsage;                                    // 0x04F0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	bool                                               bHasNoRoleLimits;                                         // 0x0500(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0501(0x0007) MISSED OFFSET
	class ASQCommanderState*                           CommanderState;                                           // 0x0508(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamState");
		return ptr;
	}


	void ScorePointsDelayed(int Points, const struct FString& Reason);
	void ScorePoints(int Points, const struct FString& Reason);
	void RemovePlayerState(class ASQPlayerState* PlayerState);
	void RefreshSquadStates();
	void OnRep_InfoClass();
	void OnRep_IndexedSquadStates();
	int GetTickets();
	void GetTeamRoleAvailability(class USQRoleSettings* SquadRole, class ASQPlayerState* Player, bool bForDeployment, int* OutAvailable, int* OutTotal, int* OutUsed);
	void GetSquadRoleAvailability(class USQRoleSettings* SquadRole, class ASQPlayerState* Player, bool bForDeployment, int* OutAvailable, int* OutTotal, int* OutUsed);
	void GetRoleGroupAvailability(ESQRoleTypeEnum RoleType, class ASQPlayerState* Player, int* OutAvailable, int* OutTotal, int* OutUsed);
	int GetFirstAvailableSquadId();
	void AddPlayerState(class ASQPlayerState* PlayerState);
};


// Class Squad.SQTeamStatePrivate
// 0x0030 (0x0360 - 0x0330)
class ASQTeamStatePrivate : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	TArray<class ASQSquadStatePrivateToTeam*>          IndexedTeamPrivateSquadStates;                            // 0x0338(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	TArray<class ASQSquadStatePrivateToTeam*>          TeamPrivateSquadStates;                                   // 0x0348(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ID;                                                       // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x035C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamStatePrivate");
		return ptr;
	}


	void OnRep_IndexedTeamPrivateSquadStates();
	int GetId();
};


// Class Squad.SQTemperatureComponent
// 0x0040 (0x0290 - 0x0250)
class USQTemperatureComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    OnTemperatureIncrementEvent;                              // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              IncrementalTriggerTemperature;                            // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TemperatureRange;                                         // 0x0264(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TemperatureDrift;                                         // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AController*                                 LastTempChanger;                                          // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentTemperature;                                       // 0x0278(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              HigherTempTrigger;                                        // 0x027C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LowerTempTrigger;                                         // 0x0280(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0284(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTemperatureComponent");
		return ptr;
	}


	void OnRep_CurrentTemperature(float PreviousTemperature);
	void AdjustTemperature(float DegressOfAdjustment, class AController* TempChanger);
};


// Class Squad.SQTeamSpawnPoint
// 0x0008 (0x04D0 - 0x04C8)
class ASQTeamSpawnPoint : public ASQGameSpawn
{
public:
	class ASQTeamSpawnGroup*                           Group;                                                    // 0x04C8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTeamSpawnPoint");
		return ptr;
	}

};


// Class Squad.SQToolTipBaseWidget
// 0x0010 (0x0218 - 0x0208)
class USQToolTipBaseWidget : public UUserWidget
{
public:
	class USQMap*                                      OwnerMap;                                                 // 0x0208(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USQMapIconWidget*                            ParentWidget;                                             // 0x0210(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQToolTipBaseWidget");
		return ptr;
	}

};


// Class Squad.SQTournamentModeRuleset
// 0x0010 (0x0368 - 0x0358)
class ASQTournamentModeRuleset : public ASQGameRuleSet
{
public:
	TArray<struct FSQSettingsRestriction>              Restrictions;                                             // 0x0358(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTournamentModeRuleset");
		return ptr;
	}

};


// Class Squad.SQToastWidget
// 0x0030 (0x0238 - 0x0208)
class USQToastWidget : public UUserWidget
{
public:
	struct FScriptMulticastDelegate                    ToastTextUpdated;                                         // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FText                                       ToastText;                                                // 0x0218(0x0018) (Edit, BlueprintVisible)
	float                                              InitialLifetime;                                          // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0234(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQToastWidget");
		return ptr;
	}


	void ToastTextUpdatedEvent__DelegateSignature(const struct FText& ToastText);
	void SetToastText(const struct FText& InToastText);
	void SetLifetime(float InLifetime);
	struct FText GetToastText();
};


// Class Squad.SQTournamentModeRulesetState
// 0x0018 (0x0348 - 0x0330)
class ASQTournamentModeRulesetState : public ASQRulesetState
{
public:
	TArray<struct FSQSettingsRestriction>              Restrictions;                                             // 0x0330(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTournamentModeRulesetState");
		return ptr;
	}


	void OnRep_Restrictions();
};


// Class Squad.SQTrackedVehicle
// 0x0000 (0x0AE0 - 0x0AE0)
class ASQTrackedVehicle : public ASQGroundVehicle
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTrackedVehicle");
		return ptr;
	}

};


// Class Squad.SQTrackedVehicleMovementComponent
// 0x0018 (0x0418 - 0x0400)
class USQTrackedVehicleMovementComponent : public UWheeledVehicleMovementComponentTank
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0400(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQTrackedVehicleMovementComponent");
		return ptr;
	}

};


// Class Squad.SQUISettings
// 0x0050 (0x0088 - 0x0038)
class USQUISettings : public UDeveloperSettings
{
public:
	struct FColor                                      Yellow;                                                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	struct FColor                                      Grey;                                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	struct FColor                                      Other;                                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                NeutralColor;                                             // 0x0044(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                FriendlyColor;                                            // 0x0054(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                EnemyColor;                                               // 0x0064(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                SquadColor;                                               // 0x0074(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQUISettings");
		return ptr;
	}

};


// Class Squad.SQUpdateSessionsCallbackProxy
// 0x00D0 (0x00F8 - 0x0028)
class USQUpdateSessionsCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0048(0x00A8) MISSED OFFSET
	class UObject*                                     WorldContextObject;                                       // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQUpdateSessionsCallbackProxy");
		return ptr;
	}


	class USQUpdateSessionsCallbackProxy* STATIC_UpdateSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FName& SessionName);
	struct FSQSessionFlagStruct STATIC_GetSessionFlagStruct(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetServerName(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetSearchKeywords(const struct FBlueprintSessionResult& Result);
	int STATIC_GetPingInMs(const struct FBlueprintSessionResult& Result);
	bool STATIC_GetPasswordProtected(const struct FBlueprintSessionResult& Result);
	int STATIC_GetMaxPlayers(const struct FBlueprintSessionResult& Result);
	int STATIC_GetMatchTimeout(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetMapName(const struct FBlueprintSessionResult& Result);
	bool STATIC_GetLicensedServer(class UObject* WorldContextObject, const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetGameVersion(const struct FBlueprintSessionResult& Result);
	struct FString STATIC_GetGameMode(const struct FBlueprintSessionResult& Result);
	int STATIC_GetCurrentPlayers(const struct FBlueprintSessionResult& Result);
	bool STATIC_GetAnticheatProtected(const struct FBlueprintSessionResult& Result);
};


// Class Squad.SQUsable
// 0x0000 (0x0028 - 0x0028)
class USQUsable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQUsable");
		return ptr;
	}


	void ServerStopUsed(class AController* User);
	void ServerOnUsed(class AController* User);
	struct FSQUsableData GetUsableData();
	int GetInterfaceTeam();
	void BPStopUsed(class AController* User);
	void BPOnUsed(class AController* User);
	void BPHidePrompt();
	void BPDisplayPrompt(class AController* User);
};


// Class Squad.SQVehicleAmmoBox
// 0x0020 (0x06F0 - 0x06D0)
class USQVehicleAmmoBox : public USQVehicleComponent
{
public:
	float                                              HealthWhenFireStarts;                                     // 0x06D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ParentDamageWhenDestroyed;                                // 0x06D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SecondsBetweenDamageEvents;                               // 0x06D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06DC(0x0004) MISSED OFFSET
	class UClass*                                      DamageTypeToInflict;                                      // 0x06E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleAmmoBox");
		return ptr;
	}

};


// Class Squad.SQVehicleAnimInstance
// 0x0020 (0x0990 - 0x0970)
class USQVehicleAnimInstance : public UVehicleAnimInstance
{
public:
	class ASQGroundVehicle*                            Vehicle;                                                  // 0x0970(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEngineActive;                                          // 0x0978(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0979(0x0003) MISSED OFFSET
	struct FRotator                                    SteeringWheelRotation;                                    // 0x097C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0988(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleAnimInstance");
		return ptr;
	}

};


// Class Squad.SQVehicleBurningComponent
// 0x0030 (0x0280 - 0x0250)
class USQVehicleBurningComponent : public USceneComponent
{
public:
	class ASQLastingEffect*                            TemperatureLastingEffect;                                 // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0258(0x0001) MISSED OFFSET
	bool                                               bIsDebugging;                                             // 0x0259(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x025A(0x0002) MISSED OFFSET
	float                                              VehicleBurnRatePct;                                       // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleFlippedBurnRatePct;                                // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SoldierBurnRatePct;                                       // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartBurnHealthPercent;                                   // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	struct FTimerHandle                                EffectTimerHandle;                                        // 0x0270(0x0008)
	struct FTimerHandle                                BurnTimerHandle;                                          // 0x0278(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleBurningComponent");
		return ptr;
	}

};


// Class Squad.SQVehicleClaim
// 0x0038 (0x0060 - 0x0028)
class USQVehicleClaim : public UObject
{
public:
	class ASQVehicle*                                  VehicleClaimed;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	class ASQSquad*                                    ClaimingSquad;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TArray<class ASQPlayerState*>                      PlayersPartyToClaim;                                      // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst)
	ESQVehicleClaimStatus                              Status;                                                   // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              TimeOfClaim;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              TimeOfExpiration;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	bool                                               bExpired;                                                 // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	struct FTimerHandle                                ExpirationTimerHandle;                                    // 0x0058(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleClaim");
		return ptr;
	}


	class ASQVehicle* GetVehicleClaimed();
	float GetTimeUntilExpiration();
	float GetTimeOfClaim();
	ESQVehicleClaimStatus GetStatus();
	class ASQSquad* GetClaimingSquad();
};


// Class Squad.SQVehicleDepotComponent
// 0x0070 (0x02C0 - 0x0250)
class USQVehicleDepotComponent : public USceneComponent
{
public:
	float                                              SecondsPerMag;                                            // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleHealthPerSecond;                                   // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ConstructionPointsPerSecondRepair;                        // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SoldierHealthPerSecond;                                   // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<class ASQVehicle*, float>                     TimeInRearm;                                              // 0x0260(0x0050) (ZeroConstructor, Transient)
	TArray<class AActor*>                              CurrentOverlappedActors;                                  // 0x02B0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleDepotComponent");
		return ptr;
	}

};


// Class Squad.SQVehicleExitPointComponent
// 0x0000 (0x0250 - 0x0250)
class USQVehicleExitPointComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleExitPointComponent");
		return ptr;
	}

};


// Class Squad.SQSquadStateDataCameraman
// 0x0000 (0x01A8 - 0x01A8)
class USQSquadStateDataCameraman : public USQSquadStateDataPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQSquadStateDataCameraman");
		return ptr;
	}

};


// Class Squad.SQVehicleInventoryComponent
// 0x0018 (0x02B8 - 0x02A0)
class USQVehicleInventoryComponent : public USQPawnInventoryComponent
{
public:
	TArray<struct FSQVehicleWeaponConfig>              Weapons;                                                  // 0x02A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class ASQWeapon*                                   BoundResourceWeapon;                                      // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleInventoryComponent");
		return ptr;
	}


	bool HasConstructionWeapon();
	int GetAmmoPoints();
	class ASQWeapon* FindConstructionWeapon();
	class ASQWeapon* FindAmmoWeapon();
};


// Class Squad.SQVehicleMovementComponentInterface
// 0x0000 (0x0028 - 0x0028)
class USQVehicleMovementComponentInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleMovementComponentInterface");
		return ptr;
	}


	void SetShouldSimulate(bool InbShouldSimulate);
	void SetEngineBoostTorqueMultiplier(float InEngineBoostTorqueMultiplier);
	float GetThrottleInput();
	float GetSteeringInput();
	bool GetShouldSimulate();
	float GetRawThrottleInput();
	float GetRawSteeringInput();
	float GetMaxSpringForce();
	float GetHandbrakeInput();
	float GetBrakeInput();
};


// Class Squad.SQVehicleResourceWeaponInventoryComponent
// 0x0040 (0x02F8 - 0x02B8)
class USQVehicleResourceWeaponInventoryComponent : public USQVehicleInventoryComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x02B8(0x0020) MISSED OFFSET
	int                                                CurrentConstructionAmount;                                // 0x02D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                CurrentAmmoAmount;                                        // 0x02DC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                TotalSharedResourceAmount;                                // 0x02E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02E4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnResourcesChangedEvent;                                  // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleResourceWeaponInventoryComponent");
		return ptr;
	}


	void UpdateVisibilities();
	void SetStaticMeshResourcesConstruction(TArray<class UStaticMeshComponent*> InStaticMeshResources);
	void SetStaticMeshResourcesAmmo(TArray<class UStaticMeshComponent*> InStaticMeshResources);
	void OnRep_ResourcesChanged();
	int GetTotalSharedResourceAmount();
	int GetCurrentSharedResourceAmount();
};


// Class Squad.SQVehicleGasCan
// 0x0010 (0x06E0 - 0x06D0)
class USQVehicleGasCan : public USQVehicleComponent
{
public:
	float                                              KillZoneRadius;                                           // 0x06D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageInnerRadius;                                        // 0x06D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageOuterRadius;                                        // 0x06D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageFalloff;                                            // 0x06DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleGasCan");
		return ptr;
	}

};


// Class Squad.SQVehicleSeatComponent
// 0x0070 (0x02C0 - 0x0250)
class USQVehicleSeatComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0250(0x0048) MISSED OFFSET
	int                                                AnimationSeatState;                                       // 0x0298(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x029C(0x0004) MISSED OFFSET
	class ASQVehicleSeat*                              SeatPawn;                                                 // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	class ASQPlayerState*                              SeatedPlayer;                                             // 0x02A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	class ASQSoldier*                                  SeatedSoldier;                                            // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleSeatComponent");
		return ptr;
	}


	bool TransitionComplete();
	void OnRep_SeatPawn();
	void OnRep_AnimationSeatState();
	ESQSoldierSeatState GetSoldierSeatState();
	class USQVehicleInventoryComponent* GetSeatPawnInventory();
	class ASQEquipableItem* GetSeatPawnEquipableItem();
	class ASQVehicleSeat* GetSeatPawn();
	void ChangeSeatState(int StateIndex);
	bool CanSeatBeRepaired(ESQRepairSource RepairSource);
};


// Class Squad.SQVehicleSmokeGenerator
// 0x0038 (0x0B58 - 0x0B20)
class ASQVehicleSmokeGenerator : public ASQVehicleWeapon
{
public:
	class UAudioComponent*                             SmokeGeneratorSound;                                      // 0x0B20(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQGroundVehicle*                            VehicleRef;                                               // 0x0B28(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UParticleSystemComponent*>            SmokeGenerators;                                          // 0x0B30(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	class USoundBase*                                  LoopingSmokeGenSound;                                     // 0x0B40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeInDuration;                                           // 0x0B48(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeoutDuration;                                          // 0x0B4C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  EndUseSound;                                              // 0x0B50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleSmokeGenerator");
		return ptr;
	}


	void SetupParticleSystem(class AActor* OwnerActor);
	void ServerUseGenerator();
	void ServerStopGenerator();
	void MulticastDeactivate();
	void MulticastActivate();
};


// Class Squad.SQVehicleSpawner
// 0x0030 (0x0360 - 0x0330)
class ASQVehicleSpawner : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class UClass*                                      VehicleClass;                                             // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RespawnTimer;                                             // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESQTeam                                            Team;                                                     // 0x0344(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0345(0x0003) MISSED OFFSET
	float                                              SpawnDelay;                                               // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	class ASQVehicle*                                  TrackedVehicle;                                           // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                NextRespawnTime;                                          // 0x0358(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x035C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleSpawner");
		return ptr;
	}


	void OnVehicleDestroyed(class ASQVehicle* Vehicle);
	ESQTeam GetTeam();
};


// Class Squad.SQVehicleTrack
// 0x0000 (0x06E0 - 0x06E0)
class USQVehicleTrack : public USQDriveTrainComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleTrack");
		return ptr;
	}

};


// Class Squad.SQVehicleTurret
// 0x0000 (0x04C0 - 0x04C0)
class ASQVehicleTurret : public ASQVehicleSeat
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleTurret");
		return ptr;
	}


	bool IsCurrentWeaponInputEnabled();
};


// Class Squad.SQVehicleTurretClosedTop
// 0x0060 (0x0520 - 0x04C0)
class ASQVehicleTurretClosedTop : public ASQVehicleTurret
{
public:
	class USoundBase*                                  StabilizationToggleSound;                                 // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GunLineOfSightSeatIndex;                                  // 0x04C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	class UClass*                                      TurretOverlay;                                            // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CurrentZoom;                                              // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04DC(0x0004) MISSED OFFSET
	TArray<float>                                      ZoomLevels;                                               // 0x04E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                                  ZoomToggleSound;                                          // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomToggleSoundPitch;                                     // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x24];                                      // 0x04FC(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleTurretClosedTop");
		return ptr;
	}


	void ResetZoom();
	class USQMovementComponentBase* GetYawMovementComponent();
	class USQMovementComponentBase* GetPitchMovementComponent();
	void BP_OnVehicleZoom();
};


// Class Squad.SQVehicleTurretOpenTop
// 0x0010 (0x04D0 - 0x04C0)
class ASQVehicleTurretOpenTop : public ASQVehicleTurret
{
public:
	class USQRotatingMovementComponent*                PitchMovementComponent;                                   // 0x04C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleTurretOpenTop");
		return ptr;
	}

};


// Class Squad.SQVehicleWeaponAnimInstance
// 0x0010 (0x0370 - 0x0360)
class USQVehicleWeaponAnimInstance : public UAnimInstance
{
public:
	float                                              CurrentMagRemainingRoundsTime;                            // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentMagRemainingRoundsMultiplier;                      // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleWeaponAnimInstance");
		return ptr;
	}

};


// Class Squad.SQVehicleWeaponTOW
// 0x0068 (0x0B88 - 0x0B20)
class ASQVehicleWeaponTOW : public ASQVehicleWeapon
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0B20(0x0010) MISSED OFFSET
	class UClass*                                      ViewWidgetClass;                                          // 0x0B30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   ReticlePPMatCPP;                                          // 0x0B38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MissileRotationSpeed;                                     // 0x0B40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimStartOffset;                                           // 0x0B44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimMaxDistance;                                           // 0x0B48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileCorrectionDistance;                             // 0x0B4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FOVMultiplier;                                            // 0x0B50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SceneFringeIntensityInZoom;                               // 0x0B54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PPBlendWeight;                                            // 0x0B58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FireDelay;                                                // 0x0B5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCameraComponent*                            CameraComponent;                                          // 0x0B60(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASQHUD*                                      LastPlayerHud;                                            // 0x0B68(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0B70(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleWeaponTOW");
		return ptr;
	}


	void DelayedFireWeapon();
	void BlueprintOnPreFire();
};


// Class Squad.SQVehicleWheel
// 0x0000 (0x06E0 - 0x06E0)
class USQVehicleWheel : public USQDriveTrainComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleWheel");
		return ptr;
	}


	struct FName GetBoneName();
};


// Class Squad.SQVehicleWheel_Front
// 0x0000 (0x00F8 - 0x00F8)
class USQVehicleWheel_Front : public UVehicleWheel
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleWheel_Front");
		return ptr;
	}

};


// Class Squad.SQVehicleWheel_Rear
// 0x0000 (0x00F8 - 0x00F8)
class USQVehicleWheel_Rear : public USQVehicleWheel_Front
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleWheel_Rear");
		return ptr;
	}

};


// Class Squad.SQVehicleWheel_Tracked
// 0x0010 (0x0108 - 0x00F8)
class USQVehicleWheel_Tracked : public UVehicleWheel
{
public:
	struct FVector                                     SuspensionDirection;                                      // 0x00F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleWheel_Tracked");
		return ptr;
	}

};


// Class Squad.SQVelocityRotatingMovementComponent
// 0x00F0 (0x02C0 - 0x01D0)
class USQVelocityRotatingMovementComponent : public USQMovementComponentBase
{
public:
	float                                              AngularDeltaCombineThreshold;                             // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET
	class USceneComponent*                             UpdatedComponent;                                         // 0x01D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	float                                              AccelerationMultiplier;                                   // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              NoInputDecelerationMultiplier;                            // 0x01E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DecelerationMultiplier;                                   // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bEnableStabilization;                                     // 0x01EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01ED(0x0003) MISSED OFFSET
	float                                              StabilizationSpeed;                                       // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FSQRotationConstraints                      RotationConstraints;                                      // 0x01F4(0x001C) (Edit, BlueprintVisible)
	class UCurveFloat*                                 ParentYawToMinPitch;                                      // 0x0210(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ParentYawToMaxPitch;                                      // 0x0218(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USQVelocityRotatingMovementComponent*        HeadingParentComponent;                                   // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x48];                                      // 0x0228(0x0048) MISSED OFFSET
	struct FSQRotationVelocityRepMovement              RotationReplicatedMovement;                               // 0x0270(0x0050) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVelocityRotatingMovementComponent");
		return ptr;
	}


	bool ToggleStabilization();
	void SetStabilizationTargetHeading(const struct FRotator& InTargetHeading);
	void SetStabilizationEnabled(bool bInIsStabilizationEnabled);
	void ServerSetStabilizationTargetHeading(const struct FRotator& InTargetHeading);
	void OnRep_RotationReplicatedMovement();
	bool IsStabilizationEnabled();
	struct FQuat GetWorldRotation();
	struct FRotator GetCurrentRotation();
	struct FVector GetCurrentLocation();
	void ClientSetStabilizationTargetHeading(const struct FRotator& InTargetHeading);
	void ClientAdjustRotation(float Timestamp, const struct FVector& InRotation, const struct FVector& InRotationalVelocity);
	void AddRotationInput(const struct FRotator& InRotationInput);
};


// Class Squad.SQWaterVolume
// 0x0018 (0x0390 - 0x0378)
class ASQWaterVolume : public APhysicsVolume
{
public:
	float                                              WaterForce;                                               // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	TArray<TWeakObjectPtr<class ASQSoldier>>           SoldiersInVolume;                                         // 0x0380(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWaterVolume");
		return ptr;
	}

};


// Class Squad.SQWeaponAnimInstance
// 0x0010 (0x03A0 - 0x0390)
class USQWeaponAnimInstance : public USQItemAnimInstance
{
public:
	float                                              NotMagHasAmmoAlpha;                                       // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentMagRemainingRoundsTime;                            // 0x0394(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentMagRemainingRoundsMultiplier;                      // 0x0398(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdjustAdsSightItemAnimPos;                                // 0x039C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWeaponAnimInstance");
		return ptr;
	}

};


// Class Squad.SQVehicleComponentBluePrintable
// 0x0000 (0x06D0 - 0x06D0)
class USQVehicleComponentBluePrintable : public USQVehicleComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQVehicleComponentBluePrintable");
		return ptr;
	}

};


// Class Squad.SQWeaponAttachment
// 0x0010 (0x0610 - 0x0600)
class USQWeaponAttachment : public UStaticMeshComponent
{
public:
	class ASQWeapon*                                   AttachedWeapon;                                           // 0x0600(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowIn1P;                                                // 0x0608(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowIn3P;                                                // 0x0609(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x060A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWeaponAttachment");
		return ptr;
	}

};


// Class Squad.SQWeaponAttachment_Scope
// 0x00A0 (0x06B0 - 0x0610)
class USQWeaponAttachment_Scope : public USQWeaponAttachment
{
public:
	float                                              MeshTransitionPercentage;                                 // 0x0610(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0614(0x0004) MISSED OFFSET
	class UStaticMesh*                                 ADSMesh;                                                  // 0x0618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ADSMeshTransform;                                         // 0x0620(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	class UStaticMesh*                                 NonADSMesh;                                               // 0x0650(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0658(0x0008) MISSED OFFSET
	struct FTransform                                  NonADSMeshTransform;                                      // 0x0660(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<struct FSQMeshTransitionSettings>           InToADSMeshTransitionSettings;                            // 0x0690(0x0010) (Edit, ZeroConstructor)
	TArray<struct FSQMeshTransitionSettings>           OutFromADSMeshTransitionSettings;                         // 0x06A0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWeaponAttachment_Scope");
		return ptr;
	}


	void ShowADSMesh();
	void SetMeshTransitionSetting(const struct FSQMeshTransitionSettings& MeshTransitionSetting);
	void HideADSMesh();
};


// Class Squad.ADSPostProcessSettings
// 0x04F0 (0x0520 - 0x0030)
class UADSPostProcessSettings : public UDataAsset
{
public:
	class UCurveFloat*                                 BlendCurve;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	struct FPostProcessSettings                        PPSettings;                                               // 0x0040(0x04E0) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.ADSPostProcessSettings");
		return ptr;
	}

};


// Class Squad.SQWheeledVehicle
// 0x0000 (0x0AE0 - 0x0AE0)
class ASQWheeledVehicle : public ASQWheeledVehicleBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWheeledVehicle");
		return ptr;
	}

};


// Class Squad.SQWheeledVehicleMovementComponent
// 0x0018 (0x0468 - 0x0450)
class USQWheeledVehicleMovementComponent : public UWheeledVehicleMovementComponent4W
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0450(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWheeledVehicleMovementComponent");
		return ptr;
	}

};


// Class Squad.SQWeaponStaticInfo
// 0x0458 (0x0930 - 0x04D8)
class USQWeaponStaticInfo : public USQItemStaticInfo
{
public:
	class UAnimMontage*                                ReloadBipodWeaponMontage;                                 // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadBipod1pMontage;                                     // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadBipod3pMontage;                                     // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadDryWeaponMontage;                                   // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadDry1pMontage;                                       // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadDry3pMontage;                                       // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadDryBipodWeaponMontage;                              // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadDryBipod1pMontage;                                  // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadDryBipod3pMontage;                                  // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        RandomFire1pMontage;                                      // 0x0520(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UAnimMontage*                                FireAdd3pMontage;                                         // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireTriggerWeaponMontage;                                 // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireTrigger1pMontage;                                     // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireTrigger3pMontage;                                     // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireSway1pMontage;                                        // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireSway1pBlendInMontage;                                 // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireAds1pMontage;                                         // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireAds3pMontage;                                         // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireBipodWeaponMontage;                                   // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireBipod1pMontage;                                       // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireBipod3pMontage;                                       // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireAddBipod1pMontage;                                    // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireAddBipod3pMontage;                                    // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSQMontageSectionNames                      BipodEndLoopSectionNames;                                 // 0x0598(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UAnimMontage*                                BipodWeaponMontage;                                       // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Bipod1pMontage;                                           // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Bipod3pMontage;                                           // 0x05D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FiremodeBipodMontage;                                     // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FiremodeBipodWeaponMontage;                               // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FiremodeMontage;                                          // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FiremodeWeaponMontage;                                    // 0x05F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BobbingAimProneSway1pMontage;                             // 0x05F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BobbingAim1pMontage;                                      // 0x0600(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleFlashCullDistanceInMeters;                          // 0x0608(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x060C(0x0004) MISSED OFFSET
	struct FName                                       MuzzleFlashEffectSocket;                                  // 0x0610(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MuzzleFlashEffect1P;                                      // 0x0618(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MuzzleFlashEffect3P;                                      // 0x0620(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShellEjectionCullDistanceInMeters;                        // 0x0628(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x062C(0x0004) MISSED OFFSET
	struct FName                                       ShellEjectionEffectSocket;                                // 0x0630(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ShellEjectionEffect1p;                                    // 0x0638(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ShellEjectionEffect3p;                                    // 0x0640(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCameraOffsetFactor;                                 // 0x0648(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCameraOffsetInterpSpeed;                            // 0x064C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilLofCameraOffsetLimit;                               // 0x0650(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilLofAttackInterpSpeed;                               // 0x0654(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCanReleaseInterpSpeed;                              // 0x0658(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilLofReleaseInterpSpeed;                              // 0x065C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilWeaponRelLocFactor;                                 // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RecoilCameraShotInterpSpeed;                              // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilAdsCameraShotInterpSpeed;                           // 0x0668(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MoveRecoilFactorRelease;                                  // 0x066C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddMoveRecoil;                                            // 0x0670(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveRecoilFactor;                                      // 0x0674(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinMoveRecoilFactor;                                      // 0x0678(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LowStaminaRecoilFactor;                                   // 0x067C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FullStaminaRecoilFactor;                                  // 0x0680(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneAdsRecoilMean;                                       // 0x0684(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneAdsRecoilSigma;                                      // 0x0690(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneRecoilMean;                                          // 0x069C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneRecoilSigma;                                         // 0x06A8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchAdsRecoilMean;                                      // 0x06B4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchAdsRecoilSigma;                                     // 0x06C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchRecoilMean;                                         // 0x06CC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchRecoilSigma;                                        // 0x06D8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandAdsRecoilMean;                                       // 0x06E4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandAdsRecoilSigma;                                      // 0x06F0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandRecoilMean;                                          // 0x06FC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StandRecoilSigma;                                         // 0x0708(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneTransitionRecoilMean;                                // 0x0714(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProneTransitionRecoilSigma;                               // 0x0720(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodAdsRecoilMean;                                       // 0x072C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodAdsRecoilSigma;                                      // 0x0738(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodRecoilMean;                                          // 0x0744(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BipodRecoilSigma;                                         // 0x0750(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DeviationVisuFbInterpSpeed_YZ;                            // 0x075C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DeviationVisuFbInterpSpeed_Final;                         // 0x0760(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DeviationVisuFbMax;                                       // 0x0764(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinShotDeviationFactor;                                   // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxShotDeviationFactor;                                   // 0x076C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddShotDeviationFactor;                                   // 0x0770(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddShotDeviationFactorAds;                                // 0x0774(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShotDeviationFactorRelease;                               // 0x0778(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LowStaminaDeviationFactor;                                // 0x077C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FullStaminaDeviationFactor;                               // 0x0780(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MoveDeviationFactorRelease;                               // 0x0784(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddMoveDeviation;                                         // 0x0788(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveDeviationFactor;                                   // 0x078C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinMoveDeviationFactor;                                   // 0x0790(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinBipodAdsDeviation;                                     // 0x0794(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinBipodDeviation;                                        // 0x0798(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinProneAdsDeviation;                                     // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinProneDeviation;                                        // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinCrouchAdsDeviation;                                    // 0x07A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinCrouchDeviation;                                       // 0x07A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinStandAdsDeviation;                                     // 0x07AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinStandDeviation;                                        // 0x07B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinProneTransitionDeviation;                              // 0x07B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SwayInterpSpeed_YZ;                                       // 0x07B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SwayInterpSpeed_Final;                                    // 0x07BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HasSway;                                                  // 0x07C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MoveSwayFactorRelease;                                    // 0x07C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddMoveSway;                                              // 0x07C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinMoveSwayFactor;                                        // 0x07CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveSwayFactor;                                        // 0x07D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LowStaminaSwayFactor;                                     // 0x07D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FullStaminaSwayFactor;                                    // 0x07D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HoldingBreathSwayFactor;                                  // 0x07DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProneAdsSwayMin;                                          // 0x07E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProneSwayMin;                                             // 0x07E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CrouchAdsSwayMin;                                         // 0x07E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CrouchSwayMin;                                            // 0x07EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StandAdsSwayMin;                                          // 0x07F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StandSwayMin;                                             // 0x07F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProneTransitionSwayMin;                                   // 0x07F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBipod;                                                // 0x07FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x07FD(0x0003) MISSED OFFSET
	float                                              BipodLength;                                              // 0x0800(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BipodHeightRaw;                                           // 0x0804(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasAdjustableSight;                                      // 0x0808(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bLeanHeadWhenAds;                                         // 0x0809(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x080A(0x0006) MISSED OFFSET
	TArray<struct FSQAdjustableSightMontageSet>        AdsSightsAnim;                                            // 0x0810(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UAnimMontage*                                BaseAds1pMontage;                                         // 0x0820(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                AdsTransition1pMontage;                                   // 0x0828(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FromAdsTransition1pMontage;                               // 0x0830(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AdjustableAdsSightItemAnim;                               // 0x0838(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdjustableAdsSightItemFrameRate;                          // 0x0840(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasAdsTransition;                                        // 0x0844(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0845(0x0003) MISSED OFFSET
	struct FVector                                     Aim1pWeaponMeshPosition;                                  // 0x0848(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Aim1pWeaponMeshRescale;                                   // 0x0854(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Steady1pHipFireDuration;                                  // 0x0860(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlaySoundOnMagEmpty;                                     // 0x0864(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0865(0x0003) MISSED OFFSET
	int                                                PlaySoundOnEmptyUse;                                      // 0x0868(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PlaySoundOnEmptyAltUse;                                   // 0x086C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundCue*                                   ToggleFiremodeSound1P;                                    // 0x0870(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ToggleFiremodeSound3P;                                    // 0x0878(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FromAdsSound1p;                                           // 0x0880(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FromAdsSound3p;                                           // 0x0888(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ToAdsSound1p;                                             // 0x0890(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ToAdsSound3p;                                             // 0x0898(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SightSwitchingSound1p;                                    // 0x08A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SightSwitchingSound3p;                                    // 0x08A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   MagEmptySound1p;                                          // 0x08B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   MagEmptySound3p;                                          // 0x08B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EmptyUseSound1p;                                          // 0x08C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EmptyUseSound3p;                                          // 0x08C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EmptyAltUseSound1p;                                       // 0x08D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EmptyAltUseSound3p;                                       // 0x08D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSQMontageSectionNames                      BobbingAimEndLoopSectionNames;                            // 0x08E0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       DefaultZeroingText;                                       // 0x0908(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       AimDirectionSocketName;                                   // 0x0920(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowZeroingInHud;                                        // 0x0928(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0929(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWeaponStaticInfo");
		return ptr;
	}

};


// Class Squad.SQWorldSettings
// 0x0FA8 (0x1500 - 0x0558)
class ASQWorldSettings : public AWorldSettings
{
public:
	class UClass*                                      TeamOneInfoClass;                                         // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTeamType                                        TeamOneType;                                              // 0x0560(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0561(0x0007) MISSED OFFSET
	class UClass*                                      TeamTwoInfoClass;                                         // 0x0568(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESQTeamType                                        TeamTwoType;                                              // 0x0570(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0571(0x0003) MISSED OFFSET
	int                                                TeamOneTickets;                                           // 0x0574(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamTwoTickets;                                           // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                EditorStartTeamOverride;                                  // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MapGridSpacing;                                           // 0x0580(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      MapTextureCornerZero;                                     // 0x0588(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      MapTextureCornerOne;                                      // 0x0590(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0598(0x0008) MISSED OFFSET
	struct FSQMinimapMakerSettings                     MinimapMakerSettings;                                     // 0x05A0(0x0500) (Edit, BlueprintVisible)
	class UClass*                                      DefaultPawnClassOverride;                                 // 0x0AA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultWeaponClassOverride;                               // 0x0AA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      MapCameraLocation;                                        // 0x0AB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                EditorRaasSeedOverride;                                   // 0x0AB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0ABC(0x0004) MISSED OFFSET
	TArray<class UClass*>                              MapRulesets;                                              // 0x0AC0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bForceDisableEditorDirectSpawning;                        // 0x0AD0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanDriverSwitchTo3rdPerson;                              // 0x0AD1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseFogOfWar;                                             // 0x0AD2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x5];                                       // 0x0AD3(0x0005) MISSED OFFSET
	TArray<struct FSQRoleLimitOverride>                TeamOneRoleLimitOverrides;                                // 0x0AD8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FSQRoleLimitOverride>                TeamTwoRoleLimitOverrides;                                // 0x0AE8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       DisplayTitle;                                             // 0x0AF8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FPostProcessSettings                        DeadPostProcessSettings;                                  // 0x0B10(0x04E0) (Edit, BlueprintVisible)
	struct FPostProcessSettings                        MatchNotInProgressPostProcessSettings;                    // 0x0FF0(0x04E0) (Edit, BlueprintVisible)
	bool                                               bDeployablePlacementAlwaysValid;                          // 0x14D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bForceNoKitLimits;                                        // 0x14D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bForceNoTeamChangeTimer;                                  // 0x14D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bForceNoRespawnTime;                                      // 0x14D3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bForceOutOfBoundsKillDisabled;                            // 0x14D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bForceVehicleClaimingDisabled;                            // 0x14D5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bVehicleTeamRequirementDisabled;                          // 0x14D6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bVehicleKitRequirementDisabled;                           // 0x14D7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bForcePlayerNotAdminInEditor;                             // 0x14D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bForcePlayerNotDevInEditor;                               // 0x14D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bForcePlayerNotQAInEditor;                                // 0x14DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bForcePlayerNotMemberInEditor;                            // 0x14DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x14DC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMapTextureChange;                                       // 0x14E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                SeaLevel;                                                 // 0x14F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x14F4(0x0004) MISSED OFFSET
	class UTexture*                                    MapTexture;                                               // 0x14F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Squad.SQWorldSettings");
		return ptr;
	}


	void SetMapTexture(class UTexture* Value);
};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
